[
	{
		"status": "needs-revision",
		"sentInByUser": null,
		"type": "radio",
		"codeSandboxExample": "",
		"codeBlock": "",
		"id": "0311bee7-e793-45bd-bd7a-e22833b3de93",
		"question": "Dynamic imports is quite new and around but what’s the deal, do you know what it is, if yes please reveal!",
		"correctAnswers": [
			{
				"value": "You can import ",
				"id": "b73807aa-adc2-4324-96b2-7baf6710584d"
			}
		],
		"voted": [],
		"answers": [
			{
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"value": "It is a way to import any programming language\nIn JavaScript",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"id": "b73807aa-adc2-4324-96b2-7baf6710584d",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": true,
				"value": "You can import "
			}
		],
		"pollNumber": 203,
		"category": "javascript"
	},
	{
		"sentInByUser": null,
		"category": "css",
		"answers": [
			{
				"autoFocus": false,
				"type": "radio",
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"value": "[data-attribute] {\n  /* style rules go here */\n}",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "72930634-fca6-49a4-8eeb-1fdf7a6c448d",
				"value": "{data-attribute} {\n  /* style rules go here */\n}",
				"type": "radio",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"value": "(data-attribute) {\n  /* style rules go here */\n}",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "dc9a655b-86ed-4b1d-9804-ed07abf26d72",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"id": "9979755a-5a4b-407d-846d-eecbbc71ac28",
				"type": "radio",
				"placeholder": "Add option",
				"value": "`data-attribute` {\n  /* style rules go here */\n}"
			},
			{
				"id": "8d5158f8-3043-477c-a053-945ccead7658",
				"blockType": "text",
				"autoFocus": false,
				"value": "$data-attribute$ {\n  /* style rules go here */\n}",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "becab1c8-96c4-45c2-98e6-31eb7f0a552e",
				"placeholder": "Add option",
				"value": "^data-attribute^ {\n  /* style rules go here */\n}",
				"type": "radio",
				"autoFocus": false
			},
			{
				"value": ".data-attribute {\n  /* style rules go here */\n}",
				"id": "64a38ebf-2a6a-4085-87ae-6421b2f4f19c",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "data-attribute {\n  /* style rules go here */\n}",
				"autoFocus": true,
				"placeholder": "Add option",
				"id": "2a4598e2-5a32-4838-af72-c61d9de19a47"
			}
		],
		"status": "new",
		"question": "Use the proper syntax or your styles will falter and fail, what is the correct syntax for styling attributes, do you know this detail? ",
		"codeBlock": "",
		"codeSandboxExample": "",
		"correctAnswers": [
			{
				"id": "eioozak-ojnab",
				"value": "[data-attribute] {\n  /* style rules go here */\n}"
			}
		],
		"id": "f2150ea3-89ed-48fb-9314-3821f6a05cc4",
		"voted": [],
		"type": "radio",
		"pollNumber": 202
	},
	{
		"answers": [
			{
				"value": "ID's can only have a single level of specificity, while when using classes you can chain specificity",
				"id": "eioozak-ojnab",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "ID's have a lower specificity than classes",
				"autoFocus": false,
				"id": "172e6e37-519e-44bf-aca0-cca7ec35eaa6",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"id": "e81f057f-f89b-4a84-8147-03ba43d9404b",
				"placeholder": "Add option",
				"value": "An element can only have a single ID. Classes can be applied to multiple elements",
				"type": "radio"
			},
			{
				"id": "0c1c10fa-0bac-48d6-9da7-44d98d192a50",
				"type": "radio",
				"value": "An ID is used for repeated elements like lists items to improve performance, classes are not unique",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"type": "radio",
				"id": "56ac32e4-2d4c-4a7b-906f-5f70758c5d0e",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "ID's have a higher specificity than classes",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "Classes default to the element to be block, when using ID's the default is display of the element is inline ",
				"blockType": "text",
				"id": "024b3b5b-1963-46a7-b10b-c57c3f0f8d49",
				"autoFocus": false
			},
			{
				"type": "radio",
				"value": "When using ID's on an element you cannot use classes on an element",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "2fa4ed89-fdc6-4764-b714-f816e592273a",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"value": "An ID can only be applied once like: <div id=\"unique\">, while the following <div id=\"unique another-unique-id\"> is not allowed",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "7f37fc9e-7c8b-4b81-80a9-69e2a85437ea"
			},
			{
				"blockType": "text",
				"id": "3a080fdf-5a25-4a9b-8354-ee6683bb1a6c",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "ID's create scope, while classes do not",
				"type": "radio"
			},
			{
				"autoFocus": true,
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Using an ID is evenly specific when using .class.class.class.class.class.class.class.class.class.class",
				"id": "2e9db048-2d75-4f7b-a2b2-cfb260c8224e"
			}
		],
		"category": "css",
		"codeSandboxExample": "",
		"question": "This language we use to create UI’s that impress, what are key differences between classes and IDs in CSS?",
		"type": "checkbox",
		"status": "new",
		"codeBlock": "",
		"correctAnswers": [
			{
				"value": "An element can only have a single ID. Classes",
				"id": "e81f057f-f89b-4a84-8147-03ba43d9404b"
			},
			{
				"value": "ID's have a higher specificity than classes",
				"id": "56ac32e4-2d4c-4a7b-906f-5f70758c5d0e"
			}
		],
		"sentInByUser": null,
		"id": "17173470-eb70-4a8f-84f4-ef2aee53ea4e",
		"voted": [],
		"pollNumber": 201
	},
	{
		"status": "new",
		"sentInByUser": null,
		"correctAnswers": [
			{
				"value": "It is an API provided by the browser",
				"id": "ad3fdfff-e39a-4d90-a5be-0595c2bb93c3"
			}
		],
		"answers": [
			{
				"id": "eioozak-ojnab",
				"autoFocus": false,
				"value": "It is part of the EcmaScript Standard",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "ca754988-d3e8-440e-b840-0a78ebb85d62",
				"blockType": "text",
				"autoFocus": false,
				"value": "It is part of the JavaScript runtime (e.g Chrome’s V8)"
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "It is part of the general internet",
				"id": "7a587953-02bf-48e7-9d98-b177d3b6377b"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "b2acd917-e654-4dc6-8ad8-d55161fb71f7",
				"autoFocus": false,
				"value": "It is part of the Node environment",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"value": "It is an API provided by the browser but has it’s own implementations in other environments",
				"type": "radio",
				"placeholder": "Add option",
				"id": "ad3fdfff-e39a-4d90-a5be-0595c2bb93c3"
			},
			{
				"placeholder": "Add option",
				"id": "a0154e21-b6be-4732-b6a1-05c2bd221756",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"value": "It is a library developed by the W3C that is used in different  environments"
			},
			{
				"autoFocus": true,
				"blockType": "text",
				"placeholder": "Add option",
				"value": "The console API is installed with npm install console -g",
				"id": "880fbdf0-42c8-4641-b0ef-5724c7cc020d",
				"type": "radio"
			}
		],
		"codeBlock": "",
		"codeSandboxExample": "",
		"voted": [],
		"pollNumber": 200,
		"id": "b4dfb5f7-40e5-4335-8ec1-2ba9511a22ff",
		"question": "console.log is probably one of the commands most used by beginners and veterans, knowing the following question means you have frontend at heart, of what environment is this console API part?\n ",
		"type": "radio",
		"category": "javascript"
	},
	{
		"type": "radio",
		"id": "e968e7a6-2c1b-4917-8a48-53ef298a5f04",
		"correctAnswers": [
			{
				"value": ".showModal()",
				"id": "be51b44c-d683-4e5b-ac09-4cbd75a503b6"
			},
			{ "value": ".show()", "id": "242e09f3-0ad4-45dc-8e5a-ac01754502b4" }
		],
		"status": "new",
		"codeBlock": "",
		"question": "When modals are displayed backdrops are often seen, when using the <dialog> element what action is required to show the backdrop on your screen?",
		"answers": [
			{
				"id": "eioozak-ojnab",
				"blockType": "text",
				"value": "Calling a function called \".getBackdrop()\"",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false
			},
			{
				"id": "c7057c5b-e02c-4aa6-84fa-86de7c735801",
				"placeholder": "Add option",
				"type": "radio",
				"value": "It will automatically show the backdrop when applying “open” attribute on the <dialog> element",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"value": "The useBackdrop() hook should be initialised ",
				"id": "7eeaf277-8d50-44cd-b200-eba45c2df2e1",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"id": "471cfd96-f91f-4387-99bb-d3db810e24f3",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "A backdrop is something that comes out of the box with using <dialog>; You have to create the "
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"id": "945d3466-b41d-4a9b-ad47-3da691c5866b",
				"type": "radio",
				"placeholder": "Add option",
				"value": "There is no backdrop, you have to create it yourself with custom divs"
			},
			{
				"value": "By calling a function called \".showModal()\"",
				"id": "be51b44c-d683-4e5b-ac09-4cbd75a503b6",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "By adding a post-css plugin that support <dialog> backdrops",
				"autoFocus": false,
				"id": "5f5b907d-a60b-4ba5-b9ab-cc0fbfa4fc56",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "09a9916e-39fb-4144-8604-acc8da2d9144",
				"autoFocus": true,
				"value": "Just implement <dialog> and it will work ",
				"type": "radio",
				"blockType": "text"
			}
		],
		"codeSandboxExample": "",
		"sentInByUser": null,
		"category": "general-frontend",
		"pollNumber": 199,
		"voted": []
	},
	{
		"correctAnswers": [
			{
				"id": "0ab28301-bf23-458a-a539-c9ca030105c8",
				"value": "includes"
			}
		],
		"pollNumber": 198,
		"voted": [],
		"sentInByUser": null,
		"codeBlock": "",
		"status": "new",
		"question": "Among it’s array elements this method will return a boolean when the element is found, as what array method does this sound?",
		"codeSandboxExample": "",
		"type": "radio",
		"id": "784eef74-a935-4317-86e7-ebf91dc67b63",
		"answers": [
			{
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"value": "find",
				"id": "eioozak-ojnab",
				"placeholder": "Add option"
			},
			{
				"value": "map",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "e74cf49e-28bc-49a1-82cd-68d9f9542f99",
				"type": "radio",
				"autoFocus": false
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"id": "d7b7e7a8-425f-43d0-9986-dc1564a08d6b",
				"value": "reduce"
			},
			{
				"autoFocus": false,
				"id": "0ab28301-bf23-458a-a539-c9ca030105c8",
				"value": "includes",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"value": "findIndex",
				"id": "34a18ca3-a8c2-485f-8dfc-a170424a06cf",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "at",
				"autoFocus": false,
				"type": "radio",
				"id": "3314145f-20f5-4e95-8608-859122b9e59e"
			},
			{
				"value": "findElement",
				"placeholder": "Add option",
				"id": "732c7402-4260-43e6-b893-c6aacb8fd204",
				"type": "radio",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"id": "87a536c9-29be-4c66-9f68-e0f868ac8d56",
				"blockType": "text",
				"value": "querySelector",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"value": "from",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "09906c8e-87eb-4bd4-8409-430333ad7398"
			},
			{
				"type": "radio",
				"autoFocus": true,
				"id": "a217dc3d-5abc-4d2e-9fba-f95d55b88f64",
				"value": "haystack",
				"placeholder": "Add option",
				"blockType": "text"
			}
		],
		"category": "javascript"
	},
	{
		"codeSandboxExample": "",
		"voted": [],
		"id": "efed38d6-32d4-4e07-ac8b-26110dd23ee9",
		"pollNumber": 197,
		"correctAnswers": [
			{
				"value": ":first-of-type",
				"id": "1b8392ad-d0f5-4cd5-9fff-06f9d39a2b5d"
			}
		],
		"codeBlock": "<section>\n   <h1></h1>\n   <p></p>\n   <p></p>\n   <p></p>\n</section>\n",
		"status": "new",
		"answers": [
			{
				"type": "radio",
				"id": "eioozak-ojnab",
				"value": ":first-child",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": ":only-child",
				"id": "8404f9ce-8898-46a1-9512-abea7bc27a15",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"value": ":is",
				"id": "1e408990-a69c-48aa-b954-45b29a92ce3e",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "a8b89162-3516-46db-b237-91c6b7a9b018",
				"autoFocus": false,
				"value": ":where",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "1b8392ad-d0f5-4cd5-9fff-06f9d39a2b5d",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": ":first-of-type",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "91c96b6d-7cd3-417c-b006-8627bbaabcc6",
				"placeholder": "Add option",
				"value": "first-of-tag",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"autoFocus": true,
				"value": ":where(:first-child)",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "1b58a144-3925-497b-a11c-2f7f30492be5"
			}
		],
		"question": "This question has just a single answer to be accepted, how is the first <p> tag selected?",
		"category": "css",
		"type": "radio",
		"sentInByUser": null
	},
	{
		"voted": [],
		"codeBlock": "",
		"correctAnswers": [
			{
				"value": ".tricky-triangle { \n  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n  background: red;\n  width: 100px;\n  height: 100px;\n}",
				"id": "eioozak-ojnab"
			}
		],
		"id": "adcc77af-b0b2-4064-b448-cc9d7b220bbe",
		"codeSandboxExample": "",
		"question": "Circles, squares, ovals, all figures we often need, triangles as the trickier one of all, which code from below will help you succeed?",
		"category": "css",
		"sentInByUser": null,
		"status": "new",
		"pollNumber": 196,
		"type": "radio",
		"answers": [
			{
				"autoFocus": false,
				"value": ".tricky-triangle { \n  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n  background: red;\n  width: 100px;\n  height: 100px;\n}",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "eioozak-ojnab",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"id": "d209538d-be13-4978-95c1-3c6133cf48a0",
				"value": ".tricky-triangle { \n  background: red;\n  width: 100px;\n  height: 100px;\n}",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"value": ".tricky-triangle { \n  background: red;\n  width: 100px;\n  height: 100px;\n  filter: triangle (10px, 10px, 50px);\n}",
				"id": "7b8ac72b-22a2-4a9b-9042-67403184dac4",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": ".tricky-triangle { \n  background: red;\n  width: 100px;\n  height: 100px;\n  shape: \"triangle\" \n}",
				"id": "1e853a8e-0578-4910-9ac1-a9f7c5733138",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false
			},
			{
				"value": ".tricky-triangle {}",
				"id": "95683ee0-861d-4e9b-bb7f-a235891ca35b",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"id": "2a23c050-857d-4183-b71d-537b4a863f7c",
				"autoFocus": true,
				"value": ".tricky-triangle {\n   display: inline-triangle; \n}",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			}
		]
	},
	{
		"voted": [
			{
				"answerId": "80adbbbb-67a4-4f20-8f41-0064457ef75c",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"answerId": "80adbbbb-67a4-4f20-8f41-0064457ef75c",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32",
				"answerId": "80adbbbb-67a4-4f20-8f41-0064457ef75c"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "80adbbbb-67a4-4f20-8f41-0064457ef75c"
			},
			{
				"answerId": "80adbbbb-67a4-4f20-8f41-0064457ef75c",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "80adbbbb-67a4-4f20-8f41-0064457ef75c"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "80adbbbb-67a4-4f20-8f41-0064457ef75c"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "80adbbbb-67a4-4f20-8f41-0064457ef75c"
			},
			{
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2",
				"answerId": "80adbbbb-67a4-4f20-8f41-0064457ef75c"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "80adbbbb-67a4-4f20-8f41-0064457ef75c"
			},
			{
				"answerId": "80adbbbb-67a4-4f20-8f41-0064457ef75c",
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
			},
			{
				"userId": "PCKjaUvI9caAgoRZTuQYvjRirCl1",
				"answerId": "80adbbbb-67a4-4f20-8f41-0064457ef75c"
			},
			{
				"answerId": "636528b1-c201-4e6d-a0fa-6b8e29018b2d",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			}
		],
		"id": "c61b56a3-b928-43f4-8000-5d8751a167c0",
		"correctAnswers": [
			{
				"value": "for (var i = array.length; i--; ) {\n     // process array[i]\n}\n",
				"id": "80adbbbb-67a4-4f20-8f41-0064457ef75c"
			}
		],
		"category": "javascript",
		"sentInByUser": null,
		"codeBlock": "",
		"type": "radio",
		"question": "A fun challenge it is to make these polls all rhyme in verse, now how do for loops run in reverse?",
		"codeSandboxExample": "",
		"answers": [
			{
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"value": "for (i++; i < array.length; let i = 0) {\n     // process array[i]\n}\n",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "8175372b-c2be-4ce4-8a43-8e103bdf2fd9",
				"value": "for (let i = 0; i < arr.length; i++) {\n     // process array[i]\n}\n",
				"type": "radio",
				"autoFocus": false
			},
			{
				"id": "80adbbbb-67a4-4f20-8f41-0064457ef75c",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"value": "for (let i = array.length; i--; ) {\n     // process array[i]\n}\n"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "cb44e870-295b-452b-96db-93e404543320",
				"autoFocus": false,
				"value": "for reverse(let i = 0; i < arr.length; i++) {\n     // process array[i]\n}\n",
				"type": "radio"
			},
			{
				"autoFocus": false,
				"id": "636528b1-c201-4e6d-a0fa-6b8e29018b2d",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "for (let i = 0; i < arr.length; i++).sort((a, b) => a - b) {\n     // process array[i]\n}\n"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "rof (tel = 0; i > rra.htgnel; ++i) { \n // process array[i]\n} ",
				"blockType": "text",
				"id": "eb2ebbc6-bf2b-4c4c-9384-c0bb50798fd0",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "{\n   // process array[i]\n} (i++; i < arr.length; let i = 0;) for",
				"autoFocus": true,
				"placeholder": "Add option",
				"id": "39062fb3-43bc-4cf3-8cc8-6740938c38b7"
			}
		],
		"status": "closed",
		"pollNumber": 195,
		"openingTime": 1670834233959
	},
	{
		"answers": [
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "eioozak-ojnab",
				"value": "elloh"
			},
			{
				"placeholder": "Add option",
				"id": "e95ca162-927b-4d12-886f-984767684471",
				"value": "eohll",
				"type": "radio",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "5d022f06-2a3f-4625-8f80-83c4b39fd8a4",
				"type": "radio",
				"value": "hello",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"id": "5dbcffaa-8181-43e8-9117-e4ff56e560c8",
				"value": "2, 5, 1, 4, 3",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "09df5e69-447c-41b5-89a9-f1d829853183",
				"value": "1, 2, 3, 4, 5"
			},
			{
				"value": "{ 2: \"e\", 5: \"o\", 1: \"h\", 4: \"l\", 3: \"l\" }",
				"blockType": "text",
				"type": "radio",
				"id": "a012b54e-2e46-4502-b64b-e24b8eed668a",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio",
				"id": "9517384f-74e1-4039-9047-ab79cfe69ae7",
				"value": "goodbye"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": true,
				"id": "e1390048-1b4b-4b9f-99e5-009abb30c919",
				"value": "TypeError: Object.values(...) cannot be used with scrambled objects"
			}
		],
		"codeSandboxExample": "",
		"category": "javascript",
		"sentInByUser": null,
		"type": "radio",
		"pollNumber": 194,
		"codeBlock": "const scrambled = { 2: \"e\", 5: \"o\", 1: \"h\", 4: \"l\", 3: \"l\" };\n\nconst result = Object\n  .values(scrambled)\n  .reduce((agg, el) => agg + el, \"\");\n\nconsole.log(result);",
		"status": "new",
		"correctAnswers": [
			{ "value": "hello", "id": "5d022f06-2a3f-4625-8f80-83c4b39fd8a4" }
		],
		"voted": [],
		"id": "d99bec50-8748-45a3-a479-5f46af9a7c2b",
		"question": "You must've come across Object.values, from the code below find the correct output, what piece of code will you choose? "
	},
	{
		"status": "closed",
		"answers": [
			{
				"id": "eioozak-ojnab",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio",
				"value": "Determining specificity "
			},
			{
				"value": "Container queries",
				"id": "9882f590-c1ad-4c9f-98de-099c41be85a0",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"value": "A set of utility classes",
				"id": "ae77acd6-6fd9-4607-8a62-c479703cf422"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "Write actual CSS in your JavaScript",
				"autoFocus": false,
				"id": "0da6a0d5-1baf-4421-b096-08d0cf82adcb"
			},
			{
				"id": "9daaf3f4-23d8-42aa-ad32-79dc1ee3e4b4",
				"autoFocus": false,
				"value": "Importing CSS files into other CSS files",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"id": "dad8b074-c504-4a7c-94ca-6b84753fcb90",
				"placeholder": "Add option",
				"value": "Scope isolation",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false
			},
			{
				"type": "radio",
				"value": "Bundling and minimize CSS code for production builds",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "b7d03dc2-9273-4733-829f-c7888d9bac4d",
				"autoFocus": false
			},
			{
				"type": "radio",
				"value": "It adds CSS spec modules to the language so you can write the newest CSS ",
				"id": "441455ff-72ce-4b83-9b2e-9971337ee1d1",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "168a5cb7-1f5d-42a7-a0a5-5d254a096d9c",
				"value": "It’s a library providing utility components fully styled like buttons, grids, badges, headers, nav etc.",
				"autoFocus": true,
				"type": "radio"
			}
		],
		"category": "general-frontend",
		"question": "This question is not that hard so you can relax, what feature does CSS modules have that CSS lacks? ",
		"openingTime": 1671439661271,
		"type": "radio",
		"codeSandboxExample": "",
		"correctAnswers": [
			{
				"value": "Scope isolation",
				"id": "dad8b074-c504-4a7c-94ca-6b84753fcb90"
			}
		],
		"id": "4ffbfbe4-0e96-4f0c-9ec1-9ea76aba5c64",
		"pollNumber": 193,
		"sentInByUser": null,
		"voted": [
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "dad8b074-c504-4a7c-94ca-6b84753fcb90"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "dad8b074-c504-4a7c-94ca-6b84753fcb90"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "dad8b074-c504-4a7c-94ca-6b84753fcb90"
			},
			{
				"answerId": "dad8b074-c504-4a7c-94ca-6b84753fcb90",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "9daaf3f4-23d8-42aa-ad32-79dc1ee3e4b4"
			},
			{
				"answerId": "dad8b074-c504-4a7c-94ca-6b84753fcb90",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"answerId": "dad8b074-c504-4a7c-94ca-6b84753fcb90",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "dad8b074-c504-4a7c-94ca-6b84753fcb90"
			},
			{
				"answerId": "dad8b074-c504-4a7c-94ca-6b84753fcb90",
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2"
			},
			{
				"answerId": "b7d03dc2-9273-4733-829f-c7888d9bac4d",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"answerId": "dad8b074-c504-4a7c-94ca-6b84753fcb90",
				"userId": "8d5n92IZsOMbZtnfoEgMhjFF8C63"
			}
		],
		"codeBlock": ""
	},
	{
		"answers": [
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "const copy = mainArray;  ",
				"id": "eioozak-ojnab",
				"autoFocus": false
			},
			{
				"type": "radio",
				"value": "const copy = [...mainArray];  ",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "897ba940-ba80-4b66-8687-fabf4551f521"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "e091ed30-048f-4398-9d37-da001ae40b2b",
				"value": "const copy = [];\n\nmainArray.forEach(item => {\n  c.push(item);\n});",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"autoFocus": false,
				"id": "0300e71f-c907-4321-808b-96d84400f631",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "const copy = mainArray.map(item => item);"
			},
			{
				"id": "ce390e65-a8b0-46e6-8108-a16b30a5b764",
				"blockType": "text",
				"value": "const copy = mainArray.slice()",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false
			},
			{
				"value": "const copy = mainArray.copy()",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "4335323d-7886-41de-9760-0add6b46558d",
				"autoFocus": false
			},
			{
				"id": "97e41f48-7ee4-49ea-a7a9-0e6f4cf560e3",
				"value": "const copy = mainArray.splice()",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"autoFocus": true,
				"placeholder": "Add option",
				"id": "c9829aeb-268d-4dad-a6da-8ba52ad17085",
				"blockType": "text",
				"type": "radio",
				"value": "const copy = mainArray.pop()"
			}
		],
		"pollNumber": 192,
		"codeSandboxExample": "",
		"voted": [],
		"question": "Copying values from arrays until copying from StackOverflow is what we do, which answers from below are valid ways to make an array copy, do you have a clue?",
		"category": "javascript",
		"id": "4c72006e-2244-4568-9ebf-a2805825a6ed",
		"correctAnswers": [
			{
				"value": "const copy = mainArray.map(item => item);",
				"id": "0300e71f-c907-4321-808b-96d84400f631"
			},
			{
				"id": "e091ed30-048f-4398-9d37-da001ae40b2b",
				"value": "const copy = [];\n\nmainArray.forEach(item => {\n  c.push(item);\n});"
			},
			{
				"value": "const copy = [...mainArray];  ",
				"id": "897ba940-ba80-4b66-8687-fabf4551f521"
			},
			{
				"id": "ce390e65-a8b0-46e6-8108-a16b30a5b764",
				"value": "const copy = mainArray.slice()"
			}
		],
		"status": "new",
		"sentInByUser": null,
		"type": "radio",
		"codeBlock": "const mainArray = ['one', 'two', 'three', 'five', 'four'];"
	},
	{
		"id": "4ceb69a6-124e-4dc5-aae8-d279052cb7db",
		"category": "javascript",
		"correctAnswers": [
			{
				"value": "It's B: A shallow copy of an object is created each iteration, which is more expensive",
				"id": "3ca04f24-faca-4dda-a572-0efc35408777"
			}
		],
		"answers": [
			{
				"type": "radio",
				"blockType": "text",
				"value": "It's A: One of the advantages of immutable functions is also performance ",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "eioozak-ojnab"
			},
			{
				"value": "It's A: Because this example has less characters than the other ",
				"id": "af9e4d86-43cf-4e41-b1e1-fde076aa752b",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"value": "It's B: Because .reduce is reducing performance, hence it's name ",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"id": "7bba81bd-9b05-4ae5-9b5a-7c9c1d80e14b"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"value": "Its A: Because in example B an empty object is created and not in example A ",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "4e326a10-8e9e-4a83-8a7b-1c7c933c54ee"
			},
			{
				"id": "0e72da34-5448-4b3c-94eb-3cbf76bd08ed",
				"blockType": "text",
				"value": "It's A: Because the code looks cleaner ",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"id": "3ca04f24-faca-4dda-a572-0efc35408777",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "It's B: A shallow copy of an object is created each iteration, which is more expensive"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "It's A: .reduce function does some performance optimisations under the hood which are neglected in example B ",
				"id": "ce987b92-9311-45e4-88ef-a6b07b89d4b3",
				"autoFocus": false
			},
			{
				"value": "It's A: The example in B is memory intensive because the variable is reassigned each iteration",
				"placeholder": "Add option",
				"type": "radio",
				"id": "9f594169-ffc0-4e7d-8c86-b8e2e414087b",
				"autoFocus": true,
				"blockType": "text"
			}
		],
		"codeBlock": "const arr = [1, 2, 3];\n\n\n// A: \nconst a = arr.reduce(\n  (acc, el, i) => ({ ...acc, [el]: i }),\n  {}\n);\n\n\n// B: \nconst b = {};\nfor (let i = 0; i < arr.length; i++) {\n  b[arr[i]] = i;\n}",
		"type": "radio",
		"pollNumber": 191,
		"sentInByUser": null,
		"voted": [],
		"question": "Both examples do exactly the same would be your first reply, the output of both is not the answer I seek, but which of these examples is created more efficiently and why?",
		"status": "new",
		"codeSandboxExample": ""
	},
	{
		"sentInByUser": null,
		"id": "b4840fc0-383f-46e6-92ad-2ab984353ad8",
		"type": "radio",
		"status": "open",
		"correctAnswers": [
			{
				"id": "dda3fc85-a082-4484-9c9c-3636bc1642ee",
				"value": "The output of \"console.log(\"Freezeezy Peak\"[0]);\" is \"F\". "
			}
		],
		"category": "javascript",
		"openingTime": 1671700084444,
		"voted": [
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "dda3fc85-a082-4484-9c9c-3636bc1642ee"
			},
			{
				"answerId": "945dfb5e-4eca-4087-a6fd-5b732cd7c8fb",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"answerId": "dda3fc85-a082-4484-9c9c-3636bc1642ee",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "dda3fc85-a082-4484-9c9c-3636bc1642ee"
			},
			{
				"answerId": "dda3fc85-a082-4484-9c9c-3636bc1642ee",
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "dda3fc85-a082-4484-9c9c-3636bc1642ee"
			},
			{
				"userId": "8d5n92IZsOMbZtnfoEgMhjFF8C63",
				"answerId": "945dfb5e-4eca-4087-a6fd-5b732cd7c8fb"
			},
			{
				"answerId": "dda3fc85-a082-4484-9c9c-3636bc1642ee",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "51453b98-d4b5-4df8-90e4-29658adaa925",
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2"
			},
			{
				"answerId": "dda3fc85-a082-4484-9c9c-3636bc1642ee",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"answerId": "945dfb5e-4eca-4087-a6fd-5b732cd7c8fb",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"answerId": "dda3fc85-a082-4484-9c9c-3636bc1642ee",
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2"
			}
		],
		"question": "In JS, a deep-dive of the language is never wrong, which of the following general statements is where truth belong? ",
		"codeSandboxExample": "",
		"codeBlock": "",
		"pollNumber": 190,
		"answers": [
			{
				"id": "eioozak-ojnab",
				"autoFocus": false,
				"value": "Accessing properties of undefined returns undefined",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Comparing `const a = { a: 1 }` and `const b = { a: 1 };` will return true",
				"type": "radio",
				"id": "945dfb5e-4eca-4087-a6fd-5b732cd7c8fb"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "dda3fc85-a082-4484-9c9c-3636bc1642ee",
				"autoFocus": false,
				"blockType": "text",
				"value": "The output of \"console.log(\"Freezeezy Peak\"[0]);\" is \"F\". "
			},
			{
				"value": "When spreading values with \"...\", the amount of dots represent the amount of iterables: e.g `[......array]` will spread 6 elements of the array in a new array",
				"placeholder": "Add option",
				"id": "d31de1a0-9ab6-430e-af94-c37734bcaed8",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false
			},
			{
				"id": "08e27da5-51df-4ff8-b477-7afe03ffa949",
				"value": "for..in and for..of are exactly the same and can be used interchangibly",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "Nullish coalescing nullifies each value",
				"autoFocus": false,
				"id": "edd1a948-6af0-43b0-bc3b-0cc312b0e991",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"id": "b7e93af6-0e3b-4aa6-a424-3d36e61574e3",
				"value": "NaN++ is a JS certificate ranked higher than NaN+ and NaN, and is an acronym for \"Not a Noob\""
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": true,
				"value": "`const` values are immutable",
				"id": "51453b98-d4b5-4df8-90e4-29658adaa925"
			}
		]
	},
	{
		"sentInByUser": null,
		"correctAnswers": [
			{ "value": "+number", "id": "ba7a261a-4bcb-4263-b2d7-d891c5ab48c2" }
		],
		"codeBlock": "const number = “1004”;",
		"voted": [],
		"answers": [
			{
				"blockType": "text",
				"value": "tel:number",
				"placeholder": "Add option",
				"type": "radio",
				"id": "eioozak-ojnab",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"id": "1773376a-16cd-4503-8874-48278cd68916",
				"autoFocus": false,
				"type": "radio",
				"value": "numeric()",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "5ae912f1-21f2-43a9-89c3-5c2829aba2fb",
				"blockType": "text",
				"value": "int number = “1004”",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"value": "-number",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"id": "226e84b8-ca92-482e-b8b4-b0dd94f9c8c2",
				"placeholder": "Add option"
			},
			{
				"value": "+number",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"id": "ba7a261a-4bcb-4263-b2d7-d891c5ab48c2",
				"type": "radio"
			},
			{
				"id": "15d826a4-c7b4-4077-a823-ec5fbe87341d",
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "!Number(number)"
			},
			{
				"id": "9214256b-909f-4a77-b4d7-86e29405b9b5",
				"value": "+String(Number(String(number)))",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "0cebfdad-fbd0-4f0b-bcbe-4c9be8b1674e",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": true,
				"value": "aN(\"1004\")"
			}
		],
		"type": "radio",
		"id": "7cbd06ec-f396-4a56-9678-ffb8a28807c6",
		"codeSandboxExample": "",
		"pollNumber": 189,
		"category": "javascript",
		"question": "In JS, the following value is a string, casting it to a number value how would you do this common thing?",
		"status": "new"
	},
	{
		"codeSandboxExample": "",
		"sentInByUser": {
			"displayName": "Jorg Nieberg",
			"id": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
		},
		"answers": [
			{
				"autoFocus": false,
				"value": "console.log'lorem';",
				"blockType": "code",
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"type": "radio"
			},
			{
				"value": "const a = a => a = a <= a;",
				"placeholder": "Add option",
				"id": "dc8c8626-90f1-49b0-8082-b0238f0f8636",
				"type": "radio",
				"autoFocus": false,
				"blockType": "code"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio",
				"value": "const a++ = 0;",
				"id": "3f23ed90-6c54-421c-ba82-852d293647ae"
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "49db1ec1-489f-4d3b-8cca-f96a02988213",
				"value": "const b = Boolean(() => {});",
				"type": "radio",
				"blockType": "code"
			},
			{
				"placeholder": "Add option",
				"value": "\"b\" + \"a\" + + \"a\" + \"a\";",
				"autoFocus": false,
				"blockType": "code",
				"id": "58b80150-5627-49d3-8c56-1ee5d9775a0b",
				"type": "radio"
			},
			{
				"blockType": "code",
				"autoFocus": false,
				"id": "f44be387-f999-41de-95a8-f19ba3009557",
				"type": "radio",
				"placeholder": "Add option",
				"value": "const a = [0, 1][2, 3];"
			},
			{
				"id": "d5aea7d5-69b2-4974-9027-a923e26fb684",
				"type": "radio",
				"autoFocus": true,
				"blockType": "code",
				"placeholder": "Add option",
				"value": "const a = [0, 1, 2, 3,,4, 5, 6];"
			}
		],
		"correctAnswers": [
			{ "value": "console.log'lorem';", "id": "eioozak-ojnab" },
			{
				"value": "const a++ = 0;",
				"id": "3f23ed90-6c54-421c-ba82-852d293647ae"
			},
			{
				"id": "f44be387-f999-41de-95a8-f19ba3009557",
				"value": "const a = [0, 1][2, 3];"
			}
		],
		"status": "closed",
		"voted": [
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "3f23ed90-6c54-421c-ba82-852d293647ae"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"answerId": "3f23ed90-6c54-421c-ba82-852d293647ae",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "3f23ed90-6c54-421c-ba82-852d293647ae",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "f44be387-f999-41de-95a8-f19ba3009557"
			},
			{
				"answerId": "dc8c8626-90f1-49b0-8082-b0238f0f8636",
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
			},
			{
				"answerId": "3f23ed90-6c54-421c-ba82-852d293647ae",
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "f44be387-f999-41de-95a8-f19ba3009557"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "3f23ed90-6c54-421c-ba82-852d293647ae",
				"userId": "PCKjaUvI9caAgoRZTuQYvjRirCl1"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "PCKjaUvI9caAgoRZTuQYvjRirCl1"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "f44be387-f999-41de-95a8-f19ba3009557"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "eioozak-ojnab"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "3f23ed90-6c54-421c-ba82-852d293647ae"
			},
			{
				"answerId": "58b80150-5627-49d3-8c56-1ee5d9775a0b",
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2"
			},
			{
				"answerId": "f44be387-f999-41de-95a8-f19ba3009557",
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "d5aea7d5-69b2-4974-9027-a923e26fb684"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2"
			},
			{
				"answerId": "3f23ed90-6c54-421c-ba82-852d293647ae",
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "58b80150-5627-49d3-8c56-1ee5d9775a0b"
			},
			{
				"answerId": "3f23ed90-6c54-421c-ba82-852d293647ae",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "dc8c8626-90f1-49b0-8082-b0238f0f8636"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "3f23ed90-6c54-421c-ba82-852d293647ae"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "f44be387-f999-41de-95a8-f19ba3009557"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "dc8c8626-90f1-49b0-8082-b0238f0f8636",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "3f23ed90-6c54-421c-ba82-852d293647ae",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "f44be387-f999-41de-95a8-f19ba3009557",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"answerId": "58b80150-5627-49d3-8c56-1ee5d9775a0b",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62",
				"answerId": "3f23ed90-6c54-421c-ba82-852d293647ae"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "3f23ed90-6c54-421c-ba82-852d293647ae",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "49db1ec1-489f-4d3b-8cca-f96a02988213"
			},
			{
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32",
				"answerId": "3f23ed90-6c54-421c-ba82-852d293647ae"
			},
			{
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32",
				"answerId": "eioozak-ojnab"
			},
			{
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32",
				"answerId": "58b80150-5627-49d3-8c56-1ee5d9775a0b"
			}
		],
		"pollNumber": 188,
		"id": "166cfdd6-8bf2-407e-b50b-d631442e2c23",
		"type": "checkbox",
		"codeBlock": "",
		"category": "javascript",
		"question": "Just look at the code below ... such horror ... much terror. Which of the following weird JavaScript codes actually give a compiler error?",
		"openingTime": 1671181592546
	},
	{
		"status": "new",
		"id": "626153c2-e4d6-45f2-ac0f-e0bc079b6eac",
		"codeBlock": "",
		"category": "css",
		"voted": [],
		"sentInByUser": null,
		"question": "In CSS, images come in all different shapes and sizes, to let the image fit it’s container, what property you may already know now arises? ",
		"type": "radio",
		"codeSandboxExample": "",
		"correctAnswers": [
			{
				"id": "7ee0e2ed-52dd-4aca-b9d2-77a6475f2e4d",
				"value": "object-fit"
			}
		],
		"pollNumber": 187,
		"answers": [
			{
				"value": "object-size ",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio",
				"id": "eioozak-ojnab"
			},
			{
				"placeholder": "Add option",
				"id": "18061683-18ec-4c93-af8d-a7449436d874",
				"type": "radio",
				"value": "image-size ",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"value": "image-fit ",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "72f88157-02ea-4409-a426-a8c15b1bfce2",
				"type": "radio"
			},
			{
				"id": "7ee0e2ed-52dd-4aca-b9d2-77a6475f2e4d",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"value": "object-fit"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "array-fit",
				"type": "radio",
				"id": "b6d42a74-e625-4aab-99c1-6f577e941869",
				"autoFocus": false
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio",
				"value": "box-sizing",
				"id": "eb8b21bc-c286-466f-9b61-110e3a25349e",
				"blockType": "text"
			},
			{
				"value": "container queries",
				"autoFocus": true,
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "ee37b903-1205-4284-8e56-3aee8091f8a0"
			}
		]
	},
	{
		"pollNumber": 186,
		"status": "new",
		"voted": [],
		"sentInByUser": null,
		"category": "javascript",
		"codeBlock": "const a = Array(10);\nconst b = Array(10, 20);",
		"id": "34e7a33a-519e-4cf8-8b1c-339a9492d42d",
		"correctAnswers": [
			{
				"value": "a: [10, 20]\nb: [empty x 20] (array length will be 20",
				"id": "d2cb6640-057c-4fa6-924d-7581b36e658b"
			}
		],
		"codeSandboxExample": "",
		"type": "radio",
		"answers": [
			{
				"value": "Array() can be called with or without new. Both create a new Array instance.",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"blockType": "text"
			},
			{
				"id": "dcb11adf-5d73-4928-9a95-0e0356e9a46d",
				"blockType": "text",
				"value": "a: [10]\nb: [10, 20]",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "8a4105f2-9279-46f3-a863-7938bf74b1dc",
				"autoFocus": false,
				"value": "a: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10]\nb: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]; "
			},
			{
				"value": "a: [10, 20]\nb: [empty x 20] (array length will be 20",
				"id": "d2cb6640-057c-4fa6-924d-7581b36e658b",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "a: [10]\nb: [ 10, [10, 20] ]",
				"type": "radio",
				"id": "35a78773-9181-4e7d-bd21-41cba1755a12",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"value": "It's a long standing bug in JS that produces an empty object",
				"type": "radio",
				"id": "da462215-c93a-4863-b4c6-bbb4b8764f2b",
				"autoFocus": true,
				"placeholder": "Add option"
			}
		],
		"question": "In JS, I will come up with polls as much as I could, for variable a and b what should be the expected output? "
	},
	{
		"correctAnswers": [
			{
				"value": "FuncA = ((a: number) => unknown) | (a: string) => unknown);\nFuncB = (a: number | string) => unknown;",
				"id": "97b3d256-ec8d-4740-892d-1b1d665cd65a"
			}
		],
		"id": "217ab087-0807-491f-a403-b8fdcb04e3a9",
		"category": "typescript",
		"codeBlock": "type A<Args> = Args extends any ? (a: Args) => unknown : never;\ntype B<Args> = (a: Args) => unknown;\n\ntype FuncA = A<number | string>;\ntype FuncB = B<number | string>;",
		"status": "new",
		"codeSandboxExample": "",
		"answers": [
			{
				"id": "eioozak-ojnab",
				"value": "FuncA = never; FuncB = (a: number | string) => unknown;",
				"blockType": "code",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"id": "a8cbc46b-3f27-47be-a1d7-90fc4b97eaae",
				"value": "FuncA and FuncB are both: (a: number | string) => unknown;",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"id": "fb6a9753-9499-4662-978b-249a9889d4d6",
				"placeholder": "Add option",
				"value": "This is invalid syntax: there should be parenthesis around the function signature on line 1",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "FuncA = ((a: number) => unknown) | (a: string) => unknown);\nFuncB = (a: number | string) => unknown;",
				"autoFocus": true,
				"id": "97b3d256-ec8d-4740-892d-1b1d665cd65a",
				"blockType": "text",
				"type": "radio"
			}
		],
		"voted": [],
		"type": "radio",
		"pollNumber": 185,
		"sentInByUser": {
			"id": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
			"displayName": "Matthijs Groen"
		},
		"question": "Advanced typing is sometimes hard to see, do you know the result of FuncA and FuncB?"
	},
	{
		"correctAnswers": [
			{
				"value": "type PaddedBox = {\n  (padding: number): BoxPadding;\n  (vertical: number, horizontal: number): BoxPadding;\n};",
				"id": "f2918567-74f4-4edb-ab46-a20773623d07"
			}
		],
		"openingTime": 1670575952885,
		"codeBlock": "",
		"question": "Overloading is a magic spell, what is a format to define it well?",
		"answers": [
			{
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "code",
				"value": "type PaddedBox = \n  (padding: number) => BoxPadding |\n  (vertical: number, horizontal: number) => BoxPadding;",
				"id": "eioozak-ojnab"
			},
			{
				"autoFocus": false,
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"id": "8229a8aa-aa58-4d3e-a0e0-b311ec1886a6",
				"value": "type PaddedBox = \n  ((padding: number) => BoxPadding) |\n  ((vertical: number, horizontal: number) => BoxPadding);"
			},
			{
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"value": "type PaddedBox = \n  ((padding: number) => BoxPadding) &\n  ((vertical: number, horizontal: number) => BoxPadding);",
				"id": "1603fe0a-9d83-4d31-99fb-f5d214230a2b",
				"autoFocus": false
			},
			{
				"autoFocus": true,
				"id": "f2918567-74f4-4edb-ab46-a20773623d07",
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"value": "type PaddedBox = {\n  (padding: number): BoxPadding;\n  (vertical: number, horizontal: number): BoxPadding;\n};"
			}
		],
		"codeSandboxExample": "",
		"sentInByUser": {
			"id": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
			"displayName": "Matthijs Groen"
		},
		"voted": [
			{
				"answerId": "f2918567-74f4-4edb-ab46-a20773623d07",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "8229a8aa-aa58-4d3e-a0e0-b311ec1886a6"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "eioozak-ojnab"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "8229a8aa-aa58-4d3e-a0e0-b311ec1886a6"
			},
			{
				"answerId": "f2918567-74f4-4edb-ab46-a20773623d07",
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2"
			},
			{
				"answerId": "f2918567-74f4-4edb-ab46-a20773623d07",
				"userId": "8O6cHx6IxmTUXaMnXhxcQ2HFgEV2"
			},
			{
				"answerId": "f2918567-74f4-4edb-ab46-a20773623d07",
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63"
			},
			{
				"answerId": "8229a8aa-aa58-4d3e-a0e0-b311ec1886a6",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "PCKjaUvI9caAgoRZTuQYvjRirCl1"
			},
			{
				"answerId": "f2918567-74f4-4edb-ab46-a20773623d07",
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "8229a8aa-aa58-4d3e-a0e0-b311ec1886a6"
			},
			{
				"answerId": "8229a8aa-aa58-4d3e-a0e0-b311ec1886a6",
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "f2918567-74f4-4edb-ab46-a20773623d07"
			}
		],
		"pollNumber": 184,
		"status": "closed",
		"category": "typescript",
		"type": "radio",
		"id": "e0276a1d-4ce7-4b94-ab84-b119ba4bf069"
	},
	{
		"pollNumber": 183,
		"correctAnswers": [
			{
				"value": "You will only have a single implementation of a function, but multiple types",
				"id": "a3636875-561d-4fac-818f-56490066a46e"
			},
			{
				"id": "df652d32-2057-4533-ba03-cc8d93c087c8",
				"value": "You can provide multiple function signatures for the same implementation improving documentation"
			}
		],
		"question": "Going into super geek mode, what are benefits of a function overload?",
		"codeSandboxExample": "",
		"status": "new",
		"sentInByUser": {
			"displayName": "Matthijs Groen",
			"id": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
		},
		"voted": [],
		"id": "baaee2d9-b0a8-493f-b861-069f98d39874",
		"category": "typescript",
		"type": "checkbox",
		"codeBlock": "",
		"answers": [
			{
				"blockType": "text",
				"id": "eioozak-ojnab",
				"type": "radio",
				"placeholder": "Add option",
				"value": "You can override a `const` function implementation that wouldn't otherwise be possible",
				"autoFocus": false
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio",
				"id": "df652d32-2057-4533-ba03-cc8d93c087c8",
				"blockType": "text",
				"value": "You can provide multiple function signatures for the same implementation improving documentation"
			},
			{
				"id": "a3636875-561d-4fac-818f-56490066a46e",
				"placeholder": "Add option",
				"value": "You will only have a single implementation of a function, but multiple types",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"value": "Overloading is like inheritance, you can extend on a base implementation",
				"id": "604cfd8e-330c-4587-9cf6-c1ed87f74a4e",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "Overloading makes sure your functions are loaded first when JS code is parsed",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"id": "511b4148-dde0-47b4-b9fd-47f686690191",
				"blockType": "text"
			},
			{
				"id": "41b22448-75ff-48dc-b71a-74ab71d02d92",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "Overloading is not a benefit, it's a term used when the TypeScript compiler is out of memory due to overload"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Overload makes sure your code runs faster, above the manufacturer's specifications. It's a risk you should consider for your users visiting your app because it might blowup their hardware",
				"type": "radio",
				"id": "c72bc656-7ad8-481c-91d7-d9d35a11cc1f",
				"autoFocus": true
			}
		]
	},
	{
		"codeBlock": "",
		"id": "3ff2ad8a-7542-496c-8b3f-e18bd24eb01e",
		"correctAnswers": [
			{
				"value": "type OneOrMore<T> = { 0: T } & Array<T>;",
				"id": "39abd75b-5b7f-4d22-857e-b30765b1bf95"
			}
		],
		"codeSandboxExample": "",
		"answers": [
			{
				"autoFocus": false,
				"id": "eioozak-ojnab",
				"value": "type OneOrMore<T> = Array<T> & Array.length > 0;",
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"id": "22886d48-efba-4195-b865-94752138c3d5",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"value": "This is not possible in typescript (yet) but they will add it in TS 5.0"
			},
			{
				"blockType": "code",
				"autoFocus": false,
				"value": "type OneOrMore<T> = { 0: T } & Array<T>;",
				"placeholder": "Add option",
				"type": "radio",
				"id": "39abd75b-5b7f-4d22-857e-b30765b1bf95"
			},
			{
				"blockType": "code",
				"id": "bf810649-9961-466a-b7c7-34b291ef3b65",
				"autoFocus": true,
				"value": "type OneOrMore<T> = { length: 1 } & Array<T>;",
				"type": "radio",
				"placeholder": "Add option"
			}
		],
		"category": "typescript",
		"pollNumber": 182,
		"status": "new",
		"type": "radio",
		"question": "For this question to score, how would you specify an array of one or more?",
		"sentInByUser": {
			"displayName": "Matthijs Groen",
			"id": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
		},
		"voted": []
	},
	{
		"type": "radio",
		"question": "In HTML, <fieldset> elements usage is very rare, of which cool facts are you aware?",
		"category": "html",
		"id": "fbbd632e-5631-4724-946c-8d8d66c52a24",
		"answers": [
			{
				"autoFocus": false,
				"type": "radio",
				"value": "When <fieldset> contains a disabled attribute, all it’s form control descendants are disabled",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "eioozak-ojnab"
			},
			{
				"value": "<fieldset>’s default display value is “flex”",
				"autoFocus": false,
				"id": "ebd34396-e273-45db-8773-da00529dd249",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "<fieldset> is a graphical element rendering borders around elements within a <canvas>",
				"type": "radio",
				"autoFocus": false,
				"id": "c63085e5-6fd5-49df-a2cd-9438855b278f"
			},
			{
				"blockType": "text",
				"value": "<fieldset> is used to group any sort of content",
				"type": "radio",
				"autoFocus": false,
				"id": "027423af-7d60-4325-96c2-98d2d924c18d",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"type": "radio",
				"value": "<fieldset> element are highly dependant on the system they’re running on, which means they’re hard to style",
				"id": "d4eaaf1c-1c60-47be-9efd-5c72197df71d",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "e1246994-26fc-4713-8f93-0baa1a47e6b7",
				"autoFocus": false,
				"blockType": "text",
				"value": "<fieldset> semantics should be descended with <fieldsetitem> tags",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "f023244b-ab06-4a91-ad03-cd065ef12ac1",
				"autoFocus": true,
				"placeholder": "Add option",
				"value": "<fieldset> tags can render forms in different languages with the lang attribute"
			}
		],
		"correctAnswers": [
			{
				"id": "eioozak-ojnab",
				"value": "When <fieldset> contains a disabled attribute, all it’s form control descendants are disabled"
			}
		],
		"codeSandboxExample": "",
		"codeBlock": "",
		"status": "closed",
		"pollNumber": 181,
		"sentInByUser": null,
		"voted": [
			{
				"answerId": "eioozak-ojnab",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "eioozak-ojnab"
			},
			{
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32",
				"answerId": "eioozak-ojnab"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "PCKjaUvI9caAgoRZTuQYvjRirCl1"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "eioozak-ojnab"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "027423af-7d60-4325-96c2-98d2d924c18d"
			},
			{
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			}
		],
		"openingTime": 1671008389481
	},
	{
		"correctAnswers": [
			{
				"id": "eb834ecb-a494-4841-b3a9-1d2b32910484",
				"value": "<ins> and <del>"
			}
		],
		"pollNumber": 180,
		"sentInByUser": null,
		"codeBlock": "",
		"question": "In HTML, see the code example below and test your wit, what semantic tags would be best fit? ",
		"voted": [],
		"category": "html",
		"id": "8d134ba4-754b-4397-ab58-c102c6112952",
		"type": "radio",
		"answers": [
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "<removed> and <inserted>",
				"type": "radio",
				"id": "eioozak-ojnab",
				"blockType": "text"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"value": "<ins> and <del>",
				"placeholder": "Add option",
				"id": "eb834ecb-a494-4841-b3a9-1d2b32910484"
			},
			{
				"value": "Just spans, semantic tags are missing here",
				"id": "6a8d092e-5af5-483c-9e89-87b3d2cca3c8",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"value": "<p> tags",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "7f5953ce-962b-4a0e-8747-8b23681b4768"
			},
			{
				"type": "radio",
				"value": "<red> and <green> ",
				"blockType": "text",
				"id": "5a881fd4-bf9b-48f2-aa99-149f9988b20b",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "cd5eb8d6-44b6-4efe-a0bd-b84bda851dd6",
				"value": "<add> and <min> ",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"autoFocus": false,
				"value": "<style> tags",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "eedbfeed-ee84-4e76-8541-004856fa0c44"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "<mario> and <luigi>",
				"autoFocus": true,
				"id": "6a492ee5-6444-4814-9a3c-159c74a35846",
				"type": "radio"
			}
		],
		"codeSandboxExample": "https://codesandbox.io/embed/gracious-field-3z49er?fontsize=14&hidenavigation=1&theme=dark&view=preview",
		"status": "new"
	},
	{
		"status": "new",
		"category": "css",
		"pollNumber": 179,
		"question": "In CSS, this code example you probably understand, what code for min-width an max-width is an equal shorthand? ",
		"codeSandboxExample": "",
		"sentInByUser": null,
		"codeBlock": ".ಠ_ಠ {\n  min-width: 288px;\n  max-width: 900px;\n}",
		"id": "61c2c3f6-b528-4719-a377-e7b6ace8ffc8",
		"voted": [],
		"answers": [
			{
				"type": "radio",
				"value": ".ಠ_ಠ {\n   width: clamp(288px, 100%, 900px);\n}\n",
				"placeholder": "Add option",
				"blockType": "code",
				"autoFocus": false,
				"id": "eioozak-ojnab"
			},
			{
				"value": "There is no shorter way defining this ಠ_ಠ",
				"blockType": "text",
				"id": "f6d396a3-24f5-43f9-b376-05afc846f739",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "63b47120-2d1d-4ac9-8806-519e7a617625",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code",
				"autoFocus": false,
				"value": ".ಠ_ಠ {\n  width: minmax(288px, 900px); \n}"
			},
			{
				"blockType": "code",
				"id": "103825d8-6756-4075-87fe-ff2d4191c240",
				"value": ".ಠ_ಠ {\n   width: shorthand(288px, 900px)\n}",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"autoFocus": false,
				"id": "310dceef-979f-452a-bad7-dde9c0d3581d",
				"placeholder": "Add option",
				"value": ".ಠ_ಠ {\n   w: 288px, 900px\n}",
				"type": "radio",
				"blockType": "code"
			},
			{
				"id": "580d20db-609f-45d2-95d9-ab0f47459371",
				"placeholder": "Add option",
				"autoFocus": false,
				"value": ".ಠ_ಠ {\n   widths: [288px, 900px]\n}",
				"type": "radio",
				"blockType": "code"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "4ab6638e-7ce3-4691-9957-8344a7fc0358",
				"placeholder": "Add option",
				"value": "Only possible with CSS container queries ಠ_ಠ",
				"autoFocus": true
			}
		],
		"type": "radio",
		"correctAnswers": [
			{
				"id": "eioozak-ojnab",
				"value": ".main-exchange-container--title {\n   width: clamp(288px, 100%, 900px);\n}\n"
			}
		]
	},
	{
		"status": "new",
		"sentInByUser": null,
		"type": "checkbox",
		"correctAnswers": [
			{ "id": "f6d396a3-24f5-43f9-b376-05afc846f739", "value": "Test" },
			{
				"id": "b15c86a9-d251-4f6c-9502-d0d29e1bad1e",
				"value": "A blog entry"
			}
		],
		"pollNumber": 178,
		"voted": [],
		"question": "In HTML, the <article> should be used tag for certain intents, do you know what it represents?",
		"codeBlock": "",
		"answers": [
			{
				"autoFocus": false,
				"value": "A forum post",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "f6d396a3-24f5-43f9-b376-05afc846f739"
			},
			{
				"value": "A blog entry",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text",
				"id": "b15c86a9-d251-4f6c-9502-d0d29e1bad1e"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"type": "radio",
				"id": "5c3e9d46-cae8-4a3f-b8f0-186d9903da44",
				"value": "A sidebar with filters",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "A piece of text that atleast contains 80 characters",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "e2a2fe59-ed6e-4ad1-bc11-22666f3092ca"
			},
			{
				"value": "When you have a dutch webshop and you want to sell your items as \"artikelen\"",
				"autoFocus": false,
				"id": "24b5fd06-2cb2-434b-8d4d-b8f9aac42cf7",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "<article> should be used only when a text is written by a professional editor and is considered an \"article\" ",
				"id": "5c191298-3c38-491c-a2d3-2c79250dc0d8",
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "Every text element should be a wrapped in an <article>",
				"blockType": "text",
				"autoFocus": true,
				"id": "7b77fc6d-a975-4f29-bb9c-2f9c6494d543",
				"type": "radio",
				"placeholder": "Add option"
			}
		],
		"category": "html",
		"codeSandboxExample": "",
		"id": "5a917b4f-cfcb-4685-bcec-56db6796684b"
	},
	{
		"voted": [],
		"sentInByUser": null,
		"codeBlock": "",
		"status": "new",
		"answers": [
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio",
				"value": "<b>",
				"blockType": "text",
				"id": "eioozak-ojnab"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "<applet>",
				"type": "radio",
				"autoFocus": false,
				"id": "b4ded3d7-9df0-4e59-9446-c8e23056c1b9"
			},
			{
				"value": "<acronym>",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"id": "b0aaf320-4a79-4de4-aaaa-e17777b86113",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"id": "84e86e64-4336-4c05-93a7-32edc7e855ec",
				"type": "radio",
				"value": "<abbr>"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "a3518d5f-c449-4d45-85db-f4c8c9728a94",
				"value": "<strike>"
			},
			{
				"placeholder": "Add option",
				"value": "<kbd>",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"id": "e999fb33-c6af-49e8-86e5-b64c0eeac239"
			},
			{
				"id": "c326cd22-9675-475b-a468-1009ce0c581a",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "<p>"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "<hr>",
				"id": "ee485c99-cb5c-4f0c-a501-841dd1a2b5e6",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"placeholder": "Add option",
				"id": "5a373686-facb-4afe-a3da-dab842de409d",
				"value": "<font>",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "<center>",
				"id": "8919b00e-acc8-461e-968f-7ccb2b8c14a8"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "57dba6be-f7a9-40ae-858a-04564de8a97b",
				"blockType": "text",
				"value": "<h6>",
				"autoFocus": true
			}
		],
		"type": "checkbox",
		"pollNumber": 177,
		"id": "75bb633b-a622-4bb0-a065-0788a5ac3fc7",
		"question": "In HTML, making these polls requires subjects to be perused, which HTML tags are outdated and should not be used?",
		"codeSandboxExample": "",
		"correctAnswers": [
			{
				"id": "8919b00e-acc8-461e-968f-7ccb2b8c14a8",
				"value": "<center>"
			},
			{ "value": "<font>", "id": "5a373686-facb-4afe-a3da-dab842de409d" },
			{
				"id": "a3518d5f-c449-4d45-85db-f4c8c9728a94",
				"value": "<strike>"
			},
			{
				"id": "b0aaf320-4a79-4de4-aaaa-e17777b86113",
				"value": "<acronym>"
			},
			{
				"id": "b4ded3d7-9df0-4e59-9446-c8e23056c1b9",
				"value": "<applet>"
			}
		],
		"category": "html"
	},
	{
		"voted": [],
		"type": "radio",
		"codeBlock": "setTimeout(() => {\n  console.log(\"2\");\n}, 2);\n\nsetTimeout(() => {\n  console.log(\"0\");\n}, 0);\n\n/**\n * Output:\n * > \"2\"\n * > \"0\"\n */",
		"correctAnswers": [
			{
				"id": "a35b6a6a-bfec-4868-b2d5-4d5ec15f7cc2",
				"value": "After this code the event loop is busy, so both timers are expired and handled in order of definition"
			}
		],
		"status": "new",
		"pollNumber": 176,
		"id": "9746a395-e788-4af4-aab7-8d136b26de14",
		"sentInByUser": {
			"id": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
			"displayName": "Matthijs Groen"
		},
		"question": "Shown the following input and output clear, what could have happened here?",
		"category": "javascript",
		"codeSandboxExample": "",
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false,
				"id": "eioozak-ojnab",
				"blockType": "text",
				"value": "The console log is broken, you need to refresh it (it happens sometimes)"
			},
			{
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"value": "After this code the event loop is busy, so both timers are expired and handled in order of definition",
				"id": "a35b6a6a-bfec-4868-b2d5-4d5ec15f7cc2",
				"placeholder": "Add option"
			},
			{
				"id": "5e92da2b-80f2-46eb-931f-90ec1aac81c2",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"value": "The setTimeout \"0\" is a special value, and will only execute if there are not other timeouts left"
			},
			{
				"id": "934d6fc2-44b1-490f-95bb-95072e80e8e5",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "The developer of this code is located in Australia, where time spins the other way around",
				"autoFocus": true
			}
		]
	},
	{
		"question": "In TS, utility types have code under the hood which is known, of the following code what utility type is shown?",
		"type": "radio",
		"codeSandboxExample": "",
		"status": "new",
		"answers": [
			{
				"type": "radio",
				"autoFocus": false,
				"value": "Never",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "eioozak-ojnab"
			},
			{
				"id": "89c4851b-ab7f-47e1-8c59-9edd8bbe8105",
				"type": "radio",
				"placeholder": "Add option",
				"value": "T",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"value": "Partial",
				"blockType": "text",
				"id": "1d662ecb-d823-453b-a318-78846541b4e2",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "Exclude",
				"blockType": "text",
				"id": "1e9b5552-75ab-4daf-b65f-359f251f2e71",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"value": "Extract",
				"id": "a8cc56ae-470a-4adc-aaad-e1e87dbe19ac",
				"type": "radio"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Omit",
				"id": "ceb5612a-f8f8-4bd9-abfc-1e93be7940da"
			},
			{
				"id": "bfc02b59-0c8d-4216-b2b8-59228bf988c4",
				"autoFocus": false,
				"blockType": "text",
				"value": "Undo",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "X-ray",
				"id": "61529c3e-a01b-4f0b-bee1-9b2e6741b172",
				"placeholder": "Add option",
				"autoFocus": true,
				"type": "radio",
				"blockType": "text"
			}
		],
		"category": "typescript",
		"sentInByUser": null,
		"id": "2ebcfa7d-3cb9-4d83-8e61-a1c6bfd3e6e3",
		"voted": [],
		"pollNumber": 175,
		"codeBlock": "type ??? = T extends U ? never : T;",
		"correctAnswers": [
			{ "id": "1e9b5552-75ab-4daf-b65f-359f251f2e71", "value": "Exclude" }
		]
	},
	{
		"sentInByUser": null,
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "eioozak-ojnab",
				"autoFocus": false,
				"value": "It means that when you call the function, the given argument must atleast contain a number and string type so the function must always be called twice",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "This is the pipe operator: It means in this case that it takes the argument as a number, and returns a string value",
				"autoFocus": false,
				"type": "radio",
				"id": "575de786-ae85-4f3f-8e7a-56d61de146c6"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"id": "629f6d59-eb8e-41ac-96db-1cdb922255e9",
				"value": "It means that TypeScript get to decide with inference what type the arguments should be ",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "It means the type can either be a string or a number",
				"blockType": "text",
				"type": "radio",
				"id": "98c94050-6462-4d1c-ae65-a748a091255e",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"value": "It means string and number will be combined into one type: a \"strumber\"",
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"id": "04d951b1-2ea6-4cba-b82b-f03d8017ef8f",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "It means nothing and because it should be “||” i.s.o “|”",
				"id": "13084992-2c25-4a72-adfa-7ac94d10f3a3",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"type": "radio",
				"autoFocus": true,
				"id": "1c6b8ff9-b3cd-4354-b305-cb5304289d8b",
				"value": "These are tuple notations in TypeScript",
				"blockType": "text",
				"placeholder": "Add option"
			}
		],
		"openingTime": 1669624312292,
		"voted": [],
		"category": "typescript",
		"id": "5ee8d629-48c2-4b57-81b3-f4b90411e79f",
		"status": "closed",
		"codeBlock": "const bookHoursInOodoo = (hours: number | string) => {}",
		"codeSandboxExample": "",
		"type": "radio",
		"correctAnswers": [
			{
				"value": "It means the type can either be a string or a number",
				"id": "98c94050-6462-4d1c-ae65-a748a091255e"
			}
		],
		"pollNumber": 174,
		"question": "In TS, the following union type feature in the function arguments can be seen, what does it mean?"
	},
	{
		"codeSandboxExample": "",
		"answers": [
			{
				"id": "eioozak-ojnab",
				"type": "radio",
				"value": "some",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "every",
				"id": "4b016357-2792-4479-96c9-8e7c9dfcc14f",
				"type": "radio",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"value": "isEqual",
				"blockType": "text",
				"id": "250fc276-8eba-4688-8103-aa5c5786bed4",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "transform",
				"id": "e1f9ccf9-c46e-4144-b38b-70e074833816",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"id": "9f17112e-805e-432d-a308-6f49c4046d30",
				"value": "transduce"
			},
			{
				"value": "map",
				"id": "f79a579b-c223-4e30-b7c1-56aec4c38391",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false
			},
			{
				"type": "radio",
				"id": "995a1f92-8ea8-4cc6-ae75-c733d477952a",
				"value": "foreach",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"autoFocus": false,
				"id": "4e65e97f-bfb2-4804-9b00-12bee2fbfc89",
				"value": "filter",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "37916840-8ccc-4532-80a7-f642afd1efe8",
				"blockType": "text",
				"autoFocus": true,
				"placeholder": "Add option",
				"value": "reduce",
				"type": "radio"
			}
		],
		"pollNumber": 173,
		"voted": [],
		"codeBlock": "function ???(array, transform) {\n  let arr = [];\n  for (let element of array) {\n    arr.push(transform(element));\n  }\n  return arr;\n}",
		"sentInByUser": null,
		"category": "javascript",
		"id": "ceced07d-1173-4bbd-8ef0-5d68901088e1",
		"correctAnswers": [
			{ "id": "f79a579b-c223-4e30-b7c1-56aec4c38391", "value": "map" }
		],
		"status": "new",
		"question": "In JS, higher order functions exist out of lower level code which is known, what internals of a familiar higher-order function is shown?",
		"type": "radio"
	},
	{
		"pollNumber": 172,
		"type": "radio",
		"answers": [
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false,
				"value": "align-items",
				"id": "eioozak-ojnab"
			},
			{
				"autoFocus": false,
				"value": "justify-content",
				"blockType": "text",
				"id": "b88ec891-047d-4db5-90b2-c21ccf12f606",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "flex-basis ",
				"id": "3ef59107-407e-4ff1-bf77-cf4cc9f1b0cc",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "flex-wrap ",
				"autoFocus": false,
				"type": "radio",
				"id": "f02c5ea6-44f0-4d58-afa1-9f156bda78a3"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "415e9c3e-5a50-40b0-97e2-02d9b23c656b",
				"type": "radio",
				"value": "flex-center"
			},
			{
				"id": "0c341d47-37a9-4c9f-80f4-5bbee8b72ff0",
				"placeholder": "Add option",
				"value": "flex-muscle",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false
			},
			{
				"id": "bdf8e198-27bb-408c-82d7-b90c8b2d79b1",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "flex-float",
				"type": "radio",
				"autoFocus": true
			}
		],
		"voted": [],
		"id": "0a33d1f3-13ed-4e6e-9a5e-6f8b5b2557e6",
		"codeBlock": ".container { \n   display: flex; \n   flex-direction: column; \n}",
		"sentInByUser": null,
		"correctAnswers": [{ "value": "align-items", "id": "eioozak-ojnab" }],
		"question": "Flexbox wasn't there when I was in school, to center elements horizontally from this code example, what is the missing rule?",
		"category": "css",
		"status": "new",
		"codeSandboxExample": ""
	},
	{
		"correctAnswers": [
			{
				"value": "It can be applied to directly access a DOM element",
				"id": "2df95a6d-0e7b-4510-893a-6ae305160066"
			},
			{
				"id": "ec374423-ea31-4736-8cfc-acfbb90d4841",
				"value": "When updated, it can store mutable values without requiring a re-render\n"
			}
		],
		"type": "checkbox",
		"pollNumber": 171,
		"status": "new",
		"category": "react",
		"id": "d40bfc35-9d22-41b5-a475-019cb4c3b1d3",
		"codeBlock": "",
		"question": "In React, the word React you won't find a letter F, what is a use case for useRef? ",
		"sentInByUser": null,
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false,
				"id": "eioozak-ojnab",
				"value": "It can be used as reference storing facts in detail about a codebase. When you contribute to the codebase, you'll refer to useRef",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"value": "JS has types that are either value or reference; with useRef you can make each variable a \"reference\"",
				"id": "33500230-f3c3-4ded-a354-3f43b57416cb",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "When updated, it can store mutable values without requiring a re-render\n",
				"id": "ec374423-ea31-4736-8cfc-acfbb90d4841",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"id": "2df95a6d-0e7b-4510-893a-6ae305160066",
				"value": "It can be applied to directly access a DOM element",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "b9fb92ed-2609-4a19-a0f0-85bbd1676727",
				"value": "useRef is a React learning resource initiative from Dan Abramov",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"value": "useRef is the name of a yearly poll for people working with React, to have vote in political issues happening at React",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "f2e854c6-ca4d-43d6-8552-9835c019f744"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "c724b34e-0415-4011-952f-4e436b2c2722",
				"autoFocus": true,
				"value": "With useRef you can refer to your code with a \"comment reference\" which is handy to have a good overview of all code with comments"
			}
		],
		"codeSandboxExample": "",
		"voted": []
	},
	{
		"codeBlock": "console.log(pizza);",
		"answers": [
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"type": "radio",
				"blockType": "text",
				"value": "unexistant"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "c303d372-dde6-4659-b61d-142d6efaaad8",
				"value": "undefined",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"id": "f7dcdcd1-97ec-4e88-8222-dc39bced6016",
				"value": "null",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"type": "radio",
				"value": "undeclared",
				"placeholder": "Add option",
				"id": "e6afe04c-802f-4b34-a198-43a979254506"
			},
			{
				"type": "radio",
				"value": "unreasonable",
				"autoFocus": false,
				"id": "dbadd099-b91c-4c70-aa74-9443feb20960",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "unsubmitted",
				"autoFocus": false,
				"id": "727e0e19-face-43fc-b108-99c1ffa2481b",
				"type": "radio",
				"blockType": "text"
			},
			{
				"id": "0cee4b66-ed68-4496-a116-25cb7adc8018",
				"value": "It will automatically log the window, because if JS can’t find the variable, it will find the highest level of variable (like how “this” behaves in scope leaks)",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": true,
				"blockType": "text"
			}
		],
		"category": "javascript",
		"voted": [],
		"id": "255bf78a-9cf4-479b-8ca6-4e1f000b90e2",
		"status": "new",
		"codeSandboxExample": "",
		"question": "In JS, see the following code on your screen, what should the variable’s value have been?",
		"correctAnswers": [
			{
				"id": "e6afe04c-802f-4b34-a198-43a979254506",
				"value": "undeclared"
			}
		],
		"type": "radio",
		"sentInByUser": null,
		"pollNumber": 170
	},
	{
		"answers": [
			{
				"type": "radio",
				"id": "eioozak-ojnab",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "opacity"
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "disabled state ",
				"type": "radio",
				"blockType": "text",
				"id": "2ef5bbba-cb98-473d-90ea-f301deea2fe6"
			},
			{
				"value": "background-opacity",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "f765b2b4-5be6-4bd2-9b97-7feeec9d6665"
			},
			{
				"id": "e00c51d1-5113-4516-ad17-a626f7e17b38",
				"type": "radio",
				"value": "background-color-opacity ",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"id": "25015e35-5bd2-40d2-8176-4b836a257933",
				"blockType": "text",
				"autoFocus": false,
				"value": "With CSS vars",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "rgba ",
				"id": "d09c29a2-084f-4a54-be7f-a52cce4a0a8f",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"id": "8a67f148-52a0-4aac-a199-4c827093a49f",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": true,
				"type": "radio",
				"value": "-webkit-color-transparency-level"
			}
		],
		"status": "closed",
		"category": "css",
		"openingTime": 1670318568918,
		"voted": [
			{
				"answerId": "d09c29a2-084f-4a54-be7f-a52cce4a0a8f",
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
			},
			{
				"answerId": "f765b2b4-5be6-4bd2-9b97-7feeec9d6665",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "d09c29a2-084f-4a54-be7f-a52cce4a0a8f"
			},
			{
				"answerId": "d09c29a2-084f-4a54-be7f-a52cce4a0a8f",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "d09c29a2-084f-4a54-be7f-a52cce4a0a8f",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"answerId": "d09c29a2-084f-4a54-be7f-a52cce4a0a8f",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"answerId": "d09c29a2-084f-4a54-be7f-a52cce4a0a8f",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "d09c29a2-084f-4a54-be7f-a52cce4a0a8f"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "d09c29a2-084f-4a54-be7f-a52cce4a0a8f"
			},
			{
				"answerId": "d09c29a2-084f-4a54-be7f-a52cce4a0a8f",
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1"
			},
			{
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32",
				"answerId": "d09c29a2-084f-4a54-be7f-a52cce4a0a8f"
			},
			{
				"answerId": "d09c29a2-084f-4a54-be7f-a52cce4a0a8f",
				"userId": "PCKjaUvI9caAgoRZTuQYvjRirCl1"
			}
		],
		"correctAnswers": [
			{ "id": "d09c29a2-084f-4a54-be7f-a52cce4a0a8f", "value": "rgba " }
		],
		"codeBlock": "",
		"type": "radio",
		"codeSandboxExample": "https://codesandbox.io/embed/hopeful-pasteur-vgg62s?fontsize=14&hidenavigation=1&theme=dark&view=preview",
		"question": "In CSS, this question might be apparent, but how can you make only the background, not the text, of this button semi transparent? ",
		"id": "768a3a2b-1462-4c4c-9f60-86b4c26736ef",
		"sentInByUser": null,
		"pollNumber": 169
	},
	{
		"type": "checkbox",
		"voted": [],
		"sentInByUser": {
			"displayName": "Sander van Maurik",
			"id": "tRLVcXr9ZXgF3A5VzwO4rrESCY32"
		},
		"status": "new",
		"codeSandboxExample": "",
		"pollNumber": 168,
		"correctAnswers": [
			{ "id": "eioozak-ojnab", "value": "1.0 + 2.0 === 3.0" },
			{
				"value": "0.2 + 0.3 === 0.5",
				"id": "9849c93f-2d31-46ca-bfd4-33109023a995"
			},
			{
				"id": "709b16b6-9239-42a4-8a8d-15202483ae95",
				"value": "0.1 + 0.6 === 0.7"
			}
		],
		"category": "javascript",
		"question": "In JS, notice alot of weird things are still due, which statements evaluate to true? ",
		"codeBlock": "",
		"answers": [
			{
				"value": "1.0 + 2.0 === 3.0",
				"id": "eioozak-ojnab",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "0.1 + 0.2 === 0.3",
				"id": "728bafe6-8587-4224-8474-136c84f3c753",
				"type": "radio",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "9849c93f-2d31-46ca-bfd4-33109023a995",
				"blockType": "text",
				"type": "radio",
				"value": "0.2 + 0.3 === 0.5"
			},
			{
				"blockType": "text",
				"id": "709b16b6-9239-42a4-8a8d-15202483ae95",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"value": "0.1 + 0.6 === 0.7"
			},
			{
				"value": "0.1 + 0.7 === 0.8",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": true,
				"id": "81159552-86c6-47da-af16-377789541082"
			}
		],
		"id": "a4886355-3509-49bd-93f8-e2f80ac07dcc"
	},
	{
		"sentInByUser": null,
		"status": "closed",
		"codeSandboxExample": "",
		"question": "In JS, see these arrays on your screen, when applying \"push\" and \"concat\", what should the output of both arrays have been? ",
		"correctAnswers": [
			{
				"id": "b5f050e7-7067-471a-839d-c719a3abf202",
				"value": "Colors get \"pewter\" added, newColors remains the same"
			}
		],
		"answers": [
			{
				"placeholder": "Add option",
				"value": "Colors and newColors both remain as is",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"id": "eioozak-ojnab"
			},
			{
				"type": "radio",
				"id": "5a615964-8303-4faf-ac77-b00a4bb8d97d",
				"autoFocus": false,
				"value": "Colors and newColors both get \"pewter\" added at the end of the array",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Colors get \"pewter\" added, newColors remains the same",
				"id": "b5f050e7-7067-471a-839d-c719a3abf202"
			},
			{
				"autoFocus": false,
				"value": "newColors get \"pewter\" added, colors remains the same",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "b88fd3d7-df8a-4e20-81c7-0d768eab42ea"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"id": "5bc8a6f0-d7b0-4474-a3ea-0b68b85ab4e6",
				"value": "newColors gets concatenated to colors",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "Because the array is exactly the same, JS is smart enough to merge both arrays in one. The first declared array \"colors\" will be undefined ",
				"id": "3cf6402a-1fb0-4e2f-b3d8-81a12d1e164d",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "This will throw an error",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"autoFocus": true,
				"id": "d9a10d01-dac9-4d8d-bc5f-1e9db785d6ff"
			}
		],
		"openingTime": 1669714672340,
		"voted": [],
		"category": "javascript",
		"type": "radio",
		"id": "ba4eb9f8-86c2-4170-9b50-ea9ab233ff60",
		"pollNumber": 167,
		"codeBlock": "const colors = [\"Vermillion\", \"Saffron\", \"Celadon\", \"Cerulean\", \"Indigo\", \"Fuchsia\"]; \nconst newColors = [\"Vermillion\", \"Saffron\", \"Celadon\", \"Cerulean\", \"Indigo\", \"Fuchsia\"]; \n\ncolors.push(\"pewter\");\nnewColors.concat(\"pewter\");"
	},
	{
		"codeSandboxExample": "",
		"sentInByUser": null,
		"pollNumber": 166,
		"voted": [],
		"category": "javascript",
		"id": "2b86be84-a867-4dd0-9b83-f4d8db6e0360",
		"correctAnswers": [
			{
				"id": "7e15d579-dab3-41d6-8e7a-c8ff48daa010",
				"value": "When you want to combine values of an array"
			}
		],
		"type": "radio",
		"status": "new",
		"answers": [
			{
				"id": "eioozak-ojnab",
				"blockType": "text",
				"type": "radio",
				"value": "When you want to query to the database",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"id": "7e15d579-dab3-41d6-8e7a-c8ff48daa010",
				"placeholder": "Add option",
				"value": "When you want to combine values of an array"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"id": "2e2266cf-f638-4394-8674-3d6d54313de6",
				"value": "When you want to reduce page load ",
				"type": "radio"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"value": "When you want to render JSX tags ",
				"id": "fe701f66-cc82-4496-81da-3d0efb3dc1b1",
				"placeholder": "Add option"
			},
			{
				"value": "When you want to increase performance of your code ",
				"id": "ec3fe98b-0acf-49e2-941a-aca11c6e34d3",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "When you want your code to be more environmental aware",
				"type": "radio",
				"id": "3ddbea44-d9fc-44b8-9a58-b9d455ed4f69",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"id": "71a22ab4-30e6-4007-8516-b2ec9c9271c6",
				"value": "When .map and .filter are not supported in the browser ",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"blockType": "text",
				"autoFocus": true,
				"placeholder": "Add option",
				"value": "When you enjoy your freemium JavaScript subscription with limited use of functions ",
				"type": "radio",
				"id": "f9cd3ea0-b323-404c-b138-b05733adeb7d"
			}
		],
		"question": "In JS, we have a function called reduce, what is a common case for it's use?",
		"codeBlock": ""
	},
	{
		"codeSandboxExample": "",
		"pollNumber": 165,
		"type": "radio",
		"question": "In JS, higher order functions exist out of lower level code which is known, what internals of a familiar higher-order function is shown? ",
		"codeBlock": "function ???(array, test) {\n  let passed = [];\n  for (let element of array) {\n    if (test(element)) {\n      passed.push(element);\n    }\n  }\n  return passed;\n}",
		"status": "closed",
		"correctAnswers": [
			{ "value": "filter", "id": "e1841111-8cd4-40a0-b228-f7df235f7921" }
		],
		"answers": [
			{
				"type": "radio",
				"value": "map",
				"blockType": "text",
				"autoFocus": false,
				"id": "eioozak-ojnab",
				"placeholder": "Add option"
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "reduce ",
				"blockType": "text",
				"type": "radio",
				"id": "ddcb7924-684b-4d00-8cb9-34ebca97fb53"
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "push",
				"id": "d31f1c30-e6d5-45a4-a907-99fcc7573f62",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "fc93e643-9784-46e4-b0c0-130ee901822f",
				"placeholder": "Add option",
				"value": "concat",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"id": "5a45295b-0748-45cd-b266-bea96039a0e5",
				"value": "reduceRight",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "test",
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"id": "712deec3-3db5-4b14-b488-9c5c1ee9f1ef"
			},
			{
				"placeholder": "Add option",
				"value": "some",
				"id": "6f1b0b75-0783-4eed-b512-64cad414c23b",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "e274c865-961b-4dfc-ae81-d3da96b7fd31",
				"autoFocus": false,
				"value": "even"
			},
			{
				"id": "e1841111-8cd4-40a0-b228-f7df235f7921",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "filter",
				"autoFocus": false
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option",
				"id": "655f96a9-94b0-49ff-86e2-842b6744c1aa",
				"type": "radio",
				"value": "pass"
			}
		],
		"category": "javascript",
		"voted": [],
		"openingTime": 1669365763846,
		"sentInByUser": null,
		"id": "02b8346b-9cb0-49ba-b3e7-85ba1e4e4b4e"
	},
	{
		"id": "d53a073e-7faa-4dee-8719-b29b0f21208d",
		"pollNumber": 164,
		"openingTime": 1668674800017,
		"question": "In JS, equality checks is a subject you should be in on, do you know why \"==\" is frowned upon?",
		"codeSandboxExample": "",
		"type": "radio",
		"codeBlock": "",
		"sentInByUser": null,
		"voted": [],
		"status": "closed",
		"correctAnswers": [
			{
				"value": "Because \"==\" compares for equality after implicitly doing type conversions, which might be dangerous",
				"id": "91d24be5-2a52-4604-9ec1-6fbf01212ee1"
			}
		],
		"category": "javascript",
		"answers": [
			{
				"value": "Because \"==\" doesn't check equality; It is assigning values to variables",
				"id": "eioozak-ojnab",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"id": "58d3fecc-ddf0-4345-ad47-f6bf56e8896e",
				"type": "radio",
				"autoFocus": false,
				"value": "Because the amount of \"=\" improves equality checks; That's why the W3C is planning to release \"====\" and \"=====\"",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "6cecd5e3-0760-472b-b52d-089bc850bb28",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "Because \"===\" is 10 times faster than \"==\""
			},
			{
				"id": "b972c8dc-a5a1-4440-81e1-d83eb9fa4061",
				"blockType": "text",
				"value": "Because \"==\" only checks on primitive types and doesn't do a deep equal ",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "6386b13b-3a1f-408c-bb88-3084c0108852",
				"type": "radio",
				"autoFocus": false,
				"value": "Because \"==\" is deprecated",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "Because \"==\" compares for equality after implicitly doing type conversions, which might be risky and not what you expect",
				"id": "91d24be5-2a52-4604-9ec1-6fbf01212ee1",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "a20b08ab-847a-40ae-ab9f-792996263e9c",
				"type": "radio",
				"value": "Because in a survey of \"the State of JS\", 65% of all the developers voted to use \"===\" over \"==\"",
				"autoFocus": false
			},
			{
				"type": "radio",
				"autoFocus": false,
				"id": "7a1c7914-a1f1-4bf4-af39-fc6ba2d6e7ce",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Because the ESLint company decided to not lint \"===\" "
			},
			{
				"autoFocus": true,
				"placeholder": "Add option",
				"id": "6ca76307-68ef-472b-b0c4-ba6a6d8c7512",
				"type": "radio",
				"value": "Because the W3C wants to deprecate \"===\" in favour of \"==\", switch the functionality from \"===\" to \"==\", because \"==\" and \"===\" caused to much confusion for developers (leading with the thought, the best football players in the world won't make a perfect team)",
				"blockType": "text"
			}
		]
	},
	{
		"correctAnswers": [
			{
				"id": "5919f25b-e2c2-48de-b4b5-9d4039a852fa",
				"value": "recursion"
			}
		],
		"id": "8acfdd1a-c54d-4faf-8832-8d10c5ce2519",
		"status": "closed",
		"type": "radio",
		"codeSandboxExample": "",
		"voted": [
			{
				"answerId": "5919f25b-e2c2-48de-b4b5-9d4039a852fa",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"answerId": "5919f25b-e2c2-48de-b4b5-9d4039a852fa",
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
			},
			{
				"answerId": "5919f25b-e2c2-48de-b4b5-9d4039a852fa",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62",
				"answerId": "5919f25b-e2c2-48de-b4b5-9d4039a852fa"
			},
			{
				"answerId": "5919f25b-e2c2-48de-b4b5-9d4039a852fa",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "5919f25b-e2c2-48de-b4b5-9d4039a852fa"
			},
			{
				"answerId": "5919f25b-e2c2-48de-b4b5-9d4039a852fa",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"answerId": "5919f25b-e2c2-48de-b4b5-9d4039a852fa",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2",
				"answerId": "5919f25b-e2c2-48de-b4b5-9d4039a852fa"
			},
			{
				"answerId": "5919f25b-e2c2-48de-b4b5-9d4039a852fa",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"userId": "PCKjaUvI9caAgoRZTuQYvjRirCl1",
				"answerId": "5919f25b-e2c2-48de-b4b5-9d4039a852fa"
			},
			{
				"answerId": "5919f25b-e2c2-48de-b4b5-9d4039a852fa",
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2"
			},
			{
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32",
				"answerId": "5919f25b-e2c2-48de-b4b5-9d4039a852fa"
			},
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "5919f25b-e2c2-48de-b4b5-9d4039a852fa"
			}
		],
		"category": "javascript",
		"pollNumber": 163,
		"codeBlock": "",
		"answers": [
			{
				"value": "reversion",
				"id": "eioozak-ojnab",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "d89e0b4b-9ced-4bc3-a6dd-8eca73cf99dd",
				"type": "radio",
				"value": "redirecting",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "94b46bc4-be92-4270-af59-0afca273cb2d",
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "reducing"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"id": "5919f25b-e2c2-48de-b4b5-9d4039a852fa",
				"placeholder": "Add option",
				"value": "recursion"
			},
			{
				"blockType": "text",
				"value": "closure",
				"id": "1053cb62-cb1e-4c90-a598-6c2efa866b2d",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false
			},
			{
				"id": "a597f771-98db-4bc7-a95c-26ecd66247f7",
				"type": "radio",
				"placeholder": "Add option",
				"value": "currying",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"value": "reimbursing",
				"type": "radio",
				"id": "7ad39636-12ac-4f53-86f9-abea38d6df96",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"value": "hoisting",
				"type": "radio",
				"id": "f2047d44-1fb9-407a-998e-9966508483d1",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false,
				"id": "446479f7-0f2e-4c00-a149-14f72dd650ca",
				"blockType": "text",
				"value": "reproducing"
			},
			{
				"value": "rendering",
				"placeholder": "Add option",
				"autoFocus": true,
				"id": "c5d9bbe3-6588-4aa2-8372-6d5dcd855861",
				"blockType": "text",
				"type": "radio"
			}
		],
		"sentInByUser": null,
		"question": "In JS, a function calling itself has a name, do you know at what term I aim?",
		"openingTime": 1670236185663
	},
	{
		"type": "radio",
		"pollNumber": 162,
		"answers": [
			{
				"blockType": "text",
				"id": "eioozak-ojnab",
				"value": "You can clamp tags like <img/> or <video/> to a line and it will never change position.",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "You can define how many lines a <p> should contain at a maximum.",
				"blockType": "text",
				"id": "627395d6-62fa-4a29-8fb2-be19cb554a37",
				"type": "radio"
			},
			{
				"value": "The line-clamp cuts off the text at a specific number of lines without any JS needed.",
				"type": "radio",
				"autoFocus": false,
				"id": "c6680719-8c43-4af6-8797-9c54e8cf80a8",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "08404f19-a335-4770-86d9-91217ae58fea",
				"value": "Line-clamp is the new successor to the flex row property.",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"autoFocus": true,
				"blockType": "text",
				"type": "radio",
				"id": "aa6db648-aabd-4cad-8373-0adb2b201125",
				"value": "Online \"pirates\" can't hijack content because line-clamp protects the text in HTML.",
				"placeholder": "Add option"
			}
		],
		"status": "closed",
		"id": "b9e5acc3-6d2c-4633-b8ec-22ca84daa714",
		"sentInByUser": {
			"displayName": "Dominic Bisschop",
			"id": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
		},
		"question": "In the future world of CSS, new properties are there to access, the \"line-clamp\" property is new, what does it do?",
		"codeBlock": ".line-clamp {\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;  \n  overflow: hidden;\n}",
		"correctAnswers": [
			{
				"value": "The line-clamp cuts off the text at a specific number of lines without any JS needed.",
				"id": "c6680719-8c43-4af6-8797-9c54e8cf80a8"
			}
		],
		"openingTime": 1670922536120,
		"voted": [
			{
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8",
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8"
			},
			{
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8",
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
			},
			{
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8"
			},
			{
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8"
			},
			{
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8",
				"userId": "PCKjaUvI9caAgoRZTuQYvjRirCl1"
			},
			{
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8",
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72"
			},
			{
				"userId": "vY2s0EviF9QbhOnHvGSlG4Kf1l33",
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8"
			},
			{
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8",
				"userId": "cbDzVSO06RQfljRPUyLUukejxtz1"
			},
			{
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2",
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8"
			},
			{
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8",
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "c6680719-8c43-4af6-8797-9c54e8cf80a8"
			}
		],
		"codeSandboxExample": "",
		"category": "css"
	},
	{
		"correctAnswers": [
			{
				"id": "0b945e9c-2451-4e0f-82e5-f9b3a9b4fe75",
				"value": "Container queries allows you to change the layout based on the size of your container; media queries allows to change the layout based on the size of the viewport"
			}
		],
		"answers": [
			{
				"id": "eioozak-ojnab",
				"value": "Container queries are a way to retrieve server-side data in CSS; media queries are limited to client-side data",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "f2afe86b-154f-4eb4-9904-9ecf755090e5",
				"value": "Container queries enables scope isolation CSS by container; media queries enables scope isolation CSS by page"
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "0b945e9c-2451-4e0f-82e5-f9b3a9b4fe75",
				"value": "Container queries allows you to change the layout based on the size of your container; media queries allows to change the layout based on the size of the viewport",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "7dd9cfba-0972-460d-8e74-16a7df4dc8e1",
				"value": "Container queries removes the need of adding \"container divs\" for styling; With media queries you still need those",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "Container queries support types with TypeScript, media queries do not",
				"id": "ae260d1d-1667-42f0-b66b-d5a565511932",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "Container queries have a set of built-in sizes of popular screen sizes; with media queries you have to come up with screen sizes yourself",
				"id": "5d822669-51af-4265-bc6a-8726ed9ff073",
				"blockType": "text",
				"autoFocus": true
			}
		],
		"pollNumber": 161,
		"type": "radio",
		"sentInByUser": null,
		"id": "595d1b0e-b5d8-4c5c-830f-2cc59198b220",
		"question": "In CSS, this poll you can answer with ease, what differs container queries from media queries?",
		"codeBlock": "",
		"openingTime": 1669798924954,
		"category": "css",
		"status": "closed",
		"voted": [],
		"codeSandboxExample": ""
	},
	{
		"pollNumber": 160,
		"type": "checkbox",
		"status": "closed",
		"id": "2ae5296b-d37b-4a4b-b30b-901a258e74be",
		"category": "html",
		"codeBlock": "",
		"openingTime": 1668761827782,
		"answers": [
			{
				"value": "Links should have sound effects when clicking on them (a11y for blind people)",
				"id": "eioozak-ojnab",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"type": "radio",
				"value": "Links should always have a blue color",
				"placeholder": "Add option",
				"id": "aad63884-0da4-4b32-8e18-4288fd56a24f",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"value": "Links should have a distinguishable color contrast",
				"type": "radio",
				"id": "9c265756-0877-4f97-93df-73e0f21698a0"
			},
			{
				"value": "Links should be a <button> when they are internal; they should be <a> if they are external",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"id": "f880e611-2038-4625-9394-74eb42e0c2d6",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio",
				"id": "ccc73941-a8d9-4860-948e-8272daca688b",
				"value": "Links should be made identifiable by having it's text atleast contain the word “link”"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "3cc5f599-6a8c-4592-b8a4-d0d1be3d9c45",
				"value": "Links should not jump to sections because it confuses your users, it should contain a smooth scroll to let users better understand what’s happening",
				"type": "radio"
			},
			{
				"value": "Links should always be underlined",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "bd92d5a9-55b0-4ea4-b242-90c9046913b9",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "Link text be provided in as many languages as possible ",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "5400f3fd-2881-418d-82d2-fea368149335"
			},
			{
				"blockType": "text",
				"type": "radio",
				"autoFocus": true,
				"value": "Links should be styled on all states: :not-visited, :hover, :click, :visited:, :active:, :inactive: and :disabled ",
				"id": "775991e7-62db-49ac-86b5-47c420cbd032",
				"placeholder": "Add option"
			}
		],
		"sentInByUser": null,
		"correctAnswers": [
			{
				"id": "9c265756-0877-4f97-93df-73e0f21698a0",
				"value": "Links should have a distinguishable color contrast"
			},
			{
				"value": "Links should always be underlined",
				"id": "bd92d5a9-55b0-4ea4-b242-90c9046913b9"
			}
		],
		"question": "In HTML, links should be accessible, name some best practices that are impeccable!",
		"voted": [],
		"codeSandboxExample": ""
	},
	{
		"voted": [],
		"answers": [
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "<currency>",
				"type": "radio",
				"id": "eioozak-ojnab",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "<money>",
				"id": "f71b7d77-77cc-4c2a-bfb3-bb414f37811d",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "c15446ab-775b-4d2b-8098-dc791a5bc07b",
				"value": "<price>",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"autoFocus": false,
				"id": "c848f5be-f948-42e3-b29d-afc8875550b1",
				"value": "<prize>",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"value": "<monetary>",
				"type": "radio",
				"placeholder": "Add option",
				"id": "a1a91f32-8484-449a-ba05-0ae5e9f617ee"
			},
			{
				"value": "<coin>",
				"id": "efca7c03-895f-4165-a377-eac4db238a6f",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "<investment>",
				"type": "radio",
				"id": "f318fe17-2da9-4a7e-9184-27f0be144e30",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"value": "<doekoe>",
				"id": "d5d85cd5-8b8f-47b7-9c86-7756e8d6c7d7",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "618f1c94-20b3-4b10-8de5-94a84a9b7f3d",
				"value": "There is no semantic tag for this",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"value": "<gold>",
				"id": "717d5634-8bbe-4091-9540-5a7aa33795fd",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "<galleon>",
				"id": "33a19cb8-5040-4db4-942a-f21d18992ccb"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"value": "<bitcoin>",
				"id": "3a14b36d-35f7-4fb5-b29c-9faa4108a5cb",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "322376e8-cc03-4c1f-beaa-582e26a0a1ad",
				"value": "<pricetag>",
				"autoFocus": true,
				"blockType": "text"
			}
		],
		"sentInByUser": null,
		"pollNumber": 159,
		"openingTime": 1669194379467,
		"question": "In HTML, we often display numbers as price, what tag can you use, would you advise?",
		"correctAnswers": [
			{
				"id": "618f1c94-20b3-4b10-8de5-94a84a9b7f3d",
				"value": "There is no semantic tag for this"
			}
		],
		"codeBlock": "",
		"status": "closed",
		"codeSandboxExample": "",
		"category": "html",
		"id": "d1377f98-5889-40ff-959f-ab24a494917e",
		"type": "radio"
	},
	{
		"sentInByUser": null,
		"status": "new",
		"correctAnswers": [
			{
				"id": "eioozak-ojnab",
				"value": "<meta name=“robots” content=“noindex” />"
			}
		],
		"type": "radio",
		"voted": [],
		"pollNumber": 158,
		"category": "html",
		"answers": [
			{
				"autoFocus": false,
				"type": "radio",
				"id": "eioozak-ojnab",
				"value": "<meta name=“robots” content=“noindex” />",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "<meta name=“css” content=“display: none” />",
				"blockType": "text",
				"id": "99ec6efd-f73c-4260-a0eb-6a27b9162aa1"
			},
			{
				"autoFocus": false,
				"id": "0f3014e2-ed95-47a7-a62e-dbea252abf16",
				"type": "radio",
				"value": "<meta name=“seo” content=“none” />",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "427cd77b-8cdd-41c6-8760-07bc1086b122",
				"value": "<meta name=“robots” content=“restricted” />",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"value": "<meta name=“stalker” content=“stopfollowingme!” />",
				"type": "radio",
				"placeholder": "Add option",
				"id": "aaca7899-65c6-49a1-a265-03e1ed4c6cf5",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"blockType": "text",
				"value": "All pages on the internet are crawled by the search engines, there is no tag for this",
				"autoFocus": true,
				"type": "radio",
				"placeholder": "Add option",
				"id": "bddc2561-fa1d-4041-8274-bd5f46fa1894"
			}
		],
		"id": "37417c77-ecae-46f7-a2db-007caa45b174",
		"codeBlock": "",
		"codeSandboxExample": "",
		"question": "In HTML, some pages can be hidden from a search engine, what meta tag is used for that intention?"
	},
	{
		"pollNumber": 157,
		"correctAnswers": [
			{
				"id": "19ac00ff-5905-491b-8320-f4b8f1ffd1c7",
				"value": "That this unit can never guarantee the given amount of \"ch\", because different fonts have different widths "
			}
		],
		"question": "In CSS, \"ch\" is a unit that can be applied, what risk of using it should not be denied? ",
		"status": "closed",
		"type": "radio",
		"openingTime": 1668415035597,
		"category": "css",
		"codeSandboxExample": "",
		"sentInByUser": null,
		"id": "5eb0c0b9-e396-4447-bec0-babd6a317302",
		"voted": [],
		"codeBlock": "",
		"answers": [
			{
				"blockType": "text",
				"autoFocus": false,
				"id": "eioozak-ojnab",
				"value": "That this unit is pretty new and not yet supported by all browsers",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "2f26266e-0f99-46ec-b325-bd4d4af251ab",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"value": "Applying ch on elements is somewhat risky because it's not used often and may confuse developers who might not understand it ",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "eebc567d-8d88-46f8-9d53-78d081edaed1",
				"placeholder": "Add option",
				"value": "That developers above the rivers are not familiar with \"ch\" due to their \"harde G\" pronunciation",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"value": "That this unit can never guarantee the given amount of \"ch\", because different fonts have different widths ",
				"autoFocus": false,
				"id": "19ac00ff-5905-491b-8320-f4b8f1ffd1c7",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "That this is a deprecated unit and should not be used in favour of rems and ems",
				"type": "radio",
				"autoFocus": false,
				"id": "a60fc98d-2164-4d41-80a1-11052c4ae3ce",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "That the effect of ch is not applicable on large screens ",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "6899108d-c64f-457f-89cd-a6e5a89ba788",
				"autoFocus": false
			},
			{
				"id": "6b7bff52-794a-4fa0-b362-5ecd737ab651",
				"autoFocus": true,
				"value": "When using ch, the font will automatically change to a font with equal widths",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			}
		]
	},
	{
		"codeSandboxExample": "",
		"pollNumber": 156,
		"id": "0d3a31e8-b199-48ef-8a91-74b15fe260c2",
		"openingTime": 1669971904252,
		"category": "html",
		"correctAnswers": [
			{ "id": "eioozak-ojnab", "value": "A list of steps in a recipe" },
			{
				"value": "A timeline of events in an incident report",
				"id": "28bd1b4b-c343-467f-ae4d-24893e095405"
			},
			{
				"value": "A list of quizzers on a leaderboard in a poll app",
				"id": "e5136e20-3a30-4fec-a15f-727a1965c70b"
			},
			{
				"id": "f19edea4-72bf-4bc0-954f-e1599418be0b",
				"value": "A list of stories in a Scrum backlog"
			}
		],
		"sentInByUser": {
			"displayName": "Rik Tonnard",
			"id": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
		},
		"answers": [
			{
				"placeholder": "Add option",
				"value": "A list of steps in a recipe",
				"autoFocus": false,
				"blockType": "text",
				"id": "eioozak-ojnab",
				"type": "radio"
			},
			{
				"value": "A timeline of events in an incident report",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"id": "28bd1b4b-c343-467f-ae4d-24893e095405",
				"blockType": "text"
			},
			{
				"value": "A list of criteria in a definition of done",
				"id": "989e381e-61d5-47b1-8afd-312fb34e79dd",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "A list of ingredients in a recipe",
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option",
				"id": "03ebe0ac-e01a-4d28-959c-22689d04a4e3",
				"type": "radio"
			},
			{
				"autoFocus": false,
				"value": "A list of quizzers on a leaderboard in a poll app",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "e5136e20-3a30-4fec-a15f-727a1965c70b"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "A list of answers to a poll question",
				"id": "0f566e56-c56c-4a49-9b68-9ff2a71a0149",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"autoFocus": true,
				"placeholder": "Add option",
				"value": "A list of stories in a Scrum backlog",
				"id": "f19edea4-72bf-4bc0-954f-e1599418be0b"
			}
		],
		"voted": [
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "eioozak-ojnab"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "e5136e20-3a30-4fec-a15f-727a1965c70b"
			},
			{
				"answerId": "e5136e20-3a30-4fec-a15f-727a1965c70b",
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1"
			},
			{
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1",
				"answerId": "28bd1b4b-c343-467f-ae4d-24893e095405"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "28bd1b4b-c343-467f-ae4d-24893e095405"
			},
			{
				"answerId": "e5136e20-3a30-4fec-a15f-727a1965c70b",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"answerId": "28bd1b4b-c343-467f-ae4d-24893e095405",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "e5136e20-3a30-4fec-a15f-727a1965c70b"
			},
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "f19edea4-72bf-4bc0-954f-e1599418be0b"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "eioozak-ojnab"
			},
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "28bd1b4b-c343-467f-ae4d-24893e095405"
			},
			{
				"answerId": "f19edea4-72bf-4bc0-954f-e1599418be0b",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
			},
			{
				"answerId": "28bd1b4b-c343-467f-ae4d-24893e095405",
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "e5136e20-3a30-4fec-a15f-727a1965c70b"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "f19edea4-72bf-4bc0-954f-e1599418be0b"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72"
			},
			{
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72",
				"answerId": "28bd1b4b-c343-467f-ae4d-24893e095405"
			},
			{
				"answerId": "e5136e20-3a30-4fec-a15f-727a1965c70b",
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72"
			},
			{
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72",
				"answerId": "f19edea4-72bf-4bc0-954f-e1599418be0b"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "PCKjaUvI9caAgoRZTuQYvjRirCl1"
			},
			{
				"answerId": "28bd1b4b-c343-467f-ae4d-24893e095405",
				"userId": "PCKjaUvI9caAgoRZTuQYvjRirCl1"
			},
			{
				"userId": "PCKjaUvI9caAgoRZTuQYvjRirCl1",
				"answerId": "e5136e20-3a30-4fec-a15f-727a1965c70b"
			},
			{
				"answerId": "28bd1b4b-c343-467f-ae4d-24893e095405",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"answerId": "e5136e20-3a30-4fec-a15f-727a1965c70b",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "0f566e56-c56c-4a49-9b68-9ff2a71a0149"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "eioozak-ojnab"
			},
			{
				"userId": "H2uBO669vaZ80jwDe7zzxmKbUV02",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "28bd1b4b-c343-467f-ae4d-24893e095405",
				"userId": "H2uBO669vaZ80jwDe7zzxmKbUV02"
			},
			{
				"userId": "H2uBO669vaZ80jwDe7zzxmKbUV02",
				"answerId": "e5136e20-3a30-4fec-a15f-727a1965c70b"
			},
			{
				"answerId": "f19edea4-72bf-4bc0-954f-e1599418be0b",
				"userId": "H2uBO669vaZ80jwDe7zzxmKbUV02"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "28bd1b4b-c343-467f-ae4d-24893e095405",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "e5136e20-3a30-4fec-a15f-727a1965c70b",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "0f566e56-c56c-4a49-9b68-9ff2a71a0149",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "f19edea4-72bf-4bc0-954f-e1599418be0b",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "eioozak-ojnab"
			},
			{
				"answerId": "28bd1b4b-c343-467f-ae4d-24893e095405",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2"
			},
			{
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2",
				"answerId": "28bd1b4b-c343-467f-ae4d-24893e095405"
			},
			{
				"answerId": "e5136e20-3a30-4fec-a15f-727a1965c70b",
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2"
			},
			{
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2",
				"answerId": "f19edea4-72bf-4bc0-954f-e1599418be0b"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"answerId": "28bd1b4b-c343-467f-ae4d-24893e095405",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"answerId": "e5136e20-3a30-4fec-a15f-727a1965c70b",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "f19edea4-72bf-4bc0-954f-e1599418be0b"
			}
		],
		"status": "closed",
		"codeBlock": "",
		"question": "Lists, you should know them well, for which of these lists should you prefer an ol over a ul?",
		"type": "checkbox"
	},
	{
		"category": "javascript",
		"question": "A code example for you to peek, which of the answers is the right one you seek?",
		"correctAnswers": [
			{
				"value": "A yellow button will be shown. The button will become grey when clicking and stays grey when clicking again.",
				"id": "2d6cc5e7-04f1-4866-9738-7580e1b45da8"
			}
		],
		"answers": [
			{
				"id": "eioozak-ojnab",
				"value": "A grey button will be shown. The button will become yellow when clicking and stays yellow when clicking again.",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "A yellow button will be shown. The button will become grey when clicking and stays grey when clicking again.",
				"autoFocus": false,
				"id": "2d6cc5e7-04f1-4866-9738-7580e1b45da8",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "A yellow button will be shown. The button will become grey when clicking and yellow when clicking again.",
				"autoFocus": false,
				"id": "85e5122b-421d-4d3e-ab08-d092fc2a6b70"
			},
			{
				"value": "A yellow button will be shown. The button will stay yellow when clicking and grey when clicking again.",
				"type": "radio",
				"autoFocus": false,
				"id": "36e29863-0f6b-4f0a-9bc8-dafec5395215",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "5d9e25aa-b132-4160-805f-b4cde1d9dfa7",
				"autoFocus": false,
				"value": "A grey button will be shown. The button will become yellow when clicking and grey when clicking again."
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio",
				"id": "3424dccb-0f92-454e-b69a-10c312779744",
				"value": "A yellow button will be shown. The button will remain yellow when clicking.",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"autoFocus": true,
				"id": "ae0d75ad-da3d-46a1-a447-7730c3659069",
				"value": "A grey button will be shown. The button will remain grey when clicking.",
				"type": "radio",
				"blockType": "text"
			}
		],
		"sentInByUser": {
			"id": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
			"displayName": "Jorg Nieberg"
		},
		"codeSandboxExample": "",
		"id": "08007620-9d13-4c24-a472-ab649326ef1e",
		"voted": [],
		"codeBlock": "<html>\n  <head>\n    <style>\n      .highlight {\n        background-color: yellow;\n      }\n    </style>\n    <script>\n      const highlightButton = () => {\n        document.querySelector(\".highlight\").classList.toggle(\"highlight\");\n      };\n    </script>\n    <title>Toggle class</title>\n  </head>\n  <body>\n    <button class=\"highlight\" onClick=\"javascript:highlightButton();\">\n      Click me!\n    </button>\n  </body>\n</html>\n",
		"type": "radio",
		"openingTime": 1668684269718,
		"pollNumber": 155,
		"status": "closed"
	},
	{
		"id": "a0b8284f-91c6-4ae0-ad94-e9d82597b42e",
		"pollNumber": 154,
		"codeBlock": "",
		"question": "In CSS, \"display: none\" makes elements hide, what facts about \"display: none\" can you provide?",
		"status": "new",
		"correctAnswers": [
			{
				"id": "bebeea57-53e5-49b4-a70b-75e2ee471543",
				"value": "The <script> tag uses display: none by default"
			},
			{
				"id": "eioozak-ojnab",
				"value": "It removes the element from the document flow"
			}
		],
		"answers": [
			{
				"value": "It removes the element from the document flow",
				"id": "eioozak-ojnab",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text",
				"id": "ab9bc8bf-bdaa-4f72-b5f3-ae2e192ed856",
				"value": "It’s possible to animate elements with display: none"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "07992b96-ffe6-46ec-8346-fa0b2b2077ce",
				"autoFocus": false,
				"value": "display: none is the same as opacity: 0",
				"blockType": "text"
			},
			{
				"value": "Elements with display: none are only visually absent; it can be detected by assistive technology",
				"id": "eb8b84f5-f7ce-4914-b0f0-183075291691",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false,
				"id": "bebeea57-53e5-49b4-a70b-75e2ee471543",
				"value": "The <script> tag uses display: none by default"
			},
			{
				"value": "display: none only works on semantic tags",
				"type": "radio",
				"placeholder": "Add option",
				"id": "074460ed-c4a6-4900-b9a9-c9f2bc9acc44",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"value": "Elements with display: none can’t be interacted with in JavaScript",
				"type": "radio",
				"id": "5fd6fbca-be31-4bdd-9ae0-c630e8124286",
				"placeholder": "Add option"
			},
			{
				"autoFocus": false,
				"value": "\"@media screen and (display: none)\" is a media query aimed to assist visually impaired users",
				"id": "830ef2e1-2565-4dbf-b886-6619b9441916",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"value": "display: none is only applied on the element this property is put on; children are still visible ",
				"id": "ccbbc99f-f004-48a4-bcfc-bcc7bfcdf0c1"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "display:none doesn't work on newer iOS devices/updates because Apple is trying to prevent hidden content on webpages",
				"id": "614d7477-8a38-4df8-9cfd-a688c637ed68",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"autoFocus": true,
				"value": "When you turn up your screen's brightness you might be able to see elements with display: none",
				"placeholder": "Add option",
				"id": "59466128-4418-44b9-b1a4-994e580fd696",
				"blockType": "text"
			}
		],
		"type": "checkbox",
		"sentInByUser": null,
		"category": "css",
		"voted": [],
		"codeSandboxExample": ""
	},
	{
		"sentInByUser": null,
		"answers": [
			{
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option",
				"value": "<label> and <input>",
				"id": "eioozak-ojnab"
			},
			{
				"autoFocus": false,
				"value": "<article> and <p>",
				"id": "117b562f-fcf4-48bf-af33-58c767e5cdb6",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "9b6cfbe6-68e4-4915-906d-5001431177cf",
				"type": "radio",
				"value": "<label> and <progress> "
			},
			{
				"type": "radio",
				"autoFocus": false,
				"value": "<meter> and <progress>",
				"id": "c48918c3-a192-4fab-8e8e-2594ed170517",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false,
				"id": "57460f8d-865e-46cf-b80f-6a73b6b312db",
				"value": "<header> and <footer>"
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "<hr> and <h1>",
				"type": "radio",
				"blockType": "text",
				"id": "355a936a-7070-4c30-b092-4340262b54c6"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "<video> and <track>",
				"blockType": "text",
				"id": "b0e57724-0060-44d9-b8a9-dc8b36ef902e"
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"id": "54f14652-8a7f-45d6-9dc6-4d5be5d37cd9",
				"placeholder": "Add option",
				"value": "<ul> and <ol>"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "<em> and <strong>",
				"autoFocus": false,
				"blockType": "text",
				"id": "a5025a3f-92ff-4317-bccf-88a8e5719156"
			},
			{
				"blockType": "text",
				"value": "<map> and <area>",
				"autoFocus": false,
				"id": "d7b30937-23c5-4896-befd-0ad294e1470d",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "<fieldset> and <legend>",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "23a3fdec-2fb0-4870-b72e-a9b6069991ce"
			},
			{
				"blockType": "text",
				"autoFocus": true,
				"type": "radio",
				"value": "<select> and <option>",
				"id": "da95918e-0151-40be-9b7b-8957956b1e47",
				"placeholder": "Add option"
			}
		],
		"pollNumber": 153,
		"correctAnswers": [
			{
				"value": "<select> and <option>",
				"id": "da95918e-0151-40be-9b7b-8957956b1e47"
			},
			{
				"value": "<fieldset> and <legend>",
				"id": "23a3fdec-2fb0-4870-b72e-a9b6069991ce"
			},
			{
				"id": "d7b30937-23c5-4896-befd-0ad294e1470d",
				"value": "<map> and <area>"
			},
			{
				"value": "<figure> and <figcaption>",
				"id": "b0e57724-0060-44d9-b8a9-dc8b36ef902e"
			},
			{
				"id": "9b6cfbe6-68e4-4915-906d-5001431177cf",
				"value": "<details> and <summary>"
			},
			{ "value": "<label> and <input>", "id": "eioozak-ojnab" }
		],
		"category": "html",
		"id": "32469bc7-dfe1-493f-bf3d-a7690396a291",
		"type": "checkbox",
		"codeSandboxExample": "",
		"voted": [],
		"question": "In HTML, some tags play nicer when used in conjunction, which tags listed below will then better function?",
		"codeBlock": "",
		"status": "new"
	},
	{
		"status": "new",
		"codeSandboxExample": "",
		"category": "javascript",
		"sentInByUser": null,
		"pollNumber": 152,
		"voted": [],
		"type": "radio",
		"codeBlock": "const item = \"Boomerang\"; \n\nitem[2] = \"l\"; ",
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "eioozak-ojnab",
				"type": "radio",
				"value": "It returns the 2nd character ",
				"autoFocus": false
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It modifies the 2nd character \n",
				"type": "radio",
				"autoFocus": false,
				"id": "abd1796e-31e6-4fc9-9387-d7e23e705379"
			},
			{
				"placeholder": "Add option",
				"id": "0ec62b3f-79af-4d01-9e1c-74fa6f8d777f",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"value": "It crashes because strings are immutable and cannot be modified"
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"id": "8dc2a38e-0e31-4a08-acc4-065b3e158452",
				"type": "radio",
				"value": "It throws a warning but modifies the 2nd character",
				"placeholder": "Add option"
			},
			{
				"value": "It has no effect and nothing happens ",
				"id": "3e49a74d-4286-4489-9a5c-9951d3e0b494",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"value": "It concatenates the strings just like you would with .join(\"\"), because of a JS quirk",
				"blockType": "text",
				"id": "1f21cfec-4c59-4fe7-8cfb-e052b538d6ea",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "It throws an error: ImmutableError: Primitive types are not to be mutated, see https://mozilla.docs.com/immutable-types for more info",
				"blockType": "text",
				"id": "ee8c3927-e179-4be3-ac68-300761a1efd4"
			},
			{
				"value": "It changes the string \"Boomerang\" to \"Blomerang\"",
				"id": "fb46ca1e-766a-45ba-b0ea-e0ca58a274b1",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": true,
				"blockType": "text"
			}
		],
		"question": "In JS, primitive types are strings, do you know what the result of this code brings? ",
		"id": "9b935b2b-af27-4fa4-8c37-6968febf07ac",
		"correctAnswers": [
			{
				"value": "It has no effect ",
				"id": "3e49a74d-4286-4489-9a5c-9951d3e0b494"
			}
		]
	},
	{
		"openingTime": 1669883210813,
		"id": "7f50a59d-d30c-4473-aea8-c4e2066008a6",
		"category": "javascript",
		"codeSandboxExample": "",
		"status": "closed",
		"type": "radio",
		"answers": [
			{
				"blockType": "text",
				"value": "buildSentence(a, b, c, d, e, f //… expand as needed) => { }",
				"id": "eioozak-ojnab",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "buildSentence([…strings]) => { }",
				"autoFocus": false,
				"id": "2b6efb3b-1662-4ebb-97ee-b53e616564ef"
			},
			{
				"type": "radio",
				"id": "2ef929bf-0969-417d-b56f-3f25f2ed8364",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"value": "buildSentence(...strings) => { }"
			},
			{
				"id": "4cd8448a-f7d7-4ab8-92be-e37e6d499b45",
				"type": "radio",
				"placeholder": "Add option",
				"value": "buildSentence(strings.reduce((prev, curr) => acc + curr)) => { }",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "22ec92f9-9094-4dfb-83b0-7d11630874cf",
				"value": "buildSentence(Object.entries(strings)) => { } "
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "7938aa38-d06f-4bd2-b2a4-462082fa2a2f",
				"placeholder": "Add option",
				"value": "buildSentence(strings!) => { }",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"id": "3545b06b-6011-40b2-919e-68e22f52e185",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": true,
				"value": "buildSentence([...a].map(a => a.join(\"\")) => { }"
			}
		],
		"codeBlock": "",
		"correctAnswers": [
			{
				"value": "buildSentence()",
				"id": "2ef929bf-0969-417d-b56f-3f25f2ed8364"
			}
		],
		"voted": [
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "2ef929bf-0969-417d-b56f-3f25f2ed8364"
			},
			{
				"answerId": "2ef929bf-0969-417d-b56f-3f25f2ed8364",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "22ec92f9-9094-4dfb-83b0-7d11630874cf"
			},
			{
				"answerId": "2ef929bf-0969-417d-b56f-3f25f2ed8364",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2",
				"answerId": "2ef929bf-0969-417d-b56f-3f25f2ed8364"
			},
			{
				"answerId": "2ef929bf-0969-417d-b56f-3f25f2ed8364",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "2ef929bf-0969-417d-b56f-3f25f2ed8364"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "2ef929bf-0969-417d-b56f-3f25f2ed8364"
			},
			{
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62",
				"answerId": "2ef929bf-0969-417d-b56f-3f25f2ed8364"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "2ef929bf-0969-417d-b56f-3f25f2ed8364"
			},
			{
				"answerId": "2ef929bf-0969-417d-b56f-3f25f2ed8364",
				"userId": "kfrkjsbashYfl1sD2PgVGXcpND63"
			},
			{
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1",
				"answerId": "2ef929bf-0969-417d-b56f-3f25f2ed8364"
			},
			{
				"userId": "PCKjaUvI9caAgoRZTuQYvjRirCl1",
				"answerId": "2ef929bf-0969-417d-b56f-3f25f2ed8364"
			},
			{
				"answerId": "2ef929bf-0969-417d-b56f-3f25f2ed8364",
				"userId": "y0Vb464iCdeVzfBJBZzCjCIZIi72"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "2ef929bf-0969-417d-b56f-3f25f2ed8364"
			}
		],
		"question": "In JS, functions accept parameters in any position, how can you accept unlimited parameters in your function definition?",
		"sentInByUser": null,
		"pollNumber": 151
	},
	{
		"status": "new",
		"pollNumber": 150,
		"answers": [
			{
				"blockType": "text",
				"type": "radio",
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "float"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"id": "b04be942-247e-4a59-b9e2-8c826140fb7d",
				"placeholder": "Add option",
				"type": "radio",
				"value": "text-align"
			},
			{
				"type": "radio",
				"id": "718bbcb3-d995-4bcb-81c2-94ec873340f1",
				"blockType": "text",
				"value": "p:last-child",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"id": "5aaa9a43-fc63-4b6f-ac38-ee2603566029",
				"placeholder": "Add option",
				"value": "p:last-word"
			},
			{
				"id": "6a4f7a2b-3c77-4ff6-9b6f-49630e3242be",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"value": "p.slice(-1) ",
				"placeholder": "Add option"
			},
			{
				"id": "1b1e3bb5-b7cc-4661-812c-6ccf1504bce9",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"value": "text-align-last",
				"blockType": "text"
			},
			{
				"value": "nth-last-child",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "27da49b4-a1af-40f1-90ac-bbd9462ae0fa",
				"autoFocus": true
			}
		],
		"category": "css",
		"codeSandboxExample": "",
		"question": "In CSS, see the following <p> tag, if controlling the alignment of the last word (\"fluently\") horizontally is what you need, what would you need to succeed?",
		"voted": [],
		"id": "f3a57bc6-8aa1-4044-aaa2-b9d69db42cf3",
		"codeBlock": "<p>Gobbledygook is my favorite language and I speak it fluently</p>",
		"sentInByUser": null,
		"correctAnswers": [
			{
				"value": "text-align-last",
				"id": "1b1e3bb5-b7cc-4661-812c-6ccf1504bce9"
			}
		],
		"type": "radio",
		"openingTime": 1667564899859
	},
	{
		"codeBlock": "",
		"pollNumber": 149,
		"category": "css",
		"openingTime": 1667552469896,
		"id": "ff0e0c6c-dd46-4374-a613-2272f5e6abc7",
		"sentInByUser": null,
		"question": "In CSS, see this example you must have seen, what pseudo class can be used to produce the result on the screen?",
		"type": "radio",
		"status": "closed",
		"correctAnswers": [
			{
				"id": "9c6e874f-94f1-404c-8e6a-a7a63027a30c",
				"value": ":nth-child(-n + 4)"
			}
		],
		"codeSandboxExample": "https://codesandbox.io/embed/festive-pascal-gb0ekj?fontsize=14&hidenavigation=1&theme=dark&view=preview",
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"value": ":first-child, :second-child, :third-child, :fourth-child",
				"type": "radio",
				"id": "eioozak-ojnab"
			},
			{
				"type": "radio",
				"value": "This can only be done in JavaScript",
				"blockType": "text",
				"id": "39c92db8-ab1d-4757-9db4-2265670a3c01",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"autoFocus": false,
				"value": ":nth-child(-n + 4)",
				"type": "radio",
				"blockType": "text",
				"id": "9c6e874f-94f1-404c-8e6a-a7a63027a30c",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"value": ":nth-child(n + 4)",
				"type": "radio",
				"id": "f941d72c-6d8e-4a3e-bdaa-e90e8097c702"
			},
			{
				"value": "Will be possible with CSS4 pseudo module",
				"autoFocus": false,
				"blockType": "text",
				"id": "83c0598b-9bc1-4722-819f-d71f9943e086",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "57942f29-c685-4fff-929a-4c42ec53994d",
				"autoFocus": true,
				"placeholder": "Add option",
				"value": ":has:(:content:1), :has:(:content:2), :has:(:content:3), :has:(:content:4)"
			}
		],
		"voted": []
	},
	{
		"openingTime": 1668069037703,
		"sentInByUser": null,
		"id": "6d2c4578-2610-4f11-b046-b3b3212abbae",
		"codeSandboxExample": "",
		"answers": [
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "eioozak-ojnab",
				"value": "<input multiline />",
				"type": "radio",
				"blockType": "text"
			},
			{
				"value": "<textarea multiline /> ",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"id": "02cf708a-8a34-4f35-82ca-de7025a896d1"
			},
			{
				"blockType": "text",
				"value": "<textarea>",
				"id": "886f0669-a0f0-4693-a73c-0150304e91fe",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"value": "<input type=\"text\" />",
				"id": "6c237d7a-e751-4b16-8bd8-6f9a1480402c"
			},
			{
				"value": "<input type=\"multiline\">",
				"id": "b20eb865-9639-4092-99fe-83a42db0d6a3",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"id": "7ab765c4-71fa-4ef5-acde-49273e00068b",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"value": "<input type=\"text name=\"line1\" />\n<input type=\"text name=\"line2\" />\n<input type=\"text name=\"line3\" />\n<input type=\"text name=\"line4\" />\n// expand as needed ",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "ec8e479b-3026-46a7-89cf-accca2e82a9c",
				"blockType": "text",
				"value": "<input type=“text”>\n    <p>line 1</p>\n    <p>line 2</p>\n    <p>line 3</p>\n</input>",
				"autoFocus": false
			},
			{
				"value": "<span>",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio",
				"id": "0c62c77b-9da5-4a3b-bb6e-07e6cfbafbfa"
			},
			{
				"id": "50dcebdc-e4f6-4f0c-8648-fb2eb2d1debf",
				"autoFocus": false,
				"value": "By using CSS grid on input fields so you can control the lines of text",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"autoFocus": true,
				"value": "npm install wyswyg-editor",
				"type": "radio",
				"id": "0b7499af-4abf-4273-aa91-e79ed3a834cf",
				"blockType": "text"
			}
		],
		"voted": [],
		"question": "In HTML, when you suggest a poll you'll get crediting, what element can be used to allow multiline text editing? ",
		"correctAnswers": [
			{
				"id": "886f0669-a0f0-4693-a73c-0150304e91fe",
				"value": "<textarea>"
			}
		],
		"pollNumber": 148,
		"status": "closed",
		"type": "radio",
		"codeBlock": "",
		"category": "html"
	},
	{
		"correctAnswers": [
			{
				"value": "&lt; and &gt;",
				"id": "d4b8dd30-c4a6-4384-af03-f58d7d1730e8"
			}
		],
		"openingTime": 1667896431453,
		"pollNumber": 147,
		"status": "closed",
		"voted": [],
		"codeBlock": "",
		"id": "cd9d3ed1-65cb-421b-9a0d-47b51f7bcba4",
		"sentInByUser": {
			"displayName": "Dominic Bisschop",
			"id": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
		},
		"category": "html",
		"question": "In HTML, character entities is a subject you may know or not, if you want to use \"<\" and \">\", choose an answer below and remember one chance is all you got!\n",
		"type": "radio",
		"codeSandboxExample": "",
		"answers": [
			{
				"value": "#leftarrow and #rightarrow",
				"placeholder": "Add option",
				"type": "radio",
				"id": "eioozak-ojnab",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"value": "@lt= and @rt=",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "5077ca76-c9e5-4ce1-ad0f-ff7c31aa0903"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text",
				"id": "43da0da6-49db-4a00-a40c-d3d21af603a3",
				"value": "@lt; and @gt;"
			},
			{
				"id": "5795501e-5a49-4cbf-9776-d949a5ce8667",
				"type": "radio",
				"blockType": "text",
				"value": "&lefttag; and &righttag;",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "&lt; and &rt;",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"id": "c9ce0c68-cdc1-44ac-b2ab-574ec3f8400f"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"id": "d4b8dd30-c4a6-4384-af03-f58d7d1730e8",
				"placeholder": "Add option",
				"value": "&lt; and &gt;"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "c1906299-558a-43f0-9c74-e278c6c4ee80",
				"value": "#lefttag; and #greatertag;",
				"placeholder": "Add option",
				"autoFocus": true
			}
		]
	},
	{
		"type": "radio",
		"sentInByUser": null,
		"category": "html",
		"correctAnswers": [
			{ "value": "<del>", "id": "dec3b3d5-3cdc-44d5-ba75-9486610263d9" }
		],
		"codeBlock": "",
		"id": "0cf4f9ef-948f-45e9-b91c-cc6f744b17c0",
		"status": "closed",
		"question": "For this poll your knowledge is valued and needed, what tag represents that text is deleted?",
		"codeSandboxExample": "",
		"pollNumber": 146,
		"openingTime": 1671612049209,
		"answers": [
			{
				"value": "<remove>",
				"type": "radio",
				"blockType": "text",
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"autoFocus": false,
				"id": "dec3b3d5-3cdc-44d5-ba75-9486610263d9",
				"value": "<del>",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "There is no tag ",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"id": "aef19c79-eed7-42c0-8bdd-63f49654ccf8"
			},
			{
				"placeholder": "Add option",
				"id": "04bb7133-088f-4433-8473-ed90b6c20fe1",
				"type": "radio",
				"value": "<p deleted>",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"id": "32fae61e-d63a-4314-8647-6598317229f4",
				"value": "<p style={ display: \"none\" }>",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "f68c162e-616b-48bf-b2a0-04793ee85ec4",
				"blockType": "text",
				"type": "radio",
				"value": "<destroy>",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "8e5d6c63-b614-4a1f-806c-75118d295b57",
				"autoFocus": false,
				"value": "<p style={ font-size: 0 }>",
				"placeholder": "Add option"
			},
			{
				"value": "<kbd>",
				"blockType": "text",
				"id": "dd838486-7350-4233-ba64-14275db22338",
				"placeholder": "Add option",
				"autoFocus": true,
				"type": "radio"
			}
		],
		"voted": [
			{
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1",
				"answerId": "dec3b3d5-3cdc-44d5-ba75-9486610263d9"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "dec3b3d5-3cdc-44d5-ba75-9486610263d9"
			},
			{
				"answerId": "dec3b3d5-3cdc-44d5-ba75-9486610263d9",
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1"
			},
			{
				"answerId": "aef19c79-eed7-42c0-8bdd-63f49654ccf8",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62",
				"answerId": "dec3b3d5-3cdc-44d5-ba75-9486610263d9"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "dec3b3d5-3cdc-44d5-ba75-9486610263d9"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "dec3b3d5-3cdc-44d5-ba75-9486610263d9"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "aef19c79-eed7-42c0-8bdd-63f49654ccf8"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "dec3b3d5-3cdc-44d5-ba75-9486610263d9"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "dec3b3d5-3cdc-44d5-ba75-9486610263d9"
			},
			{
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2",
				"answerId": "dec3b3d5-3cdc-44d5-ba75-9486610263d9"
			},
			{
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32",
				"answerId": "dec3b3d5-3cdc-44d5-ba75-9486610263d9"
			},
			{
				"userId": "8d5n92IZsOMbZtnfoEgMhjFF8C63",
				"answerId": "dec3b3d5-3cdc-44d5-ba75-9486610263d9"
			}
		]
	},
	{
		"codeSandboxExample": "",
		"status": "new",
		"pollNumber": 145,
		"voted": [],
		"id": "c89a355a-5db4-4a31-a2ca-93ffcf6d2bc7",
		"question": "In JS, cross-origin communication is possible, to do this, what method from the in the answers below is plausible?",
		"type": "radio",
		"category": "javascript",
		"sentInByUser": null,
		"codeBlock": "",
		"answers": [
			{
				"blockType": "text",
				"id": "eioozak-ojnab",
				"value": "With Redux ",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"autoFocus": false,
				"value": "With React prop drilling",
				"id": "4314293f-dfc3-4eff-82bb-2db795d406b6",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"value": "By informing your users to download a Chrome CORS plugin and enable it",
				"autoFocus": false,
				"id": "5c5d44a6-f30d-448c-91d9-4d3f8ddee0eb",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false,
				"value": "window.postMessage()",
				"id": "92c36739-2fee-4f7b-a48a-e3e8c2a4376d"
			},
			{
				"placeholder": "Add option",
				"value": "Believe it or not, but this is where jQuery is actually useful with the $.CORS() function",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"id": "f9e11740-dc9e-4a55-a82d-53b9b79de92d"
			},
			{
				"value": "addEventListener(\"onCrossOriginCommunication\")",
				"id": "18d0df15-0126-4bf8-beea-181493d5de92",
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "By using the <sandbox> html tag",
				"blockType": "text",
				"id": "218c9cdc-3cbe-4aee-b5ce-30b0309ed84b",
				"autoFocus": true
			}
		],
		"correctAnswers": [
			{
				"value": "window.postMessage()",
				"id": "92c36739-2fee-4f7b-a48a-e3e8c2a4376d"
			}
		]
	},
	{
		"question": "In JS, today this poll allows you to have another shot, what is a way to test if numbers are odd?",
		"pollNumber": 144,
		"codeBlock": "",
		"type": "radio",
		"answers": [
			{
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "if (number === 1 || number === 3 || number === 5 || number === 7 || number === 9)\n// expand according to the numbers needed",
				"type": "radio",
				"autoFocus": false
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"id": "f8081bd2-ef2f-4259-96a5-361fe3a4595a",
				"value": "Math.odd(number)"
			},
			{
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "Number.isOdd(number)",
				"id": "ee1b280b-a9d1-478c-824e-2cf98786151e"
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "number % 2 === 1",
				"type": "radio",
				"id": "0c169b23-47c5-498c-bf65-31823d2e2405",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"value": "number == true : false",
				"placeholder": "Add option",
				"id": "e6a67e30-d86e-447b-b1fe-c57765bfb7b3",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "code",
				"id": "6d762d97-8333-48d8-acd2-95cd276e05fb",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "if (true) return 1\nelse return 0",
				"type": "radio"
			},
			{
				"id": "27750449-ce8c-4561-9244-5a09ce4a983d",
				"placeholder": "Add option",
				"value": "switch(numbers) {\n  case: 1 \n  return false;\n  case: 3 \n  return false;\n  case: 5 \n  return false;\n  case: 7 \n  return false;\n  case: 9 \n  return false;\n  case: 11 \n  return false;\n  case: 13 \n  return false;\n  case: 15 \n  return false;\n  case: 17 \n  return false;\n  default: \n  return true;\n}",
				"type": "radio",
				"blockType": "code",
				"autoFocus": true
			}
		],
		"status": "new",
		"sentInByUser": null,
		"correctAnswers": [
			{
				"id": "0c169b23-47c5-498c-bf65-31823d2e2405",
				"value": "number % 2 === 0"
			}
		],
		"codeSandboxExample": "",
		"voted": [],
		"id": "b2eaab7b-d3e6-4326-9cc8-94546e96b696",
		"category": "javascript"
	},
	{
		"pollNumber": 143,
		"answers": [
			{
				"value": "layout",
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "responsive",
				"type": "radio",
				"id": "4a42c461-d695-440a-9742-f2b801bd955e"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "src",
				"id": "ac1c8d57-5180-4a1e-9152-68974c066372",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "c0af992f-6609-4efd-a3cb-fe8ff2aa1c12",
				"value": "source",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "A JS library is at least required for this",
				"id": "17f5fa4a-3d6d-4f70-80b1-dc141a62c246",
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"value": "resolution",
				"id": "5c81428e-fd5e-40ef-9c4a-eb45fee4f8b1",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "7b7d103b-adde-4eea-b189-6611cd382ecb",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": true,
				"type": "radio",
				"value": "srcset"
			}
		],
		"voted": [],
		"type": "radio",
		"codeBlock": "",
		"id": "b4b08467-e8b9-49c2-8952-cd243bd5dcb8",
		"correctAnswers": [
			{ "value": "srcset", "id": "7b7d103b-adde-4eea-b189-6611cd382ecb" }
		],
		"sentInByUser": null,
		"status": "new",
		"question": "In HTML, we browse around with various screens and devices, what attribute can be used to deliver images in different sizes?",
		"category": "html"
	},
	{
		"question": "In JS, this question might be difficult, when clicking on these buttons, what is needed to have \"Button 0\" and \"Button 1\" in your console as result?",
		"status": "closed",
		"correctAnswers": [
			{
				"id": "91a0a775-5bfa-419a-9ba3-81e4b92cf425",
				"value": "By using let instead of var "
			}
		],
		"codeBlock": "for (var i = 0; i < 2; i++) {\n  const button = document.createElement(\"button\");\n  button.innerText = `Button ${i}`;\n  button.onclick = function () {\n    console.log(`Button ${i}`);\n  };\n  document.body.appendChild(button);\n}",
		"sentInByUser": null,
		"codeSandboxExample": "",
		"category": "javascript",
		"openingTime": 1667984720466,
		"answers": [
			{
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"autoFocus": false,
				"blockType": "text",
				"value": "By clicking on both buttons",
				"type": "radio"
			},
			{
				"id": "b838b50f-219d-4878-b991-07c1525255e0",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "By duplicating the code ",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "1b7206c0-edda-46ee-998c-8d03f2f322ea",
				"blockType": "text",
				"value": "By replacing \"i < 2\" with \"i =< 1\"",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"id": "a072e838-573f-48fb-80d0-fedc1105089d",
				"value": "By moving \"document.body.appendChild(button);\" out of the for loop "
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"id": "eb31eed6-aa97-4a55-a814-0834cae127fd",
				"type": "radio",
				"value": "By using const instead of var ",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"value": "By using let instead of var ",
				"id": "91a0a775-5bfa-419a-9ba3-81e4b92cf425",
				"placeholder": "Add option"
			},
			{
				"autoFocus": false,
				"value": "By using a do-while loop",
				"id": "41433697-fc31-437e-9f78-5e40da87c2fe",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "By replacing \"console.log(`Button ${i}`);\" with \"console.log(`Button ${i - 1}`);\"",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": true,
				"type": "radio",
				"id": "510fc20b-dbdc-4b36-b944-c845851b6de3"
			}
		],
		"pollNumber": 142,
		"voted": [],
		"id": "d0d27d61-a312-41be-86e9-d4066eb50337",
		"type": "radio"
	},
	{
		"codeSandboxExample": "",
		"sentInByUser": null,
		"answers": [
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": ".sort() and .reverse()",
				"id": "eioozak-ojnab",
				"autoFocus": false
			},
			{
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Just .sort() ",
				"id": "f4059505-dcc8-439c-8208-53b6d284cd74"
			},
			{
				"value": "Flexbox with flex-wrap: wrap-reverse",
				"blockType": "text",
				"autoFocus": false,
				"id": "1de65d5c-3546-4f5b-a238-97ea59011cfd",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"value": ".sort() and Intl.Collator",
				"blockType": "text",
				"id": "ca89ad53-8685-4c6e-87a9-101bafed78f7",
				"placeholder": "Add option"
			},
			{
				"value": ".sort() and lodash ",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"id": "61201849-816f-4f21-b537-a57ab86bf03d"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": ".sort() and .reduceRight()",
				"autoFocus": false,
				"id": "7aeeca76-ebb8-4572-882b-646a9a0cb48c",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "38428390-8e85-46d4-84bd-36e084975497",
				"autoFocus": false,
				"value": "This can be done with CSS logical properties",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "14363abc-aadd-4e97-b248-61f61ca6a85a",
				"blockType": "text",
				"autoFocus": true,
				"placeholder": "Add option",
				"type": "radio",
				"value": "By replacing every foreign character with something that looks like the character the most will do, e.g \"Ø = O\". "
			}
		],
		"correctAnswers": [
			{
				"value": ".sort() and Intl.Collator",
				"id": "ca89ad53-8685-4c6e-87a9-101bafed78f7"
			}
		],
		"voted": [],
		"category": "javascript",
		"openingTime": 1668156108562,
		"question": "In JS, when sorting the following string items by locale alphabetically, what techniques can be used collectively?",
		"id": "feee7962-517d-4ac5-8dd9-0f4f234abef2",
		"codeBlock": "const countries = [\"Østrig\", \"Polen\", \"Ungarn\", \"Belgie\", \"Spanien\"];",
		"type": "radio",
		"status": "closed",
		"pollNumber": 141
	},
	{
		"category": "javascript",
		"type": "checkbox",
		"correctAnswers": [
			{
				"value": ".sort((a , b) => b - a)",
				"id": "ca428c69-7479-46e9-8737-a88067ca9424"
			},
			{
				"value": ".reverse()",
				"id": "5f3b5420-133a-46e9-a3ec-45f62005a6ff"
			}
		],
		"pollNumber": 140,
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": ".orderBy(\"desc\")",
				"type": "radio",
				"id": "eioozak-ojnab",
				"autoFocus": false
			},
			{
				"autoFocus": false,
				"value": ".sort((a , b) => a + b)",
				"id": "3a86c851-38c4-42dc-b4bd-859653becf00",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "ca428c69-7479-46e9-8737-a88067ca9424",
				"value": ".sort((a , b) => b - a)",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"value": ".sort((a , b) => b - a).reverse()",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "674444be-1543-4f7f-aaeb-cfe37257fc79",
				"type": "radio",
				"autoFocus": false
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "5f3b5420-133a-46e9-a3ec-45f62005a6ff",
				"value": ".reverse()",
				"blockType": "text",
				"type": "radio"
			},
			{
				"autoFocus": true,
				"placeholder": "Add option",
				"id": "28858406-f111-4678-8d6e-e2dd3e88c984",
				"blockType": "text",
				"type": "radio",
				"value": ".sort(() => .5 - Math.random() );"
			}
		],
		"codeBlock": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",
		"codeSandboxExample": "",
		"id": "05da4e1f-36f2-4dd1-aa72-5e9373128e08",
		"question": "In JS, See the following code on the screen, if we want numbers to be in descending order, what would your answer have been?",
		"status": "new",
		"voted": [],
		"sentInByUser": null
	},
	{
		"sentInByUser": null,
		"codeBlock": "",
		"correctAnswers": [
			{
				"id": "ed96c2a9-fde7-47f2-8674-f351eeaf79ae",
				"value": "It returns an array"
			}
		],
		"voted": [],
		"id": "e6b52ce0-5c0e-4732-ad4e-dc0334984a43",
		"type": "radio",
		"status": "new",
		"codeSandboxExample": "",
		"question": "In JS, these polls try to help us learn, now tell me what data type filter() will return!",
		"pollNumber": 139,
		"category": "javascript",
		"answers": [
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "An object with key value pairs",
				"id": "eioozak-ojnab",
				"autoFocus": false
			},
			{
				"id": "011b7502-1d91-4625-bff5-d121660ad9c4",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "It depends on what data type you use .filter on: object.filter returns an object, array.filter returns an array",
				"type": "radio"
			},
			{
				"value": "It returns a boolean",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"id": "d1e3e494-3c5d-49c4-890e-e94c52d7ed94"
			},
			{
				"id": "ed96c2a9-fde7-47f2-8674-f351eeaf79ae",
				"placeholder": "Add option",
				"type": "radio",
				"value": "It returns an array",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "It changes the values where the filter function is called on, but the output is undefined",
				"id": "1c0745a4-6099-413e-a73c-1b7fde3cb234",
				"autoFocus": false
			},
			{
				"id": "82a1d232-a594-4c00-b4b0-1585e1c79850",
				"value": "It depends on when you use const or let: with let you’ll get undefined, with const you’ll get an object value",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false
			}
		]
	},
	{
		"codeBlock": "",
		"status": "new",
		"voted": [],
		"type": "radio",
		"category": "general-frontend",
		"id": "84d095e8-bf61-496a-93a0-b5c71179aba1",
		"codeSandboxExample": "",
		"correctAnswers": [
			{
				"id": "9733d5fa-586f-48d9-a419-b5c1e39b7c0a",
				"value": "By not rendering the particular content client-side"
			}
		],
		"question": "In Frontend, content-theft is real, what approach can be used to prevent visitors to steal?",
		"pollNumber": 138,
		"answers": [
			{
				"blockType": "text",
				"id": "eioozak-ojnab",
				"value": "By making content unreadable by using CSS blurs for instance ",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"id": "d91b1196-a004-48a2-8be6-ba6920acf516",
				"value": "By disallowing text selection, right clicking on the page and disabling all keyboard shortcuts",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text"
			},
			{
				"value": "By not rendering the particular content client-side",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"id": "9733d5fa-586f-48d9-a419-b5c1e39b7c0a",
				"blockType": "text"
			},
			{
				"type": "radio",
				"value": "By blocking devtools for all users",
				"id": "c6068cca-6926-43b2-ba28-0a958329f8fc",
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "By using meta tag <meta name=\"copyright\" content=\"The Owner\" />",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"id": "d2a691be-6390-494a-a338-be260b90622c",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "71deefb9-652a-402e-8c54-32e68159c716",
				"autoFocus": false,
				"value": "By trying to conceal your website from visitors as much as possible (e.g make sure search engines won't find you)"
			},
			{
				"value": "By rendering content in a unusual and unreadable foreign language for your users",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "4234de16-c61c-449b-88b3-7611265d7eef"
			},
			{
				"blockType": "text",
				"value": "By using a copyright sign next to your content",
				"type": "radio",
				"autoFocus": false,
				"id": "4f32c842-3d70-4356-977b-9b8bf7568c41",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "By making your website not a11y proof",
				"id": "6e1c1ed6-7c46-4881-b7ac-a6eb741fc371",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"type": "radio",
				"autoFocus": true,
				"value": "By communicating to the user on your website/app that nobody is allowed to steal the content",
				"blockType": "text",
				"id": "596bb4f0-aa88-4a23-81da-5826d2af151c",
				"placeholder": "Add option"
			}
		]
	},
	{
		"voted": [],
		"pollNumber": 137,
		"codeBlock": "Correct search result array: [\"tense\", \"Rock\", \"correct\", \"sentence\", \"Block\"]",
		"type": "radio",
		"answers": [
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "/\\b\\w+(?=[.?!]\\s)/gm",
				"id": "08b334f0-cc3e-4fba-ab86-fb1f37ae1e33",
				"blockType": "code",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "/\\w*?\\b\\s/gm",
				"blockType": "code",
				"id": "6243b56d-619e-440c-a95a-e9ba7343b8b6"
			},
			{
				"autoFocus": false,
				"id": "6d995471-5ad0-4648-855b-83a15c400aba",
				"type": "radio",
				"placeholder": "Add option",
				"value": "/\\s[a-z]{*}.?!/gmi",
				"blockType": "code"
			},
			{
				"blockType": "code",
				"autoFocus": false,
				"id": "60b0f983-9fc1-4c7d-a783-df0da816c052",
				"value": "/\\b\\w*\\b\\.\\?!/gm",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "/^\\w*?$/gm",
				"type": "radio",
				"blockType": "code",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "47a07962-f2a7-468e-a18e-c7330b1f30ba"
			},
			{
				"value": "/\\s*\\w*?[.?!]/gm",
				"id": "55e8aaea-b547-4dc5-a3bf-d0c8b020fe4e",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "code",
				"autoFocus": false
			},
			{
				"value": "/(?<=\\s)\\w*?(?=.$)/gm",
				"type": "radio",
				"blockType": "code",
				"id": "c4534364-77f0-4531-9e68-8d1fd6ec14fc",
				"placeholder": "Add option",
				"autoFocus": true
			}
		],
		"id": "26fe4ae5-c9c1-412f-9aea-7f6177d7d1a6",
		"correctAnswers": [
			{
				"value": "/\\b\\w+(?=[.?!]\\s)/gm",
				"id": "08b334f0-cc3e-4fba-ab86-fb1f37ae1e33"
			}
		],
		"sentInByUser": {
			"id": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
			"displayName": "Jorg Nieberg"
		},
		"status": "needs-revision",
		"question": "With regular expressions, many \"if\" conditions can be past tense.\nBut regexp can sometimes be a tough Rock!\nWhich of the following is correct? The right one to select the last word from any sentence.\nAnd use the words in this example text Block.",
		"category": "javascript"
	},
	{
		"status": "closed",
		"codeBlock": "",
		"category": "html",
		"id": "ea9928cc-2fc9-4445-ba6a-6582d6dfc5bb",
		"codeSandboxExample": "",
		"voted": [],
		"question": "In HTML, the built-in functionalities rocks, now which tags can be used to have a collapse/expand out of the box?",
		"openingTime": 1667464621395,
		"answers": [
			{
				"autoFocus": false,
				"value": "<collapsible> and <expand>",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "eioozak-ojnab",
				"type": "radio"
			},
			{
				"id": "975bdb94-b21d-4819-b342-0dd8ecfe9787",
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "<ul> and <li> with special added attributes"
			},
			{
				"blockType": "text",
				"id": "7235ddcc-b180-46ad-8016-610deea5b1f9",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Anything wrapped in <dialog>",
				"autoFocus": false
			},
			{
				"type": "radio",
				"value": "There is no tag that does this, it can be done with custom JS only",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "718d0b18-a215-4151-a226-6385aa4107eb",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "9f5860a9-87e9-4e19-9db0-c105902fb3fd",
				"placeholder": "Add option",
				"value": "<section> and <article>",
				"autoFocus": false
			},
			{
				"id": "55c8deeb-12f7-47cb-ab73-9a95d1288ac8",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio",
				"value": "<details> and <summary>"
			},
			{
				"type": "radio",
				"id": "cf69fa8c-20f2-4be2-b503-d5a6671cd93f",
				"autoFocus": true,
				"value": "$('div').click(function(){\n    $(this).find('.hider').toggle();\n});",
				"placeholder": "Add option",
				"blockType": "code"
			}
		],
		"type": "radio",
		"pollNumber": 136,
		"correctAnswers": [
			{
				"id": "55c8deeb-12f7-47cb-ab73-9a95d1288ac8",
				"value": "<details> and <summary>"
			}
		]
	},
	{
		"category": "general-frontend",
		"question": "In Frontend, navigating \n\nwhen navigating pages the flash of a blank page can be circumvented, what technique can you apply to have this prevented?",
		"codeBlock": "",
		"correctAnswers": [
			{
				"value": "By using a client-side routing system ",
				"id": "14177b6f-c1ab-46c7-8c99-07a580e58e35"
			}
		],
		"id": "f4302db8-03f4-4e31-909c-b2c5b839dfeb",
		"status": "needs-revision",
		"voted": [],
		"codeSandboxExample": "",
		"type": "checkbox",
		"pollNumber": 135,
		"answers": [
			{
				"id": "eioozak-ojnab",
				"value": "By using iframes",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "By using Redux, combined with react-query in your React app to apply client-side technologies to your app",
				"id": "960e5302-73a0-4cad-8625-a9f0cba91708",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false
			},
			{
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"id": "14177b6f-c1ab-46c7-8c99-07a580e58e35",
				"placeholder": "Add option",
				"value": "By using a client-side routing system "
			},
			{
				"placeholder": "Add option",
				"id": "66619f52-bfbc-4a08-aa98-55566cc0bb95",
				"autoFocus": false,
				"value": "By applying microfrontends ",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "By not using other routes in your app ",
				"blockType": "text",
				"autoFocus": false,
				"id": "ebbf26bd-54b1-469a-942e-ce402aec9af5"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "By hooking in on the \"onNavigate\" DOM event",
				"type": "radio",
				"id": "088834eb-a73a-4a94-a054-956853ec5d12",
				"autoFocus": false
			}
		]
	},
	{
		"openingTime": 1666770040702,
		"question": "See the following code on your screen, when the condition \"rupees\" evaluates to 0, what output is to be seen? ",
		"codeBlock": "export default function App() {\n  const rupees = 0;\n\n  return <div>{rupees && <h1>Rupees: {rupees}</h1>}</div>;\n}",
		"status": "closed",
		"correctAnswers": [
			{
				"value": "It renders \"0\" ",
				"id": "54a2e96e-01a0-4a06-94c7-47560083f923"
			}
		],
		"voted": [],
		"type": "radio",
		"answers": [
			{
				"autoFocus": false,
				"id": "eioozak-ojnab",
				"value": "It won't render anything, the <h1> will not render since 0 is a falsy value ",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "ed6325e6-2cd3-4c06-8b39-2f7ed0c47a88",
				"type": "radio",
				"value": "It will render \"<h1>Rupees: 0</h1>\"",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "It will render \"<h1>Rupees: </h1>\"",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "4a698fea-014e-478c-a2ad-1b6b9c6ba887"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It renders \"0\" ",
				"type": "radio",
				"id": "54a2e96e-01a0-4a06-94c7-47560083f923",
				"autoFocus": false
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"value": "It crashes the app because in React you should atleast render something",
				"type": "radio",
				"id": "eea89307-7855-4619-8fed-9d36199e9127"
			},
			{
				"type": "radio",
				"value": "It renders \"undefined\" ",
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option",
				"id": "6fee284c-d7a6-47d2-87ed-9ea448f080a7"
			},
			{
				"autoFocus": true,
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "It will render \"<h1>Rupees: null</h1>\"",
				"id": "2afa4680-1940-4d7c-bab9-10dbae6da72b"
			}
		],
		"id": "0196f1e5-7c70-4ff0-abe8-1961cfe4cdbc",
		"pollNumber": 134,
		"category": "react"
	},
	{
		"codeBlock": "",
		"correctAnswers": [
			{
				"id": "01db12f6-5071-4cee-b0ee-3c004ce68160",
				"value": "repeating-conic-gradient"
			}
		],
		"type": "radio",
		"category": "css",
		"question": "In CSS, a lot of effects you can create, with what piece of code a \"checkersboard\" made?",
		"answers": [
			{
				"value": "This can only be done in JS",
				"autoFocus": false,
				"type": "radio",
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "01db12f6-5071-4cee-b0ee-3c004ce68160",
				"autoFocus": false,
				"type": "radio",
				"value": "background: repeating-conic-gradient(#808080 0% 25%, transparent 0% 50%)  50% / 20px 20px"
			},
			{
				"id": "7f1eca93-1cef-4b9f-be02-290602258e9b",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"value": "With SASS, you can import popular background patterns like a checkersboard: @use \"patterns/checkersboard\""
			},
			{
				"value": ".checkersboard {\n  margin: 4px;\n  height: 32px;\n  box-sizing: border-box;\n  border: 2px solid lightgray;\n  border-radius: 4px;\n}",
				"type": "radio",
				"blockType": "text",
				"id": "afea1ed0-1995-433c-94d4-0addf438bd0b",
				"autoFocus": false,
				"placeholder": "Add option"
			}
		],
		"voted": [],
		"codeSandboxExample": "",
		"pollNumber": 133,
		"status": "needs-revision",
		"id": "65917bc6-c9d6-4074-8e95-8e63a9d3b075"
	},
	{
		"question": "In JS, hard to read or a nifty trick, adding a property to an object conditionally, which answer from below would you pick? ",
		"pollNumber": 132,
		"status": "closed",
		"correctAnswers": [
			{
				"id": "52341cfc-abdd-4166-8dfa-58d42b91b870",
				"value": "const link = { \n  tunic: \"traditional\", \n  items: [\"shield\", \"Blunt Sword\"], \n  ...(someCondition && { hasMasterSword: true })\n}"
			}
		],
		"id": "bb633efd-fdf5-4286-90e8-5710bee96295",
		"voted": [
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "52341cfc-abdd-4166-8dfa-58d42b91b870"
			},
			{
				"answerId": "52341cfc-abdd-4166-8dfa-58d42b91b870",
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2"
			},
			{
				"answerId": "52341cfc-abdd-4166-8dfa-58d42b91b870",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"answerId": "52341cfc-abdd-4166-8dfa-58d42b91b870",
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1"
			},
			{
				"userId": "vY2s0EviF9QbhOnHvGSlG4Kf1l33",
				"answerId": "52341cfc-abdd-4166-8dfa-58d42b91b870"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "52341cfc-abdd-4166-8dfa-58d42b91b870"
			},
			{
				"answerId": "81d81785-35ab-4d09-9d37-9080ea7a9d19",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"answerId": "81d81785-35ab-4d09-9d37-9080ea7a9d19",
				"userId": "PCKjaUvI9caAgoRZTuQYvjRirCl1"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "81d81785-35ab-4d09-9d37-9080ea7a9d19"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "52341cfc-abdd-4166-8dfa-58d42b91b870"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "c7cb4a2b-450c-4b46-9f52-4393d939d7d1"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "52341cfc-abdd-4166-8dfa-58d42b91b870"
			},
			{
				"answerId": "52341cfc-abdd-4166-8dfa-58d42b91b870",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "fd617e60-a994-4c52-bf75-62299de9f2d9"
			},
			{
				"answerId": "c7cb4a2b-450c-4b46-9f52-4393d939d7d1",
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32"
			}
		],
		"codeBlock": "const shopItems = [\n    { item: “shovel”, price: 200 },\n    { item: “bombs”, price: 20 },\n    { item: “arrows”, price: 30 }, \n    { item: “shield (level 1)”, price: 100 }\n];",
		"codeSandboxExample": "",
		"category": "javascript",
		"openingTime": 1670402375731,
		"answers": [
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio",
				"value": "const shopItems = [\n    { item: “shovel”, price: 200 },\n    { item: “bombs”, price: 20 },\n    { item: “arrows”, price: 30 }, \n    { item: “shield (level 1)”, price: 100, if (someCondition) sale: true }\n];",
				"id": "eioozak-ojnab",
				"blockType": "code"
			},
			{
				"blockType": "code",
				"value": "shopItems.push(\"sale\")",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "e1cac609-b6de-4957-89a1-468412ec298b",
				"type": "radio"
			},
			{
				"blockType": "code",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "c7cb4a2b-450c-4b46-9f52-4393d939d7d1",
				"value": "if (someCondition) { \n  shopItems = { ...shopItems, sale: true } \n}"
			},
			{
				"id": "52341cfc-abdd-4166-8dfa-58d42b91b870",
				"autoFocus": false,
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"value": "const shopItems = [\n    { item: \"shovel\", price: 200 },\n    { item: \"bombs\", price: 20 },\n    { item: \"arrows\", price: 30 }, \n    { item: \"shield (level 1)\", price: 100, ...(someCondition && { sale: true }) }\n];"
			},
			{
				"blockType": "code",
				"type": "radio",
				"autoFocus": false,
				"id": "36508b12-a876-4b53-b1c6-2487a394d74e",
				"placeholder": "Add option",
				"value": "Object.entries(shopItems).map(item => item.sale = true)"
			},
			{
				"blockType": "code",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"value": "Object.entries(shopItems).forEach(item => item.sale = true)",
				"id": "fd617e60-a994-4c52-bf75-62299de9f2d9"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"value": "shopItems.add({ …shopItems, sale?: true })",
				"id": "81d81785-35ab-4d09-9d37-9080ea7a9d19",
				"type": "radio",
				"autoFocus": false
			},
			{
				"type": "radio",
				"value": "shopItems.pushConditionally({ sale: true }); ",
				"blockType": "code",
				"autoFocus": true,
				"id": "014c6c71-e3f8-4b4d-a1c8-86d62cc094a0",
				"placeholder": "Add option"
			}
		],
		"type": "radio"
	},
	{
		"pollNumber": 131,
		"answers": [
			{
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"value": "Forget<Type>",
				"id": "eioozak-ojnab",
				"blockType": "text"
			},
			{
				"value": "LeaveOut<Type>",
				"type": "radio",
				"autoFocus": false,
				"id": "b4ad1f71-630b-47d6-a2bc-af3b1eaac7dd",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"autoFocus": false,
				"value": "Pick<Type>",
				"type": "radio",
				"id": "11e706d4-09ef-44d2-8dfc-bad3b9c5559d",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"id": "c441e5f9-c041-4e3a-b811-893d0d6348f5",
				"type": "radio",
				"blockType": "text",
				"value": "Omit<Type>",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"type": "radio",
				"id": "4888780a-de85-465b-8b15-c138494fbf92",
				"value": "Don'tNeedThis<Type>",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "Keep<Type>",
				"id": "9a5c1740-b1ff-40d0-8139-bc8d65175a37",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"id": "a403c77c-fe69-4607-a844-cec234785536",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"value": "ObjectEntries<Type>"
			},
			{
				"placeholder": "Add option",
				"id": "43760f39-f697-46fa-9d0f-a659795203b0",
				"autoFocus": false,
				"blockType": "text",
				"value": "Remove<Type>",
				"type": "radio"
			},
			{
				"id": "0f219f29-b0a6-42b4-9f0f-f2301f6e8b7b",
				"value": "Delete<Type>",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "NotMy<Type>",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "a6bc4e26-01db-4abf-a41d-5affb433d7fc"
			},
			{
				"id": "4bec5d41-7df8-4e9c-b80e-799377ac34f7",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": true,
				"value": "Ignore<Type>"
			}
		],
		"correctAnswers": [
			{
				"id": "c441e5f9-c041-4e3a-b811-893d0d6348f5",
				"value": "Omit<Type>"
			}
		],
		"status": "new",
		"category": "typescript",
		"codeBlock": "",
		"id": "2408ada0-7d52-46a4-9a30-b40c9b34f70f",
		"question": "In TS, more questions are coming up if you please, what util type is aimed to leave out keys?\n\n",
		"codeSandboxExample": "",
		"voted": [],
		"type": "radio"
	},
	{
		"status": "new",
		"codeBlock": "<section>\n  <h1>A simple guide to build websites</h1>\n  <ul>\n     <li>\n       First part: Setup\n       <ul> \n         <li>Step 1: Write your code in Google docs </li>\n         <li>Step 2: Use PHP to style your website</li>\n         <li>Step 3: Convert your DB with CSS for better performance</li>\n       </ul>\n     </li>\t\t\n  </ul>\n</section>",
		"codeSandboxExample": "",
		"pollNumber": 130,
		"question": "In CSS, selecting elements can go as deep as the HTML tree will be, which combinator is used to select only direct children <li>'s? ",
		"answers": [
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"autoFocus": false,
				"value": "~"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"value": ">",
				"placeholder": "Add option",
				"type": "radio",
				"id": "b1c69e0d-1776-4647-b9e5-53986cfce640"
			},
			{
				"id": "8d31eea0-ff25-4fdd-bad9-2247d7764bd8",
				"value": "+",
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"id": "2634b00c-d2ec-46dd-b1a0-e29270862b63",
				"value": "||",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"value": "first-child",
				"id": "dd4b770e-4362-4a89-bfff-f60bf3137a89",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "31efede1-5bc0-4107-87c7-9a6d96761d50",
				"value": "section ul li ul li ",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "li ul li ul section",
				"type": "radio",
				"blockType": "text",
				"id": "3c19bd53-d0a4-44c4-a3c4-e38e1bff05bf"
			},
			{
				"value": "<>",
				"placeholder": "Add option",
				"autoFocus": true,
				"blockType": "text",
				"id": "20bf8c0b-de72-4598-9401-c5e2fff4ffda",
				"type": "radio"
			}
		],
		"type": "radio",
		"voted": [],
		"category": "css",
		"correctAnswers": [
			{
				"id": "b1c69e0d-1776-4647-b9e5-53986cfce640",
				"value": "With the \">\" selector "
			}
		],
		"id": "66c97853-ca68-4bd7-9fd9-117ca7bb02aa"
	},
	{
		"correctAnswers": [
			{
				"value": "Outline is used for making elements more accessible, e.g on elements that need focus",
				"id": "40143199-c754-43da-afd8-27d399a3bb0b"
			}
		],
		"id": "7021d256-d673-46e5-8498-3b483dc5cae7",
		"codeBlock": "",
		"question": "In CSS, a useful property is outline, what is it's main purpose when implementing an app design?",
		"pollNumber": 129,
		"type": "radio",
		"voted": [],
		"category": "css",
		"answers": [
			{
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It's main purpose is to use it as decorative border to circumvent the box model",
				"type": "radio",
				"autoFocus": false
			},
			{
				"id": "af4fefbc-b947-437e-8561-7f47a5ec6661",
				"placeholder": "Add option",
				"value": "Outline is used when you know upfront that you want a border around your entire element as outline doesn't allow to style a single side ",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"id": "1ea467cb-a5b4-4e8e-afe6-89dc10b851c3",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"value": "Outline is used when you need more interactive borders, e.g for animation",
				"placeholder": "Add option"
			},
			{
				"value": "Outline is used for making elements more accessible, e.g on elements that need focus",
				"id": "40143199-c754-43da-afd8-27d399a3bb0b",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"id": "8be9dbd7-8686-4d94-beb0-7c868e62935d",
				"type": "radio",
				"autoFocus": false,
				"value": "Outlines are mainly used for tabular elements",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "d69f103b-ff2d-40b9-b35b-0bd6d75c9e93",
				"autoFocus": true,
				"placeholder": "Add option",
				"value": "Outlines are used to mark the \"boundaries\" of a web page within a users's view"
			}
		],
		"openingTime": 1665560053930,
		"status": "closed"
	},
	{
		"openingTime": 1667291924077,
		"status": "closed",
		"category": "css",
		"question": "In CSS, flex items can be \"ordered\" around with the property \"order\", what concern should not be ignored? ",
		"answers": [
			{
				"blockType": "text",
				"value": "That the order prop will affect the UX of users using assistive technology if the order of elements is important",
				"type": "radio",
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"type": "radio",
				"autoFocus": false,
				"value": "That the order prop is not effective on elements other than flex elements",
				"blockType": "text",
				"id": "5dafe2c8-a7e5-4c1b-bcdd-e4f1783ff71b",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "That the order prop is a single-threaded property which may impact performance if used ",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "6d703cb2-eea7-4cb9-9d06-c78c66523048",
				"autoFocus": false
			},
			{
				"autoFocus": false,
				"id": "4f11ffde-54b8-447d-8bfd-ed1894488ddd",
				"blockType": "text",
				"type": "radio",
				"value": "It confuses the browser painting rules when using order which makes your page rendering slower",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "The order prop is not supported in all modern browsers. It can be polyfilled but in most cases it is not worth it",
				"autoFocus": true,
				"id": "c6b45c87-eb57-4277-b7a3-d962de12ffb5",
				"blockType": "text"
			}
		],
		"id": "57cd2878-67be-4ed8-a635-ae19c06f3b32",
		"correctAnswers": [
			{
				"value": "That the order prop does will affect the UX of users using assistive technology if the order of elements is important",
				"id": "eioozak-ojnab"
			}
		],
		"codeBlock": "",
		"type": "radio",
		"pollNumber": 128,
		"voted": []
	},
	{
		"correctAnswers": [
			{
				"value": "useLayoutEffect",
				"id": "0920f656-c304-4084-8f84-10e6e913b0fb"
			},
			{ "id": "806fc782-03b9-4626-bca7-58a9901309ca", "value": "useRef" }
		],
		"codeSandboxExample": "",
		"id": "9fd2f895-dad9-4538-adcd-6c898244646c",
		"codeBlock": "",
		"type": "checkbox",
		"question": "In React, interacting with the DOM is something we do intensively, now what hook can be used for this effectively?",
		"status": "closed",
		"openingTime": 1667815365787,
		"voted": [],
		"category": "react",
		"pollNumber": 127,
		"answers": [
			{
				"type": "radio",
				"value": "useEffect",
				"id": "eioozak-ojnab",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "useComponentDidMount",
				"id": "8bdc6ce3-8b1b-4e21-a935-e515d5b60a96",
				"autoFocus": false
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "useDOMEffect",
				"id": "9eab7c9f-9756-41cb-b09d-bf2692a0597d",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option",
				"value": "useLayoutEffect",
				"type": "radio",
				"id": "0920f656-c304-4084-8f84-10e6e913b0fb"
			},
			{
				"value": "The render function should be used for this",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"id": "56022193-5255-4f78-92f9-317a12a75d21",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "2c2bc56c-35d3-43bd-8083-979aa5475d2c",
				"placeholder": "Add option",
				"value": "useTimeBeforeInteractiveEffect",
				"autoFocus": false
			},
			{
				"autoFocus": false,
				"value": "useRef",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "806fc782-03b9-4626-bca7-58a9901309ca",
				"type": "radio"
			},
			{
				"id": "0e55d0a1-36f3-4991-b33b-08abcc5c1364",
				"blockType": "text",
				"autoFocus": false,
				"value": "useFirstContentfulPaintEffect",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"autoFocus": true,
				"placeholder": "Add option",
				"id": "185be362-5b33-4662-88fa-191ef9efc9d5",
				"value": "useDOMContentLoadedEffect"
			}
		]
	},
	{
		"answers": [
			{
				"type": "radio",
				"value": "Because the W3C became tired of the browser inconsistencies",
				"blockType": "text",
				"id": "eioozak-ojnab",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"value": "Because the JS ecosystem got flooded with nonsense packages that generated vendor prefixes in code for developers ",
				"placeholder": "Add option",
				"id": "8c11270b-acf2-4d97-8fc9-0985e1ed87e1",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"value": "Because more than 60% of the web apps existed of meaningless code because of the added prefixes for CSS properties which slowed the web down",
				"placeholder": "Add option",
				"id": "91efef17-40e3-4d71-88a4-f4047dc393f0",
				"type": "radio"
			},
			{
				"autoFocus": false,
				"value": "Because developers included prefixes on production apps, which made it difficult to ensure compatibility",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "d7e824ab-6a6a-4a75-ba59-bf923fd7f303"
			},
			{
				"blockType": "text",
				"value": "Because it didn't fit the long-term solution; Next to -webkit-, -moz-, -ms- and -o- prefixes, they also had to come up with prefixes for browsers like Brave, Tor, Vivaldi, Edge etc. ",
				"type": "radio",
				"placeholder": "Add option",
				"id": "bc174849-1689-4aa8-b270-be1610dde55c",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "3c75ec27-3673-473d-a518-0b1206730b40",
				"value": "Because nowadays polyfills, babel and PostCSS tools are used to use experimental tools and code",
				"type": "radio",
				"autoFocus": true
			}
		],
		"correctAnswers": [
			{
				"id": "d7e824ab-6a6a-4a75-ba59-bf923fd7f303",
				"value": "Because developers included prefixes on production apps, which made it difficult to ensure compatibility"
			}
		],
		"type": "radio",
		"pollNumber": 126,
		"openingTime": 1665646608822,
		"question": "In Frontend, letting developers experiment in the browser with help of vendor prefixes made the W3C hit a snag, do you know the reasoning of why experiments are now put behind a flag?",
		"status": "closed",
		"voted": [],
		"category": "general-frontend",
		"codeBlock": "",
		"id": "8a4b9f55-f6eb-463c-ab74-00d0da3f1add"
	},
	{
		"question": "In HTML, most web apps exist out of forms waiting to be completed, when pressing ENTER, how will the <form> have the <button> treated?",
		"voted": [],
		"id": "ce00ba96-85c3-46a9-a445-79229689bfd0",
		"correctAnswers": [
			{
				"value": "The form will submit ",
				"id": "7a31a524-4a79-4d79-b07b-9b17ee491597"
			}
		],
		"status": "new",
		"pollNumber": 125,
		"codeSandboxExample": "",
		"answers": [
			{
				"blockType": "text",
				"id": "eioozak-ojnab",
				"value": "It will do nothing",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false
			},
			{
				"type": "radio",
				"autoFocus": false,
				"value": "The form values will be reset ",
				"id": "e0c4e1fb-4642-48a2-9ab5-418bae3250dd",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "The form values will be automatically stringified ",
				"autoFocus": false,
				"blockType": "text",
				"id": "bd453bc6-9f35-412a-b419-9123247eaeb6",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "The form will submit ",
				"id": "7a31a524-4a79-4d79-b07b-9b17ee491597",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "b7a12684-3c8b-40bb-91f4-5fbe55e17de2",
				"type": "radio",
				"value": "The app will assume you work with a keyboard "
			},
			{
				"value": "The <button> element will disappear",
				"autoFocus": false,
				"id": "60c0c69e-125f-4aa4-aec5-67376a883d4f",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"id": "d76567e3-db2f-4439-8474-bceaf8b027a2",
				"placeholder": "Add option",
				"value": "On Mac OS, bluetooth connectivity will be lost for a few seconds due to a weird Mac OS bug"
			},
			{
				"blockType": "text",
				"id": "efaf94ce-7cb3-4758-b44b-f450b628359f",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "The button will display the process of submitting a form, saying things like “NEENER NEENER, no button mashing”"
			}
		],
		"type": "radio",
		"category": "html",
		"codeBlock": ""
	},
	{
		"category": "css",
		"type": "radio",
		"answers": [
			{
				"value": "font-width: equal-width",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"id": "eioozak-ojnab",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio",
				"value": "font-variant-numeric: tabular-nums",
				"id": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "875842cb-f612-40d1-ae12-0661f0533e65",
				"autoFocus": false,
				"blockType": "text",
				"value": "By using serif fonts"
			},
			{
				"autoFocus": false,
				"value": "By setting the font-weight to it's maximum so the font's are too heavy to move around",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "c56dedfe-2a45-4133-98d1-8d79064ece0d",
				"type": "radio"
			},
			{
				"autoFocus": false,
				"id": "6f60943a-a0cd-485d-83f0-f24100b1359a",
				"type": "radio",
				"blockType": "text",
				"value": "By using \"display: table\" on your font",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "By looping over all characters on your app with JavaScript and apply .style.width = \"20px\"  ",
				"autoFocus": false,
				"id": "29a249c8-7ac8-4f2e-8d1f-c836735f0e90",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "By using CSS subgrid ",
				"id": "c5f74317-a400-4af0-97ad-72bd6a762fc4",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"id": "28cb952d-37bd-4c72-b6ca-294e93247b84",
				"placeholder": "Add option",
				"value": "By using line-clamp ",
				"type": "radio"
			},
			{
				"value": "font-size: minmax(1rem, 2rem)",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "accb338b-579f-49b1-b2f2-7d9379f5083b",
				"type": "radio",
				"autoFocus": true
			}
		],
		"question": "This codepen shows a trick I recently learned from Roel, what property is used displaying numbers each with the same size, something I think is really cool!",
		"pollNumber": 124,
		"codeSandboxExample": "https://codesandbox.io/embed/morning-bush-o60dii?fontsize=14&hidenavigation=1&theme=dark&view=preview",
		"id": "8c1d353a-196d-4566-8eee-d0f68372b407",
		"openingTime": 1671095359147,
		"correctAnswers": [
			{
				"value": "font-variant-numeric: tabular-nums",
				"id": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539"
			}
		],
		"status": "closed",
		"codeBlock": "",
		"voted": [
			{
				"answerId": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"userId": "XYkYvhODvjg1pLVfqtFXAGZxuCj1",
				"answerId": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539"
			},
			{
				"answerId": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539",
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3"
			},
			{
				"answerId": "eioozak-ojnab",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2",
				"answerId": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539"
			},
			{
				"answerId": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539",
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2"
			},
			{
				"answerId": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539",
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539"
			},
			{
				"answerId": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"answerId": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"answerId": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539",
				"userId": "PCKjaUvI9caAgoRZTuQYvjRirCl1"
			},
			{
				"answerId": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539",
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539"
			},
			{
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2",
				"answerId": "50e9cdd3-1744-4921-9cfa-8c5b2eab7539"
			}
		]
	},
	{
		"openingTime": 1666683802400,
		"answers": [
			{
				"value": "@media screen and (min-width: 1024px) and (orientation: portrait)",
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "fd402126-f6da-4c4f-b9f6-8b779f4c64f3",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "@media only screen and (max-width: 1320px) and (min-width: 768px)"
			},
			{
				"type": "radio",
				"id": "b4a178c4-681c-44aa-88f5-aaa722e4adb0",
				"placeholder": "Add option",
				"value": "@media only screen and (device: \"desktop\") and not (device: \"mobile\")",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "3e8b78eb-6f4c-478c-84c7-41f80513c46e",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "With CSS4 media queries"
			},
			{
				"placeholder": "Add option",
				"value": "@media (resolution: 150dpi) and (resolution: 72dpi)",
				"blockType": "text",
				"type": "radio",
				"id": "0aa24e28-0431-4e48-b32a-69ef1dfcaef5",
				"autoFocus": false
			},
			{
				"placeholder": "Add option",
				"value": "@media (hover: hover) and (pointer: fine)",
				"type": "radio",
				"id": "e30bcbe2-ee12-4a8c-a2c6-cd7678c2368e",
				"blockType": "text",
				"autoFocus": true
			}
		],
		"id": "cec3c212-9672-4d2a-a718-83b36e226e0b",
		"type": "radio",
		"category": "css",
		"voted": [],
		"pollNumber": 123,
		"correctAnswers": [
			{ "id": "db5eb4e5-b19c-4c93-bd12-ab536cc672fb", "value": "" },
			{
				"value": "@media (hover: hover) and (pointer: fine)",
				"id": "e30bcbe2-ee12-4a8c-a2c6-cd7678c2368e"
			}
		],
		"codeBlock": "",
		"question": "In CSS, I need your knowlegde give me a slice, what media query combo is the most trustworthy to detect a desktop device? ",
		"status": "closed"
	},
	{
		"question": "In TS, the following error is exists for years, what could be the cause, do you know the answer because then I'll be all ears! ",
		"voted": [],
		"id": "2cf34f9a-72bc-4193-a243-08b3b21723ea",
		"status": "needs-revision",
		"category": "typescript",
		"answers": [
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "eioozak-ojnab",
				"value": "Because you use can’t use values as index for types",
				"type": "radio",
				"blockType": "text"
			},
			{
				"id": "93e5a78d-4aff-49de-9084-0fa24eb2932d",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio",
				"value": "You need another key",
				"placeholder": "Add option"
			},
			{
				"value": "The used key doesn't have an index",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio",
				"id": "1bb74626-4ee2-4007-8bd8-4bb00ce0dcc8",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"id": "beb51b72-2a9d-468b-86a3-cf64df0a6abc",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "The used key doesn't exist"
			},
			{
				"id": "b76e5360-fa57-45ac-a8a3-f17c30000a96",
				"type": "radio",
				"blockType": "text",
				"value": "This is an inference problem: You have to let TS now it's ok to use keys as index type ",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "4b1291db-879d-4f5e-8e9f-d1568d750fa0",
				"value": "The key type doesn't match the index type "
			},
			{
				"autoFocus": true,
				"type": "radio",
				"id": "43d49aec-7c47-4650-a8c9-bc6e1271e612",
				"value": "It will fix the error when you do as it instructs by typing the sentence in your code editor",
				"placeholder": "Add option",
				"blockType": "text"
			}
		],
		"type": "radio",
		"codeSandboxExample": "",
		"pollNumber": 122,
		"codeBlock": "Type 'key' cannot be used as an index type.\n'key' refers to a value, but is being used as a type here.",
		"correctAnswers": [
			{
				"id": "eioozak-ojnab",
				"value": "You can’t use values as index for types"
			}
		]
	},
	{
		"type": "radio",
		"voted": [],
		"correctAnswers": [{ "id": "eioozak-ojnab", "value": "" }],
		"answers": [
			{
				"value": "The keys: \"shield\" and \"hookshot\"",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"id": "eioozak-ojnab",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "The types of the keys: string and string",
				"id": "a72171aa-79bc-4ccf-adf8-cfd19b05c344"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"id": "025986ae-a66a-4538-9838-385f4090db01",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "The object: { shield: string; hookshot: string }"
			},
			{
				"id": "e3ce3248-472a-439a-9271-0361db10914a",
				"blockType": "text",
				"type": "radio",
				"value": "An array of keys:  [\"shield, \"hookshot\"]",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"value": "'Item' only refers to a type, but is being used as a value here.",
				"id": "aea59484-bfe8-40eb-86d3-1ccd0e63b32e",
				"blockType": "text",
				"type": "radio",
				"autoFocus": true,
				"placeholder": "Add option"
			}
		],
		"category": "typescript",
		"pollNumber": 121,
		"status": "new",
		"question": "See the following TS code on your screen, what should the output of \"Item\" have been?",
		"id": "16ae97fa-32b8-4671-ac38-baa5652ff14a",
		"codeBlock": "type Items = { shield: string; hookshot: string };\ntype Item = keyof Items;"
	},
	{
		"codeBlock": "",
		"type": "checkbox",
		"question": "In TS, you can define functions to be invoked in multiple ways, can you name the approaches on how to do that these days?",
		"status": "closed",
		"answers": [
			{
				"type": "radio",
				"id": "eioozak-ojnab",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "Type guarding"
			},
			{
				"blockType": "text",
				"id": "e1e729fe-b974-4cde-a49d-297e92222013",
				"value": "Function overloading",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "e35cee5b-38e4-4878-b1fc-6cfe44a39726",
				"blockType": "text",
				"autoFocus": false,
				"value": "By augmenting arguments in the function signature ",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "Generics is all you need",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio",
				"id": "edecc7a1-d073-49f4-838e-605253dfee69"
			},
			{
				"value": "By making sure to implement constraints in your functions",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"autoFocus": false,
				"id": "0e8e076f-ea0d-4368-9b67-f75ef270d42d"
			},
			{
				"id": "3dd925fb-f63e-408c-9e14-1657c1600caf",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"value": "By adding private methods to your classes"
			},
			{
				"value": "Function unloading ",
				"type": "radio",
				"placeholder": "Add option",
				"id": "1b851901-e749-4669-9381-f37b7320330e",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"id": "274ce05c-a9ad-4e92-af98-57716ef364b4",
				"blockType": "text",
				"type": "radio",
				"autoFocus": true,
				"placeholder": "Add option",
				"value": "By copying the functions and assign each with different function signatures"
			}
		],
		"voted": [],
		"category": "typescript",
		"id": "5444de9d-3e7b-4147-b555-b205f1573fb1",
		"correctAnswers": [
			{
				"id": "e1e729fe-b974-4cde-a49d-297e92222013",
				"value": "Function overloading"
			},
			{
				"id": "e35cee5b-38e4-4878-b1fc-6cfe44a39726",
				"value": "By augmenting arguments in the function signature "
			},
			{
				"value": "Generics is all you need",
				"id": "edecc7a1-d073-49f4-838e-605253dfee69"
			}
		],
		"pollNumber": 120,
		"openingTime": 1666251383798
	},
	{
		"answers": [
			{
				"autoFocus": false,
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"value": "<dl>\n  {items.map(item => \n     <key={item.id}>\n       <dt>{item.name}</dt>\n       <dd>{item.description}</dd>\n     </>\n  )}\n</dl>",
				"type": "radio",
				"blockType": "code"
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "code",
				"id": "4d06d9f6-d995-4094-9d36-f5cfe008b999",
				"value": "<dl>\n  {items.map(item => \n     <Fragment>\n       <dt>{item.name}</dt>\n       <dd>{item.description}</dd>\n     </Fragment>\n  )}\n</dl>",
				"type": "radio"
			},
			{
				"id": "ca2137fa-2de4-4d28-ac37-3d5f3bf0f4c6",
				"value": "<dl>\n  {items.map(item => \n     <Fragment key={item.id}>\n       <dt>{item.name}</dt>\n       <dd>{item.description}</dd>\n     </Fragment>\n  )}\n</dl>",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio"
			},
			{
				"value": "<dl>\n  {items.map(item => \n     <div>\n       <dt>item.name}</dt>\n       <dd>{item.description}</dd>\n     </div>\n  )}\n</dl>",
				"placeholder": "Add option",
				"id": "72dfb68a-10ae-445c-a690-925cdef702fb",
				"type": "radio",
				"blockType": "code",
				"autoFocus": true
			}
		],
		"codeBlock": "Warning: Each child in a list should have a unique \"key\" prop.\n\n// Code\n<dl>\n  {items.map(item => \n     <>\n       <dt>item.name}</dt>\n       <dd>{item.description}</dd>\n     </>\n  )}\n</dl>",
		"question": "In React, the code below returns the following error on your screen, what would your solution have been? ",
		"type": "radio",
		"correctAnswers": [
			{
				"id": "ca2137fa-2de4-4d28-ac37-3d5f3bf0f4c6",
				"value": "<dl>\n  {items.map(item => \n     <Fragment key={item.id}>\n       <dt>{item.name}</dt>\n       <dd>{item.description}</dd>\n     </Fragment>\n  )}\n</dl>"
			}
		],
		"voted": [],
		"pollNumber": 119,
		"category": "react",
		"status": "new",
		"id": "266f1a51-4554-4876-8ebe-c71b94580ddb",
		"codeSandboxExample": ""
	},
	{
		"voted": [],
		"openingTime": 1666166732841,
		"correctAnswers": [
			{
				"value": "cursor: pointer",
				"id": "1efed873-abb1-4238-ba42-1a5c086f6461"
			}
		],
		"type": "radio",
		"answers": [
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "cursor: hand",
				"blockType": "text",
				"type": "radio",
				"id": "eioozak-ojnab"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"id": "6d9047c7-f77e-45fc-8224-37a4c60d7357",
				"placeholder": "Add option",
				"value": "You can download an NPM package to implement custom cursors",
				"blockType": "text"
			},
			{
				"value": "cursor: pointer",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"id": "1efed873-abb1-4238-ba42-1a5c086f6461"
			},
			{
				"blockType": "text",
				"id": "98d4b508-9b43-40d2-86b1-1d505af93933",
				"type": "radio",
				"value": "pointer: hand ",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"value": "pointer: pointer ",
				"id": "59b854df-74a9-4ada-bfa6-59aec5b1e81b",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "cursor: cursor",
				"autoFocus": false,
				"id": "f89a5b88-7165-43ca-b3f9-dbda2c85e9c6",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "6ce6b36d-7fc4-4795-90d9-ad7ad4402c8a",
				"blockType": "code",
				"type": "radio",
				"value": "document.addEventListener('mousemove', (e) => {\n    x = e.offsetX;\n    y = e.offsetY;\n    document.styleSheets.item.cursor = \"hand\"\n});"
			}
		],
		"status": "closed",
		"question": "In CSS, we can change cursors with a simple command, what syntax is used to change the cursor to a hand? ",
		"id": "1713242d-4a43-4723-a74b-059de5ffefea",
		"pollNumber": 118,
		"category": "css",
		"codeBlock": ""
	},
	{
		"codeSandboxExample": "",
		"voted": [],
		"id": "dc75c898-7452-4197-8831-9ed223c9fc54",
		"openingTime": 1669105788494,
		"status": "closed",
		"codeBlock": "",
		"type": "checkbox",
		"question": "In JS, immutability makes code easier to reason about, now can you list why we immutability is beneficial and please don’t shout? ",
		"correctAnswers": [
			{
				"id": "d59a0f7a-ca72-4c4e-a902-e0312c223ede",
				"value": "It's easier to keep multiple versions of data / state (allowing features like “undo”!)"
			},
			{
				"id": "a293dc5f-f15f-4726-84a2-4b836f82a093",
				"value": "If you call a function but not use its return data, you expect that nothing changed"
			}
		],
		"pollNumber": 117,
		"category": "javascript",
		"answers": [
			{
				"value": "Because writing immutable code results in smaller files",
				"blockType": "text",
				"id": "eioozak-ojnab",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio",
				"id": "3a46666f-bae1-4eca-90ed-59eca79247f5",
				"value": "Code immutability is a term managers command developers to do when they expect large traffic on their website and hold off releases for a short period of time. Also referred as  temporary \"code freeze\"."
			},
			{
				"blockType": "text",
				"id": "880cb604-b1fb-440f-93b2-6547dee61341",
				"autoFocus": false,
				"value": "Immutability is a title you earn which unlocks certain privileges as developer. It can be recognized by developers receiving blackbelts from their company. Privileges are that devs are allowed to merge branches without approvals because of the companies immense trust.",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "Because it's easier to keep multiple versions of data / state (allowing features like “undo”!)",
				"id": "d59a0f7a-ca72-4c4e-a902-e0312c223ede",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "a293dc5f-f15f-4726-84a2-4b836f82a093",
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "Because if you call a function but not use its return data, you expect that nothing changed"
			},
			{
				"id": "7372f558-f6c8-4b34-84bc-8d8ba9021aeb",
				"value": "Because when writing immutable code, tests are redundant",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "The term immutable comes from IIFE (Immutable Invoking Function Expression), which is a function that makes code run inside immutable",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "518df55f-14dc-4a6a-94a8-5f2971ec0a52",
				"type": "radio"
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "0415ae0d-ca8a-4ecd-ba69-84e8196bf934",
				"value": "Because immutable objects are directly modifiable"
			}
		]
	},
	{
		"correctAnswers": [
			{
				"id": "2813382e-14f3-46c3-87fb-9dccbcefe402",
				"value": "Using semantic HTML"
			},
			{ "id": "eioozak-ojnab", "value": "Using alt tags on images" },
			{
				"id": "b07951a6-11c2-4c43-92e3-ba0e89aa8db9",
				"value": "By using “responsive site” meta tags if your site is responsive"
			},
			{
				"value": "By using canonical tags in HTML",
				"id": "09ec6d48-cc5e-47f7-9f1e-07b3bba8c11f"
			}
		],
		"status": "new",
		"answers": [
			{
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"value": "Using alt tags on images",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "2813382e-14f3-46c3-87fb-9dccbcefe402",
				"value": "Using semantic HTML",
				"autoFocus": false
			},
			{
				"value": "By creating a PWA and a native app next to your website",
				"blockType": "text",
				"id": "1663e82f-fbd2-4109-a237-01fdef8b6d89",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "By following the current Google algorithm: visit your website a few times a day via Google",
				"blockType": "text",
				"autoFocus": false,
				"id": "5b928337-d8fd-430c-ac81-225373ea0040",
				"placeholder": "Add option"
			},
			{
				"value": "By using canonical tags in HTML",
				"placeholder": "Add option",
				"type": "radio",
				"id": "09ec6d48-cc5e-47f7-9f1e-07b3bba8c11f",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"id": "b07951a6-11c2-4c43-92e3-ba0e89aa8db9",
				"value": "By using “responsive site” meta tags if your site is responsive",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "8fa2492e-81c3-45fd-967f-1aed51c74d98",
				"autoFocus": false,
				"value": "By using a CMS",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "4891000b-619c-4d5d-845c-ce1a067b3b96",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "By integrating the SEO crawler API"
			},
			{
				"autoFocus": true,
				"placeholder": "Add option",
				"type": "radio",
				"value": "By redirecting non-existing pages to Google search",
				"blockType": "text",
				"id": "0adce42b-5fa9-4aad-8985-4264d399af62"
			}
		],
		"category": "general-frontend",
		"question": "In Frontend, your website floats in digital space all around, what are ways to make your SEO profound?",
		"id": "1fd9130a-d730-4823-800f-d0b9be34839f",
		"pollNumber": 116,
		"codeSandboxExample": "",
		"voted": [],
		"type": "checkbox",
		"codeBlock": ""
	},
	{
		"codeBlock": "",
		"status": "new",
		"codeSandboxExample": "",
		"correctAnswers": [
			{ "value": "It creates a stacking context", "id": "eioozak-ojnab" }
		],
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "It creates a stacking context",
				"blockType": "text",
				"id": "eioozak-ojnab"
			},
			{
				"blockType": "text",
				"value": "It takes elements out of the DOM flow",
				"id": "3ab80f5f-32aa-4e0b-9b37-7068c3d7ab57",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "52ae7a38-aae2-479e-afb5-b723596606df",
				"placeholder": "Add option",
				"value": "It makes elements inline automatically",
				"blockType": "text"
			},
			{
				"value": "Opacity is a shorthand property, so it implicitly sets properties values tied to opacity like “opacity-rate” or “opacity-color”",
				"type": "radio",
				"id": "369c41f9-8cd5-488d-9825-0a0ced762a69",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "9eb7edf3-e956-4b05-b63e-90a61baeb19a",
				"value": "By design mistake it ignores the CSS specificity rules"
			}
		],
		"category": "css",
		"type": "radio",
		"id": "de75713d-0972-4524-8f3b-d23de237d3b4",
		"question": "This question is though so beware, when using \"opacity\" what side effect will happen are you aware? \n",
		"pollNumber": 115,
		"voted": []
	},
	{
		"question": "In JS, arrays start and end, what ways are allowed to get the last element?",
		"pollNumber": 114,
		"codeBlock": "",
		"category": "javascript",
		"correctAnswers": [
			{
				"id": "f5070e72-43d2-4ffe-bc29-88de86b6c9f7",
				"value": "array.slice(-1)[0]"
			},
			{ "id": "eioozak-ojnab", "value": "array[array.length - 1]" },
			{
				"value": "array.at(-1)",
				"id": "866ea28c-1ad5-4434-a81c-40791fc90c35"
			}
		],
		"answers": [
			{
				"value": "array[array.length - 1]",
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"type": "radio",
				"blockType": "text"
			},
			{
				"id": "866ea28c-1ad5-4434-a81c-40791fc90c35",
				"value": "array.at(-1)",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "array[array.length]",
				"id": "07e2d265-4398-4c5f-a5da-b1195bd9925b"
			},
			{
				"value": "while((element) ⇒ {  return array === “last” ? element : array })",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "a1f2e548-45a5-4679-9ecf-55b139190902"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "57c86f86-93c5-4bc8-a25d-1472bb92a233",
				"value": "array.findLastElement(element ⇒ element)"
			},
			{
				"blockType": "text",
				"value": "array.slice(-1)[0]",
				"id": "f5070e72-43d2-4ffe-bc29-88de86b6c9f7",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "802e11e0-3cdf-4849-a4a2-491821404571",
				"placeholder": "Add option",
				"value": "array.pop()",
				"blockType": "text",
				"type": "radio"
			}
		],
		"type": "checkbox",
		"openingTime": 1664524443752,
		"id": "8cedf177-3634-4871-9ffe-e4450f54c3f8",
		"voted": [],
		"status": "closed"
	},
	{
		"type": "radio",
		"question": "In CSS, voting on these polls is time well spent, what psuedo class is used to style elements based on a url fragment?",
		"codeBlock": "",
		"category": "css",
		"pollNumber": 113,
		"correctAnswers": [{ "value": ":target", "id": "eioozak-ojnab" }],
		"answers": [
			{
				"type": "radio",
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"value": ":target",
				"blockType": "text"
			},
			{
				"id": "90d5eda8-53f3-4c1e-92cb-1ce15587ab59",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": ":url"
			},
			{
				"blockType": "text",
				"id": "cef0793d-97d0-4ded-bb1e-6296bef3907b",
				"type": "radio",
				"value": ":active",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "d54d50c2-d0e9-4d56-9b64-5f6863696523",
				"value": ":fragment"
			},
			{
				"value": "By using #id selectors",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "cd31a5b7-7c0d-4517-8868-4f38cbde794a"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "3a7f9182-f408-4b4e-875a-b261ac5543ec",
				"value": ":last-url-child",
				"placeholder": "Add option"
			},
			{
				"value": ":has(:url)",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "e9fb5193-bfe8-470f-ae64-0440e574137b"
			}
		],
		"status": "closed",
		"openingTime": 1665933750814,
		"id": "bb862914-8de5-42cf-bcd4-049dcb7e2208",
		"voted": []
	},
	{
		"answers": [
			{
				"blockType": "code",
				"value": "scroll-chain",
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "8672553b-e56d-4442-914f-625de5be7f80",
				"value": "The JS Intersection Observer API "
			},
			{
				"id": "76cb2e09-f591-4529-92f8-c3fb1bbb06f7",
				"type": "radio",
				"blockType": "code",
				"placeholder": "Add option",
				"value": "overflow"
			},
			{
				"id": "b3ed77f8-c2d7-477b-a598-f5adf6dbab3c",
				"placeholder": "Add option",
				"blockType": "code",
				"value": "overscroll-behaviour ",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "scroll-snap",
				"id": "830cbf05-66ad-4372-96f0-b430b4df300d",
				"blockType": "code",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "window.scrollTo()",
				"blockType": "code",
				"id": "bc305917-3d00-491e-8a49-11ffce2652d7",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"id": "ca5ae794-dbd7-4735-aba4-2da4ed89b35c",
				"type": "radio",
				"value": "var notChangedStepsCount = 0;\nvar scrollInterval = setInterval(function() {\n    var element = document.querySelector(\".element-selector\");\n    if (element) { \n        // element found\n        clearInterval(scrollInterval);\n        element.scrollIntoView();\n    } else if((document.documentElement.scrollTop + window.innerHeight) != document.documentElement.scrollHeight) { \n        // no element -> scrolling\n        notChangedStepsCount = 0;\n        document.documentElement.scrollTop = document.documentElement.scrollHeight;\n    } else if (notChangedStepsCount > 20) { \n        // no more space to scroll\n        clearInterval(scrollInterval);\n    } else {\n        // waiting for possible extension (autoload) of the page\n        notChangedStepsCount++;\n    }\n}, 50);",
				"blockType": "code"
			}
		],
		"question": "In CSS, \"scroll-chaining\" is a thing happening when we scroll, what property can you use to make it under your control?",
		"pollNumber": 112,
		"category": "css",
		"status": "closed",
		"id": "9d517708-0722-4da1-b24b-9083d1ba1a1d",
		"codeBlock": "",
		"type": "radio",
		"correctAnswers": [
			{
				"value": "overscroll-behaviour ",
				"id": "b3ed77f8-c2d7-477b-a598-f5adf6dbab3c"
			}
		],
		"openingTime": 1664266194040,
		"voted": []
	},
	{
		"question": "In CSS, specificity is basic stuff, now name a fact about it that’ll make your CSS knowledge tough?",
		"openingTime": 1665860343543,
		"category": "css",
		"pollNumber": 111,
		"voted": [],
		"type": "radio",
		"codeBlock": "",
		"status": "closed",
		"correctAnswers": [
			{
				"id": "b2f44734-deab-423f-ae37-3150ec080720",
				"value": "Specificity is the algorithm used by browsers to determine the CSS declaration  that is the most relevant to an element"
			}
		],
		"id": "f6f648b9-10a5-4822-b02f-dda0caf5ac5d",
		"answers": [
			{
				"id": "eioozak-ojnab",
				"value": "Specificity is so-called code style, meaning that you write very specific, pure and immutable CSS",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"id": "76b09320-ffc2-44d5-8a60-c2cd1a373778",
				"value": "Specificity is “special” CSS aimed at advanced CSS’ers, referring to a learning phase after mastering the fundamentals",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "e44c004b-8536-429a-894b-aa1618132cff",
				"blockType": "text",
				"value": "Specificity is the second S in CSS: Cascading Specificity Styles"
			},
			{
				"value": "Specificity is the algorithm used by browsers to determine the CSS declaration  that is the most relevant to an element",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "b2f44734-deab-423f-ae37-3150ec080720"
			},
			{
				"id": "e14bdbd9-9d34-4d86-9f45-b23878f4571e",
				"type": "radio",
				"value": "Specificity applies to the term “specificity classes” like :active, :is, :where, :has, :link, :hover etc. ",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "d33eca66-33f8-412a-bbe9-0adc82f5eb79",
				"value": "Specificity is applied when you nest your styles: when applying, you will create specific CSS code ",
				"placeholder": "Add option"
			}
		]
	},
	{
		"id": "6847c637-7830-48b9-84af-d5aa57cbc691",
		"pollNumber": 110,
		"correctAnswers": [
			{ "value": "typeof === “boolean”", "id": "eioozak-ojnab" },
			{
				"id": "5541f0bd-c02f-43d7-ab90-d710aeaff6c6",
				"value": "Type assertion, e.g \"value as Type\""
			}
		],
		"codeBlock": "",
		"voted": [],
		"codeSandboxExample": "",
		"answers": [
			{
				"blockType": "text",
				"type": "radio",
				"id": "e3dc0a05-8313-4398-a65f-a57e8d7081ba",
				"value": "By making use of the TypeScript compiler API ",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"id": "aa5e0a28-7c3c-412b-9770-35bd614ee0b2",
				"autoFocus": false,
				"value": "When this situation occurs, using \"any\" is acceptable",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"id": "66597296-a456-4491-aa3c-08682ccf5e82",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "Configure the TS compiler to always recognize types on the go "
			},
			{
				"placeholder": "Add option",
				"id": "313fb9b3-ae01-4bda-9ce1-0cc6bf30b82b",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"value": "By changing all your \"type\" annotations keywords to \"interface\" "
			},
			{
				"placeholder": "Add option",
				"id": "5541f0bd-c02f-43d7-ab90-d710aeaff6c6",
				"blockType": "text",
				"type": "radio",
				"value": "Type assertion, e.g \"value as Type\"",
				"autoFocus": false
			},
			{
				"id": "6eb43903-dff0-4f95-84b2-0badf998c7bb",
				"type": "radio",
				"value": "By not using the built-in utility types ",
				"placeholder": "Add option",
				"blockType": "text",
				"autoFocus": true
			}
		],
		"type": "radio",
		"category": "typescript",
		"question": "In TS, sometimes TypeScript can’t figure out a compatible type on the go, what can you do to let the compiler know? ",
		"status": "new"
	},
	{
		"status": "new",
		"category": "javascript",
		"correctAnswers": [
			{ "value": "typeof === “boolean”", "id": "eioozak-ojnab" }
		],
		"voted": [],
		"answers": [
			{
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"type": "radio",
				"blockType": "text",
				"value": "typeof === “boolean”"
			},
			{
				"id": "512abe50-2499-47cc-9f77-40d3f44b9b31",
				"value": "typeof === Boolean",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "valueof === “boolean”",
				"placeholder": "Add option",
				"id": "c04fd43c-7993-4a7c-bb7b-fbe13250b378",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "ab576901-b479-4251-aae6-01f87d2dcd8f",
				"value": "type"
			},
			{
				"placeholder": "Add option",
				"id": "4512a45f-97d8-43af-86c7-872d388acb6e",
				"type": "radio",
				"value": "It’s done with TypeScript",
				"blockType": "text"
			},
			{
				"id": "190cf07f-1257-4adf-8098-1dc210e42a50",
				"value": "isBoolean()",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "2e43663f-db5e-4b16-81df-94d65fa611fb",
				"value": "value === “boolean”",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "e3dc0a05-8313-4398-a65f-a57e8d7081ba",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Boolean()"
			}
		],
		"pollNumber": 109,
		"codeBlock": "",
		"id": "08e5d247-d38b-4e8b-92d6-eb802900f28a",
		"question": "In JS, this question might not be your thing which is a gripe, what operator would you use to check if a value is a boolean type?",
		"type": "radio"
	},
	{
		"id": "062ad1b1-9acd-406d-af2e-5d53a65a07ca",
		"pollNumber": 108,
		"voted": [],
		"correctAnswers": [
			{
				"value": "If the HTML Tag exists but a11y support is not implemented",
				"id": "2cb4e96f-d3e7-4a98-8e48-cf39990dae32"
			}
		],
		"codeBlock": "",
		"category": "html",
		"status": "new",
		"type": "radio",
		"answers": [
			{
				"type": "radio",
				"value": "When you use non-semantic elements but want to support a11y",
				"blockType": "text",
				"id": "eioozak-ojnab",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "They should be used on all elements, but ARIA is always an ondergeschoven kindje",
				"id": "eb4f8f78-5bee-4a13-a75a-e5d59046b7f3"
			},
			{
				"value": "When you have to support deprecated HTML tags in older browsers",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "cc2945f4-70bf-4e07-94f1-ed8e8ece01ce"
			},
			{
				"value": "ARIA rules are only applied when you want to improve your UX for complex apps towards your users",
				"type": "radio",
				"id": "b638788b-d852-48c2-aed1-0604c1d63cf0",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "If the HTML Tag exists but a11y support is not implemented",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "2cb4e96f-d3e7-4a98-8e48-cf39990dae32"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "When you want to have a valid HTML document",
				"id": "2484f047-5c09-419c-86ea-963747eeca19"
			}
		],
		"question": "In HTML, A11y is important under every circumstance, but when are ARIA rules a way to enhance?"
	},
	{
		"pollNumber": 107,
		"voted": [],
		"category": "css",
		"id": "b77d29f3-f2c1-47bd-acf8-eb9f1615577a",
		"codeBlock": "",
		"correctAnswers": [
			{ "id": "b6866d69-fc27-4df3-a305-159040473d47", "value": "gap" }
		],
		"question": "In CSS, now don’t get confused, but to create space between elements what property is used?",
		"status": "closed",
		"answers": [
			{
				"value": "margin",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"id": "1d6f776d-5337-4096-bfcf-91fa7d463974",
				"autoFocus": false,
				"blockType": "text",
				"value": "padding",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "eb8dbbcf-a50c-452d-9067-596604cde8b0",
				"value": "flex",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "grid",
				"type": "radio",
				"blockType": "text",
				"id": "5812d53f-7d49-441e-af82-bf134d505e5c"
			},
			{
				"placeholder": "Add option",
				"id": "b6866d69-fc27-4df3-a305-159040473d47",
				"autoFocus": false,
				"blockType": "text",
				"value": "gap",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"id": "7ab4ce5a-d061-44fa-92ea-b36fb0c6701a",
				"type": "radio",
				"autoFocus": false,
				"value": "border",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "margin-block-start",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "36861a8f-5ad1-45f8-84f0-ceb14f44a3c8"
			},
			{
				"id": "c1cb5d0a-edd1-4ad0-a272-5f8f9096e214",
				"placeholder": "Add option",
				"value": "padding-inline-start",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text"
			},
			{
				"value": "word-spacing",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": true,
				"blockType": "text",
				"id": "a2c64bc1-40a1-47c4-9ffd-ddecba6a3d92"
			}
		],
		"openingTime": 1666943424914,
		"type": "radio"
	},
	{
		"category": "javascript",
		"id": "5f44ec4b-4a9c-41fa-8d62-5505dd65ccec",
		"type": "radio",
		"openingTime": 1667380093700,
		"voted": [],
		"status": "closed",
		"codeBlock": "",
		"pollNumber": 106,
		"answers": [
			{
				"type": "radio",
				"value": "They are different kind of events: blur is used for example with images (“blurring”), while onFocusOut is used for input fields",
				"autoFocus": false,
				"id": "eioozak-ojnab",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "Blur is used in conjunction with input fields, onFocusOut is only for buttons",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "ba49a6d0-38c2-4158-b818-a75871eb6d14",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "onFocusOut bubbles; blur doesn’t",
				"id": "2ab47e09-f49d-4c19-87db-58b9ed53998d",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "1d46ff11-9f27-4e02-9f68-6d4a15c74f5c",
				"blockType": "text",
				"value": "There is no difference in functionality: onFocusOut was developed later as the W3C found this to be a more intuitive name",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"autoFocus": true,
				"blockType": "text",
				"value": "onFocusOut is a synthetic event from React (and the better name according to them); blur is the DOM implementation",
				"id": "5596f5b1-077c-4423-ae5a-6cecc6df37d6",
				"placeholder": "Add option"
			}
		],
		"question": "In JS, some events may be ambiguous, what is the difference between blur and onFocusOut which is not very conspicious?",
		"correctAnswers": [
			{
				"value": "onFocusOut bubbles; blur doesn’t",
				"id": "2ab47e09-f49d-4c19-87db-58b9ed53998d"
			}
		]
	},
	{
		"pollNumber": 105,
		"type": "radio",
		"id": "29221e34-a8e9-4cb8-8931-390d0595be95",
		"question": "In JS, `some()` is a method provided, can you explain what it does when applied?",
		"openingTime": 1666943632569,
		"correctAnswers": [
			{
				"id": "ba49a6d0-38c2-4158-b818-a75871eb6d14",
				"value": "As soon as the method returns true, it will stop checking elements that come after"
			}
		],
		"status": "closed",
		"category": "javascript",
		"voted": [],
		"codeBlock": "",
		"codeSandboxExample": "",
		"answers": [
			{
				"value": "It picks “some” elements meeting the  condition you provide",
				"id": "eioozak-ojnab",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "ba49a6d0-38c2-4158-b818-a75871eb6d14",
				"autoFocus": false,
				"type": "radio",
				"value": "As soon as the method returns true, it will stop checking elements that come after"
			},
			{
				"placeholder": "Add option",
				"id": "2ab47e09-f49d-4c19-87db-58b9ed53998d",
				"blockType": "text",
				"autoFocus": false,
				"value": "It’s a method that sometimes (randomly) returns false, and sometimes true",
				"type": "radio"
			},
			{
				"id": "47fe13be-69fb-459e-8aef-ccdb3c28517e",
				"value": "It executes a callback function sometimes: only when it meets the condition ",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false
			},
			{
				"id": "c28b3e8b-985d-4c02-829a-a1f454a701c9",
				"value": "It tests all elements in the array and only returns true if all elements pass",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "7508a475-0d33-42ef-a1a3-8aa71e53c0f6",
				"value": "It's a higher order function based on Math.random() and gives you \"some\" result",
				"autoFocus": true,
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			}
		]
	},
	{
		"category": "javascript",
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "cast(value)",
				"autoFocus": false,
				"id": "eioozak-ojnab"
			},
			{
				"id": "8cdd7da1-c831-4aff-831a-c0333f78fa24",
				"blockType": "text",
				"autoFocus": false,
				"value": "as boolean",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "(value) ⇒ “boolean”",
				"id": "900b78bf-6e4e-4501-a112-47c2db13c980",
				"type": "radio",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"value": "typeof === ”boolean”",
				"placeholder": "Add option",
				"id": "0ee4e36a-d114-4ace-a03f-7029b21f5d97",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "With CSS booleans",
				"autoFocus": false,
				"id": "904e9ee9-f296-47d4-888c-458ea7ee2e2c"
			},
			{
				"type": "radio",
				"id": "997f7ad2-5de0-4a37-8418-942602a90187",
				"value": "With CSS logical properties",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"id": "427a8f9c-0958-4627-b8cd-53ccf4b8c8ab",
				"placeholder": "Add option",
				"value": "!!value",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"id": "01e827f0-024d-46e6-8e07-9eb376cdbc40",
				"type": "radio",
				"autoFocus": true,
				"value": "Object.prototype.hasOwnProperty()",
				"blockType": "text"
			}
		],
		"pollNumber": 104,
		"question": "In JS, there is a lot knowledge to grasp, what way a boolean value is cast?",
		"voted": [],
		"id": "6aa33787-7d21-42c0-8b16-560ae8f572ce",
		"openingTime": 1666338944752,
		"codeBlock": "",
		"correctAnswers": [
			{ "value": "!!value", "id": "427a8f9c-0958-4627-b8cd-53ccf4b8c8ab" }
		],
		"type": "radio",
		"status": "closed"
	},
	{
		"question": "In HTML, the `tabindex` property may enhance a11y by controlling keyboard focus in development, what are concerns when using it on a non-interactive element? ",
		"answers": [
			{
				"value": "The concerns are that it will cause unwanted side effects on semantic elements",
				"type": "radio",
				"autoFocus": false,
				"blockType": "text",
				"id": "eioozak-ojnab",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "8cdd7da1-c831-4aff-831a-c0333f78fa24",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "Because the “tab” button was actually going to be replaced on future keyboards, because it had no real meaning (before popular shortcuts like cmd + tab came around)"
			},
			{
				"blockType": "text",
				"id": "900b78bf-6e4e-4501-a112-47c2db13c980",
				"value": "The concern are performance issues, because when tabindexing, \"indexing\" is required which is a heavy computational task",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"id": "0ee4e36a-d114-4ace-a03f-7029b21f5d97",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio",
				"value": "It prevents assistive technology from being able to navigate and manipulate to elements"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "Nothing, on the contrary; adding tabindex enhances a11y",
				"id": "904e9ee9-f296-47d4-888c-458ea7ee2e2c",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"value": "Concerns are that it doesn't work: non-interactive elements can't be interacted with",
				"type": "radio",
				"autoFocus": true,
				"blockType": "text",
				"id": "0df1c93a-5048-47df-b094-c7fe39388a64",
				"placeholder": "Add option"
			}
		],
		"status": "closed",
		"codeBlock": "",
		"type": "radio",
		"correctAnswers": [
			{
				"id": "0ee4e36a-d114-4ace-a03f-7029b21f5d97",
				"value": "It prevents assistive technology from being able to navigate and manipulate to elements"
			}
		],
		"id": "9e215a61-1a85-4182-af30-969eeef2597b",
		"voted": [],
		"openingTime": 1666598514581,
		"pollNumber": 103,
		"category": "html"
	},
	{
		"codeBlock": "",
		"correctAnswers": [
			{
				"id": "53bd0df5-3376-4115-9b4b-ebbead2b4b65",
				"value": "tabindex"
			}
		],
		"type": "radio",
		"status": "closed",
		"pollNumber": 102,
		"category": "html",
		"answers": [
			{
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"value": "autofocus",
				"blockType": "code",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "With keyboard event listeners",
				"type": "radio",
				"id": "18b44cc8-d297-46d6-a2c8-a793fe814cb7"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code",
				"value": "keyfocus",
				"id": "ff6fac8d-edbb-4095-aa50-7905c54e7fef"
			},
			{
				"blockType": "text",
				"value": "With CSS psuedo class :focus",
				"placeholder": "Add option",
				"id": "eba92415-56d4-4e5a-b2b0-bb38a9250923",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "code",
				"id": "403a04b9-94bd-45a7-8b71-8ec31954a48c",
				"value": "onFocus"
			},
			{
				"placeholder": "Add option",
				"id": "f510c942-32e0-4af6-b29e-ad84ef4ad2d9",
				"value": "onBlur",
				"blockType": "code",
				"type": "radio"
			},
			{
				"id": "53bd0df5-3376-4115-9b4b-ebbead2b4b65",
				"value": "tabindex",
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio"
			}
		],
		"question": "In HTML, attributes adjusts behaviour of elements which is noticable, what attribute is used to make to interactive elements keyboard focusable?",
		"id": "505a1b99-3ed7-45cf-b503-fecde59a50a3",
		"voted": [],
		"openingTime": null
	},
	{
		"correctAnswers": [
			{
				"id": "eioozak-ojnab",
				"value": "Flexbox is aimed at smaller layouts, while grid is aimed at larger-scale layouts"
			},
			{
				"value": "Grid can be used to control elements on both axis simultaneously; Flex is used to control elements over a single axis",
				"id": "79c56b51-80cf-425e-bd45-2f385c89ae16"
			}
		],
		"type": "radio",
		"pollNumber": 101,
		"status": "needs-revision",
		"codeSandboxExample": "",
		"category": "css",
		"voted": [],
		"openingTime": null,
		"codeBlock": "",
		"answers": [
			{
				"blockType": "text",
				"value": "Flexbox is aimed at smaller layouts, while grid is aimed at larger-scale layouts",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "eioozak-ojnab"
			},
			{
				"id": "d3dace53-0c92-4c06-bdd1-3234cbc931ac",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"value": "You should choose either grid or flexbox in your project, because using them interchangeably cancel each other out",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "91a21faf-466a-4fd2-adb1-0e52f8641188",
				"value": "Grid is only needed to create table layouts; Flexbox should be used for the rest",
				"autoFocus": false,
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"autoFocus": true,
				"type": "radio",
				"placeholder": "Add option",
				"id": "79c56b51-80cf-425e-bd45-2f385c89ae16",
				"blockType": "text",
				"value": "Grid can be used to control elements on both axis simultaneously; Flex is used when you need to control elements over a single axis only"
			}
		],
		"id": "494ad48c-19a0-4847-96b5-be7968d55ede",
		"question": "In CSS, flexbox and grid techniques are each like a brother, though they are not the same, can you list differences one over another?"
	},
	{
		"codeBlock": "",
		"id": "1c8a9c5c-a264-4211-af5a-8a226fb6986c",
		"question": "In JS, mutable and immutable methods are indisputable can you list the methods which are immutable?",
		"category": "javascript",
		"correctAnswers": [
			{ "id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9", "value": "reduce" },
			{ "value": "map", "id": "5f06a23d-8275-4570-82d6-e4007a3e87cf" },
			{ "id": "70f89332-66b6-4b90-be4a-bf680d15654c", "value": "concat" },
			{ "value": "every", "id": "1514eab3-6cbd-4ee4-a324-03092dd228ee" },
			{ "id": "e28c2bb4-dd28-4923-8748-401c0c947972", "value": "slice" },
			{ "value": "filter", "id": "b170c38e-9c9d-4153-bd8b-2e5408995918" },
			{ "value": "some", "id": "42d40fdf-7325-46f6-89d8-5a060ff3ac50" }
		],
		"status": "new",
		"voted": [],
		"pollNumber": 100,
		"type": "checkbox",
		"answers": [
			{
				"id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9",
				"blockType": "code",
				"type": "radio",
				"placeholder": "Add option",
				"value": "reduce"
			},
			{
				"type": "radio",
				"value": "map",
				"id": "5f06a23d-8275-4570-82d6-e4007a3e87cf",
				"placeholder": "Add option",
				"blockType": "code"
			},
			{
				"placeholder": "Add option",
				"id": "4502a4e5-670d-4faf-9efd-50c038aff727",
				"blockType": "code",
				"value": "push",
				"type": "radio"
			},
			{
				"id": "70f89332-66b6-4b90-be4a-bf680d15654c",
				"value": "concat",
				"blockType": "code",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "1514eab3-6cbd-4ee4-a324-03092dd228ee",
				"value": "every",
				"blockType": "code",
				"type": "radio"
			},
			{
				"blockType": "code",
				"type": "radio",
				"value": "splice",
				"placeholder": "Add option",
				"id": "c2908c6c-706f-476a-a2d7-7e9e7f6a4c47"
			},
			{
				"value": "slice",
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"id": "e28c2bb4-dd28-4923-8748-401c0c947972"
			},
			{
				"type": "radio",
				"value": "filter",
				"blockType": "code",
				"id": "b170c38e-9c9d-4153-bd8b-2e5408995918",
				"placeholder": "Add option"
			},
			{
				"value": "pop",
				"placeholder": "Add option",
				"id": "e65c780c-7137-484c-8941-713dd2fb4814",
				"blockType": "code",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "42d40fdf-7325-46f6-89d8-5a060ff3ac50",
				"blockType": "code",
				"value": "some"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "forEach",
				"id": "bf210622-73be-49dc-90ab-5d15a17bada2",
				"blockType": "code"
			},
			{
				"type": "radio",
				"value": "sort",
				"blockType": "code",
				"placeholder": "Add option",
				"id": "386d2446-6761-4024-8be3-024656047376"
			},
			{
				"id": "6891b5cf-0b2a-4e6d-ad40-64bb84a4c432",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code",
				"value": "reverse"
			},
			{
				"placeholder": "Add option",
				"value": "unshift",
				"id": "471b651f-8551-49f8-8323-0b34edd10a2e",
				"blockType": "code",
				"type": "radio"
			}
		],
		"openingTime": 1663064714368
	},
	{
		"question": "In HTML, image and text are often together created, what tags are used when they are related?",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "id": "db1d4d07-16ed-4031-8fe4-b5f502063844", "value": "radio" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{ "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c", "value": "^" },
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{ "id": "04cfe937-2a1c-4e21-adf4-949835c0d764", "value": "try" },
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{ "value": "throw", "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3" },
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"value": ".map doesn’t run when the array is empty",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c",
				"value": "It builds confidence in your code because you can run it whenever you make changes in code"
			},
			{
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"value": "Lifting state up"
			},
			{
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"value": "accent-color"
			},
			{ "id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4", "value": "jsx" },
			{
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}",
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506"
			},
			{
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}",
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			},
			{
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace",
				"value": "when the screen is 991px wide"
			},
			{
				"value": "when the screen is smaller than 992px",
				"id": "eb0405f2-613b-428f-93bb-be609586738c"
			},
			{
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca",
				"value": ":not(:last-child)"
			},
			{
				"value": "React portals",
				"id": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2"
			},
			{
				"value": "With the :`has()` selector",
				"id": "a76318ad-a518-4db0-a980-216553a8253f"
			},
			{ "value": "<>", "id": "5733b807-72f9-434c-b2c7-476930754ec9" },
			{
				"id": "4502a4e5-670d-4faf-9efd-50c038aff727",
				"value": "<figure> and <figcaption>"
			}
		],
		"id": "1485f0f7-0f44-4c34-86dc-c0418d0a7c3d",
		"openingTime": 1667207275272,
		"codeBlock": "",
		"category": "html",
		"type": "radio",
		"pollNumber": 99,
		"answers": [
			{
				"type": "radio",
				"value": "<img> and <p>",
				"id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "5f06a23d-8275-4570-82d6-e4007a3e87cf",
				"blockType": "text",
				"type": "radio",
				"value": "<picture> and <p>",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "<figure> and <figcaption>",
				"id": "4502a4e5-670d-4faf-9efd-50c038aff727",
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "<img> and <summary>",
				"id": "70f89332-66b6-4b90-be4a-bf680d15654c",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "<img> and <span>",
				"type": "radio",
				"id": "1514eab3-6cbd-4ee4-a324-03092dd228ee",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "c2908c6c-706f-476a-a2d7-7e9e7f6a4c47",
				"type": "radio",
				"placeholder": "Add option",
				"value": "<img> and <details>"
			}
		],
		"voted": [],
		"status": "closed"
	},
	{
		"question": "In CSS, invalid code is all around, what will the browser do when invalid code is found?",
		"status": "closed",
		"codeBlock": "",
		"openingTime": 1669281269503,
		"category": "css",
		"answers": [
			{
				"id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "It does nothing and happily moves on to your next CSS code",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "5f06a23d-8275-4570-82d6-e4007a3e87cf",
				"value": "It will crash and throw an error what and where the mistake has been made",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"id": "4502a4e5-670d-4faf-9efd-50c038aff727",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "It will revert back the page to the default browser styles"
			},
			{
				"id": "70f89332-66b6-4b90-be4a-bf680d15654c",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"value": "Guess the nearest correct value and apply that ",
				"placeholder": "Add option"
			},
			{
				"value": "CSS easter eggs will popup",
				"id": "1514eab3-6cbd-4ee4-a324-03092dd228ee",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option",
				"id": "c2908c6c-706f-476a-a2d7-7e9e7f6a4c47",
				"value": "The element with the applied faulty styles will automatically be hidden with display none to prevent more damage of erronous styling"
			},
			{
				"type": "radio",
				"id": "426276dc-9b5c-4781-a5f6-bf4fc9b37c36",
				"value": "After too many errors, the W3C might contact you with the fact that your CSS certificate might be withdrawn",
				"placeholder": "Add option",
				"autoFocus": true,
				"blockType": "text"
			}
		],
		"type": "checkbox",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "id": "db1d4d07-16ed-4031-8fe4-b5f502063844", "value": "radio" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{ "value": "^", "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c" },
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{ "value": "try", "id": "04cfe937-2a1c-4e21-adf4-949835c0d764" },
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{ "value": "throw", "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3" },
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"value": ".map doesn’t run when the array is empty",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"value": "Lifting state up",
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"value": "accent-color",
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{ "value": "jsx", "id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4" },
			{
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506",
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}"
			},
			{
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}"
			},
			{
				"value": "when the screen is 991px wide",
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace"
			},
			{
				"value": "when the screen is smaller than 992px",
				"id": "eb0405f2-613b-428f-93bb-be609586738c"
			},
			{
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca",
				"value": ":not(:last-child)"
			},
			{
				"id": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2",
				"value": "React portals"
			},
			{
				"value": "With the :`has()` selector",
				"id": "a76318ad-a518-4db0-a980-216553a8253f"
			},
			{ "id": "5733b807-72f9-434c-b2c7-476930754ec9", "value": "<>" },
			{
				"id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9",
				"value": "Happily render your CSS and leave the faulty code"
			},
			{
				"value": "It will revert back the page to the default browser styles",
				"id": "4502a4e5-670d-4faf-9efd-50c038aff727"
			}
		],
		"codeSandboxExample": "",
		"pollNumber": 98,
		"id": "8ca28ebb-1982-4d3e-994f-52283d2bba0e",
		"voted": []
	},
	{
		"voted": [],
		"pollNumber": 97,
		"status": "closed",
		"id": "0cacbb6c-68e6-4411-93d8-02a47a812e01",
		"question": "In HTML, alt tags provide descriptions of an image you know It well, what is a valid reason to leave it blank, can you tell?",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "value": "color", "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{ "value": "^", "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c" },
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{ "id": "04cfe937-2a1c-4e21-adf4-949835c0d764", "value": "try" },
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{ "value": "throw", "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3" },
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"value": "When you have heavy computations doing the same thing "
			},
			{
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b",
				"value": "Nothing: You can perfectly do this request"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"value": "Lifting state up",
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"value": "accent-color",
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{ "id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4", "value": "jsx" },
			{
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}",
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506"
			},
			{
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}",
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			},
			{
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace",
				"value": "when the screen is 991px wide"
			},
			{
				"id": "eb0405f2-613b-428f-93bb-be609586738c",
				"value": "when the screen is smaller than 992px"
			},
			{
				"value": ":not(:last-child)",
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca"
			},
			{
				"value": "React portals",
				"id": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2"
			},
			{
				"value": "With the :`has()` selector",
				"id": "a76318ad-a518-4db0-a980-216553a8253f"
			},
			{ "id": "5733b807-72f9-434c-b2c7-476930754ec9", "value": "<>" },
			{
				"value": "When the image is purely decorative",
				"id": "1514eab3-6cbd-4ee4-a324-03092dd228ee"
			}
		],
		"category": "html",
		"answers": [
			{
				"blockType": "text",
				"id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9",
				"value": "It should always be filled in ",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "When the backend is not done yet or didn’t provide an alt text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "5f06a23d-8275-4570-82d6-e4007a3e87cf",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "When the content marketeer forgot or decided to leave the image alt text from within the CMS empty ",
				"placeholder": "Add option",
				"id": "4502a4e5-670d-4faf-9efd-50c038aff727"
			},
			{
				"blockType": "text",
				"id": "70f89332-66b6-4b90-be4a-bf680d15654c",
				"type": "radio",
				"placeholder": "Add option",
				"value": "When you don’t have to focus on accessibilty"
			},
			{
				"blockType": "text",
				"value": "When the image is purely decorative",
				"placeholder": "Add option",
				"type": "radio",
				"id": "1514eab3-6cbd-4ee4-a324-03092dd228ee"
			},
			{
				"id": "c2908c6c-706f-476a-a2d7-7e9e7f6a4c47",
				"value": "When you lack an idea for an alt text (also applicable to variable naming)",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "When there is a <p> describing the image",
				"id": "751bcbd0-0332-41bb-981f-df74c1208fd3"
			}
		],
		"codeBlock": "",
		"type": "radio",
		"openingTime": 1665860373589
	},
	{
		"openingTime": 1665860397470,
		"status": "closed",
		"category": "react",
		"voted": [],
		"pollNumber": 96,
		"codeBlock": "",
		"id": "27258d62-08d9-47fd-8faa-19f0e09d0b4e",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "id": "db1d4d07-16ed-4031-8fe4-b5f502063844", "value": "radio" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{ "value": "^", "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c" },
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{ "id": "04cfe937-2a1c-4e21-adf4-949835c0d764", "value": "try" },
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{ "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3", "value": "throw" },
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"value": "When you have heavy computations doing the same thing "
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c",
				"value": "It builds confidence in your code because you can run it whenever you make changes in code"
			},
			{
				"value": "Lifting state up",
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"value": "accent-color"
			},
			{ "value": "jsx", "id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4" },
			{
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}",
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506"
			},
			{
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}"
			},
			{
				"value": "when the screen is 991px wide",
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace"
			},
			{
				"id": "eb0405f2-613b-428f-93bb-be609586738c",
				"value": "when the screen is smaller than 992px"
			},
			{
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca",
				"value": ":not(:last-child)"
			},
			{
				"value": "React portals",
				"id": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2"
			},
			{
				"id": "a76318ad-a518-4db0-a980-216553a8253f",
				"value": "With the :`has()` selector"
			},
			{
				"id": "70f89332-66b6-4b90-be4a-bf680d15654c",
				"value": "You need an HTML tag "
			},
			{
				"value": "<Fragment>",
				"id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9"
			},
			{ "value": "<>", "id": "5733b807-72f9-434c-b2c7-476930754ec9" }
		],
		"type": "checkbox",
		"answers": [
			{
				"type": "radio",
				"value": "<Fragola>",
				"placeholder": "Add option",
				"id": "6f3b895a-289c-435d-801e-4a55c28529fe",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "5733b807-72f9-434c-b2c7-476930754ec9",
				"placeholder": "Add option",
				"value": "<>"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "1a19c3a2-a940-409e-b3cd-7031eada3352",
				"value": "<Family>",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "<Fragile>",
				"placeholder": "Add option",
				"id": "d0df44e6-b525-4e82-a91f-68da9af43d13"
			},
			{
				"value": "<..>",
				"blockType": "text",
				"id": "e36ab87a-b232-407c-afe3-3991d4a1b98e",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "<Wrapper>",
				"id": "85a40e79-268e-4781-8274-8bfb24b2d9db",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "<Frag>",
				"blockType": "text",
				"type": "radio",
				"id": "0d710981-1d53-40ea-88a5-8ecdc61e9039"
			},
			{
				"blockType": "text",
				"id": "6ad551c9-bc17-4a10-90e2-ba543b26e4f1",
				"value": "<Fragrance>",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "a36f1286-57a5-4027-aa89-b2b7f594e2d9",
				"type": "radio",
				"value": "<Fragment>"
			},
			{
				"id": "5f06a23d-8275-4570-82d6-e4007a3e87cf",
				"value": "Sibling elements don’t need to be wrapped",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "4502a4e5-670d-4faf-9efd-50c038aff727",
				"value": "<Group>",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "70f89332-66b6-4b90-be4a-bf680d15654c",
				"value": "You need an HTML tag "
			}
		],
		"question": "In React, sibling elements need to be wrapped, how can you do this and make your code scrapped?"
	},
	{
		"status": "closed",
		"id": "7b5df81b-b8c8-4470-910f-adb0443cbc88",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "value": "<dbz>", "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{ "value": "^", "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c" },
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{ "id": "04cfe937-2a1c-4e21-adf4-949835c0d764", "value": "try" },
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{ "value": "throw", "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3" },
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"value": "When you have heavy computations doing the same thing "
			},
			{
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b",
				"value": "Nothing: You can perfectly do this request"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"value": "Lifting state up"
			},
			{
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"value": "accent-color"
			},
			{ "value": "jsx", "id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4" },
			{
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}",
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506"
			},
			{
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}",
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			},
			{
				"value": "when the screen is 991px wide",
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace"
			},
			{
				"value": "when the screen is smaller than 992px",
				"id": "eb0405f2-613b-428f-93bb-be609586738c"
			},
			{
				"value": ":not(:last-child)",
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca"
			},
			{
				"value": "React portals",
				"id": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2"
			},
			{
				"id": "a76318ad-a518-4db0-a980-216553a8253f",
				"value": "With the :`has()` selector"
			},
			{
				"id": "6f3b895a-289c-435d-801e-4a55c28529fe",
				"value": "It doesn’t render, you need the `return`statement"
			}
		],
		"type": "radio",
		"codeBlock": "const Heading = () => {\n   <ul></ul>\n}",
		"question": "In React, the following code can be seen, why will it not render anything on the screen? ",
		"category": "react",
		"voted": [],
		"openingTime": null,
		"answers": [
			{
				"type": "radio",
				"id": "6f3b895a-289c-435d-801e-4a55c28529fe",
				"blockType": "text",
				"value": "It doesn’t render, you need the `return`statement",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "5733b807-72f9-434c-b2c7-476930754ec9",
				"type": "radio",
				"value": "It does render, this is implicit return",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "1a19c3a2-a940-409e-b3cd-7031eada3352",
				"blockType": "text",
				"type": "radio",
				"value": "It doesn’t render because a render function is required"
			},
			{
				"placeholder": "Add option",
				"id": "d0df44e6-b525-4e82-a91f-68da9af43d13",
				"blockType": "text",
				"value": "It doesn’t render because the JSX element is empty",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "It does’t render because it is not wrapped in a fragment",
				"id": "e36ab87a-b232-407c-afe3-3991d4a1b98e",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It doesn’t render because custom components need to explicitly render “children“",
				"id": "85a40e79-268e-4781-8274-8bfb24b2d9db"
			},
			{
				"blockType": "text",
				"id": "0d710981-1d53-40ea-88a5-8ecdc61e9039",
				"type": "radio",
				"value": "It does render because also empty JSX tags render",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "6ad551c9-bc17-4a10-90e2-ba543b26e4f1",
				"value": "It doesn’t render because it has no props"
			}
		],
		"pollNumber": 95
	},
	{
		"voted": [],
		"pollNumber": 94,
		"id": "2d83bcf5-56dc-4de5-8ed7-495418c82f1f",
		"codeBlock": "",
		"openingTime": 1663579990982,
		"category": "css",
		"correctAnswers": [
			{
				"id": "a76318ad-a518-4db0-a980-216553a8253f",
				"value": "With the `:has()` selector"
			}
		],
		"answers": [
			{
				"blockType": "text",
				"id": "a76318ad-a518-4db0-a980-216553a8253f",
				"type": "radio",
				"placeholder": "Add option",
				"value": "With the `:has()` selector"
			},
			{
				"placeholder": "Add option",
				"value": "Only possible when using SASS",
				"blockType": "text",
				"id": "f7872e01-b193-44df-af93-5737663c3cea",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "With the `:is()` selector",
				"id": "6a325d2d-2892-4a17-9b28-409cbede9dda",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "With the `:parent()` selector",
				"id": "31667a5b-1800-4029-a6e3-cf8415f9db1b"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "6f3b895a-289c-435d-801e-4a55c28529fe",
				"placeholder": "Add option",
				"value": "With the `<` parent combinator"
			},
			{
				"placeholder": "Add option",
				"value": "JS in at least required for this",
				"id": "5733b807-72f9-434c-b2c7-476930754ec9",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "1a19c3a2-a940-409e-b3cd-7031eada3352",
				"type": "radio",
				"placeholder": "Add option",
				"value": "With the lobotomized owl * + * selector"
			}
		],
		"status": "closed",
		"question": "In CSS, selecting parent elements from within a child is something we all plead, now with what syntax can we achieve this need? ",
		"type": "radio"
	},
	{
		"codeBlock": "",
		"id": "9829fa76-c160-467e-9fcf-86a3780ba658",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "value": "color", "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{ "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c", "value": "^" },
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{ "id": "04cfe937-2a1c-4e21-adf4-949835c0d764", "value": "try" },
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{ "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3", "value": "throw" },
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"value": ".map doesn’t run when the array is empty",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"value": "Lifting state up"
			},
			{
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"value": "accent-color"
			},
			{ "value": "jsx", "id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4" },
			{
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}",
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506"
			},
			{
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}",
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			},
			{
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace",
				"value": "when the screen is 991px wide"
			},
			{
				"value": "when the screen is smaller than 992px",
				"id": "eb0405f2-613b-428f-93bb-be609586738c"
			},
			{
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca",
				"value": ":not(:last-child)"
			},
			{
				"id": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2",
				"value": "React portals"
			}
		],
		"openingTime": 1664437864662,
		"answers": [
			{
				"value": "By having a well-thought of z-index system from the start ",
				"id": "ee6f4eb7-eefa-4e03-b4af-bb17ba720893",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "code",
				"id": "088a9051-a7ac-47fb-ae24-12273b1822db",
				"placeholder": "Add option",
				"value": "z-index: 999999 !important",
				"type": "radio"
			},
			{
				"value": "findDomNode",
				"id": "2212308e-b29a-4462-8923-eef9504007a4",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "Microfrontends",
				"type": "radio",
				"placeholder": "Add option",
				"id": "88a1b79b-5872-4875-a1b8-ace934d1e7b4"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "React refs",
				"id": "86ee6730-ab47-4642-85e0-24cb617708f9"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "fbe9594e-d27d-468c-83b7-90a6b2da7c6c",
				"blockType": "text",
				"value": "Controlling z-indexes from your react component with css in js or style tags"
			},
			{
				"blockType": "text",
				"value": "React Context",
				"id": "34cf86e6-a785-44af-b932-15c2c1e4408d",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "42b6a798-3c7e-4eb8-8e50-1c0ed98ebbd2",
				"value": "React portals"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "9e8935b8-0645-4be3-9585-70266456ba92",
				"value": "By passing an optional parameter at mount in useEffect to render the component somewhere in the tree",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "c6c924e2-7b5b-4568-919b-0ee87ce1b40f",
				"type": "radio",
				"blockType": "text",
				"value": "By using position absolute for every component you create so layering can be controlled per component"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "a086288b-981f-4dcb-b7c4-9ddd4385dfd4",
				"value": "By using CSS flexbox order property",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Believe it or not, but this is sadly still a web limititation: in CSS4 there will be a property `stacking-order` for it",
				"id": "f53be365-3997-4b00-8910-51d77aeb9f13"
			},
			{
				"id": "a76318ad-a518-4db0-a980-216553a8253f",
				"placeholder": "Add option",
				"type": "radio",
				"value": "React Suspense",
				"blockType": "text"
			}
		],
		"category": "react",
		"type": "radio",
		"pollNumber": 93,
		"voted": [],
		"status": "closed",
		"question": "In React, having different stacking contexts can be complex and cause confusion, in what way can we control stacking contexts which would be a solution?"
	},
	{
		"type": "radio",
		"question": "In React, development goes rapid, synthetic events are built-in, do you know why they are added?",
		"answers": [
			{
				"type": "radio",
				"value": "It’s just something that comes with React: The React team wanted to reinvent the wheel and be “the” modern framework because they believe the web can do better. They created their own DOM API, with features like: jsx, components, app generator (create-react-app), lifecycles and Synthetic Events",
				"id": "ee6f4eb7-eefa-4e03-b4af-bb17ba720893",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "088a9051-a7ac-47fb-ae24-12273b1822db",
				"type": "radio",
				"placeholder": "Add option",
				"value": "To expand on the default browser event system with custom events the React team came with like onInput or onBrowserClose"
			},
			{
				"id": "2212308e-b29a-4462-8923-eef9504007a4",
				"blockType": "text",
				"value": "To overcome browser inconsistencies",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "88a1b79b-5872-4875-a1b8-ace934d1e7b4",
				"value": "They are more performant than default DOM events",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"value": "They are actually “fake” events to use as mocks in your tests with react testing library (hence “synthetic”)",
				"placeholder": "Add option",
				"type": "radio",
				"id": "86ee6730-ab47-4642-85e0-24cb617708f9"
			},
			{
				"placeholder": "Add option",
				"value": "Synthetic events are a wrapper around native events only used in development to prevent firing native DOM events in development. Synthetic events allows for some features in debugging to which makes it much more easy and efficient",
				"blockType": "text",
				"id": "fbe9594e-d27d-468c-83b7-90a6b2da7c6c",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "34cf86e6-a785-44af-b932-15c2c1e4408d",
				"value": "Synthetic events was just the name of a React Amsterdam conference back in 2017 because the conference was in the light of “artificial intelligence” talks with React. As merchandise they also gave away syntethic t-shirts and a blue synthetic React bag, which made the reference",
				"type": "radio"
			}
		],
		"id": "a3c7bb28-ad2b-4085-beec-f399f4324ab9",
		"correctAnswers": [
			{
				"value": "To overcome browser inconsistencies",
				"id": "2212308e-b29a-4462-8923-eef9504007a4"
			},
			{
				"value": "They are more performant than default DOM events",
				"id": "88a1b79b-5872-4875-a1b8-ace934d1e7b4"
			}
		],
		"openingTime": 1663229990982,
		"voted": [],
		"codeBlock": "",
		"category": "react",
		"pollNumber": 92,
		"status": "closed"
	},
	{
		"codeBlock": "",
		"pollNumber": 91,
		"id": "1bfeb8d2-6f2d-4182-96ba-f9710e56b9b7",
		"openingTime": null,
		"status": "closed",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "value": "color", "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "id": "db1d4d07-16ed-4031-8fe4-b5f502063844", "value": "radio" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{ "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c", "value": "^" },
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{ "id": "04cfe937-2a1c-4e21-adf4-949835c0d764", "value": "try" },
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{ "value": "throw", "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3" },
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"value": "When you have heavy computations doing the same thing "
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"value": "Lifting state up",
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"value": "accent-color"
			},
			{ "id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4", "value": "jsx" },
			{
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}",
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506"
			},
			{
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}",
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			},
			{
				"value": "when the screen is 991px wide",
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace"
			},
			{
				"value": "when the screen is smaller than 992px",
				"id": "eb0405f2-613b-428f-93bb-be609586738c"
			},
			{
				"value": ":not(:last-child)",
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca"
			}
		],
		"category": "css",
		"type": "radio",
		"answers": [
			{
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": ":not(:last-child)"
			},
			{
				"blockType": "text",
				"value": ":where:not(:last-child)",
				"id": "394511ae-6620-4b55-be17-6cc05c778740",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"id": "3e42411d-4f7e-4073-a00b-973ac6b7be2e",
				"blockType": "text",
				"type": "radio",
				"value": ":where:is:not(:last-child)",
				"placeholder": "Add option"
			},
			{
				"id": "1c774d1e-3211-421b-a149-466b4ad9946e",
				"blockType": "text",
				"type": "radio",
				"value": "::but(:last-child)",
				"placeholder": "Add option"
			},
			{
				"id": "d3523a73-1dc9-4fea-923e-d1a542e0772c",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "::before:last-child"
			},
			{
				"blockType": "text",
				"value": "::after:second-last-child",
				"type": "radio",
				"id": "ff3f9837-34c4-4be2-a061-e5567d55e358",
				"placeholder": "Add option"
			},
			{
				"id": "089d5012-6d9c-458b-963d-e1fa75469b73",
				"type": "radio",
				"placeholder": "Add option",
				"value": ":not(::tail)",
				"blockType": "text"
			},
			{
				"id": "3ad72993-de69-4569-97a9-77c0dc86bd90",
				"value": "::last",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"id": "8678357c-b6be-4336-90cf-96405ced6087",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": ":is:not(:last-child)"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "It’s not possible with psuedo classes and it’s therefore mandatory to add a “.last” class to the last element and then style it",
				"blockType": "text",
				"id": "ee6f4eb7-eefa-4e03-b4af-bb17ba720893"
			}
		],
		"question": "In CSS, there is a psuedo class combo to prevent elements from being selected, now how do you select all list items but leave the last one unaffected?",
		"voted": []
	},
	{
		"answers": [
			{
				"blockType": "text",
				"value": "CSS code is atleast required for a simple tooltip",
				"placeholder": "Add option",
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca",
				"type": "radio"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "JS code is atleast required for a simple tooltip",
				"placeholder": "Add option",
				"id": "394511ae-6620-4b55-be17-6cc05c778740"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "3e42411d-4f7e-4073-a00b-973ac6b7be2e",
				"blockType": "text",
				"value": "With bootstrap or any kind of CSS framework is required for a tooltip"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "1c774d1e-3211-421b-a149-466b4ad9946e",
				"value": "With an attribute applied on an element called “title” ",
				"placeholder": "Add option"
			},
			{
				"value": "With the psuedo element ::tooltip",
				"type": "radio",
				"blockType": "text",
				"id": "d3523a73-1dc9-4fea-923e-d1a542e0772c",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "With the <tooltip> element",
				"id": "ff3f9837-34c4-4be2-a061-e5567d55e358"
			}
		],
		"pollNumber": 90,
		"voted": [],
		"codeBlock": "",
		"question": "In HTML, tooltips are often seen in a user interface, what is required to create the simplest tooltip in this case?",
		"type": "radio",
		"id": "d32e4d8e-07c9-49d7-8a95-a68abfab8e6e",
		"status": "closed",
		"openingTime": 1662706464970,
		"category": "html",
		"correctAnswers": [
			{
				"value": "With an attribute applied on an element called “title” ",
				"id": "1c774d1e-3211-421b-a149-466b4ad9946e"
			}
		]
	},
	{
		"codeSandboxExample": "",
		"status": "new",
		"openingTime": null,
		"question": "In CSS, media queries helps you deliver styles for each screen device, now when will this background-color change to peachpuff to be precise? ",
		"codeBlock": "body {\n   background-color: papayawhip\n}\n\n@media screen and (max-width: 992px) { \n\tbody { \n\t\tbackground-color: peachpuff\n\t}  \n};\n",
		"pollNumber": 89,
		"answers": [
			{
				"autoFocus": false,
				"value": "when the screen is 993px wide ",
				"blockType": "text",
				"type": "radio",
				"id": "5195293c-dce4-430c-941b-3b79453255e8",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "only on screens which are exactly 991px wide",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "6ea5764c-64b0-448c-9a5c-1deb64b32e38",
				"blockType": "text"
			},
			{
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace",
				"value": "when the screen is 991px wide",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"id": "eb0405f2-613b-428f-93bb-be609586738c",
				"value": "when the screen is equal and smaller than 992px",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "only on screens which are exactly 992px wide",
				"id": "21375381-d724-4bf6-8f4a-8c715a8248ca"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"id": "31b97667-3089-4b75-bdf6-a6f593399bab",
				"value": "When the screen is 465px wide",
				"placeholder": "Add option"
			}
		],
		"voted": [],
		"category": "css",
		"type": "checkbox",
		"id": "b30f6f4f-541c-4cc0-95bc-df8d7fca1d2a",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "value": "<dbz>", "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "value": "color", "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "id": "db1d4d07-16ed-4031-8fe4-b5f502063844", "value": "radio" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{ "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c", "value": "^" },
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{ "value": "try", "id": "04cfe937-2a1c-4e21-adf4-949835c0d764" },
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{ "value": "throw", "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3" },
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"value": ".map doesn’t run when the array is empty",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62"
			},
			{
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"value": "When you have heavy computations doing the same thing "
			},
			{
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b",
				"value": "Nothing: You can perfectly do this request"
			},
			{
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c",
				"value": "It builds confidence in your code because you can run it whenever you make changes in code"
			},
			{
				"value": "Lifting state up",
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"value": "accent-color",
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{ "value": "jsx", "id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4" },
			{
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506",
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}"
			},
			{
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}",
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			},
			{
				"value": "when the screen is 991px wide",
				"id": "fd61dea8-1af4-42e5-851a-55c2c75c9ace"
			},
			{
				"id": "eb0405f2-613b-428f-93bb-be609586738c",
				"value": "when the screen is smaller than 992px"
			},
			{
				"id": "166645f8-d2fd-415b-b7ca-3a7ace480b36",
				"value": "when the screen is 992px wide "
			},
			{
				"id": "31b97667-3089-4b75-bdf6-a6f593399bab",
				"value": "When the screen is 465px wide"
			}
		]
	},
	{
		"codeBlock": "",
		"category": "css",
		"question": "CSS has many tools upon it's sleeve but doesn't contain types, however useful it may sound for sure, what can you use to create an effect of stripes?\n",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{ "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c", "value": "^" },
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{ "id": "04cfe937-2a1c-4e21-adf4-949835c0d764", "value": "try" },
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{ "value": "throw", "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3" },
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"value": ".map doesn’t run when the array is empty",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c",
				"value": "It builds confidence in your code because you can run it whenever you make changes in code"
			},
			{
				"value": "Lifting state up",
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"value": "accent-color",
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{ "value": "jsx", "id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4" },
			{
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506",
				"value": "div:nth-child(even) {\n    background-color: #f2f2f2\n}"
			},
			{
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"value": "div:nth-child(odd) {\n    background-color: #f2f2f2\n}"
			},
			{
				"id": "88b5cd72-295b-48ac-bf5a-670d119fac1b",
				"value": "By slicing backgrounds in tools like photoshop and use background-repeat to put all backgrounds together"
			}
		],
		"openingTime": 1671526112359,
		"pollNumber": 88,
		"answers": [
			{
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"value": "With a repeating-linear-gradient",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "code",
				"autoFocus": false,
				"value": "div:nth-child(odd) {\n    background-color: black\n}\n\ndiv:nth-child(even) {\n    background-color: white\n}",
				"type": "radio",
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			},
			{
				"placeholder": "Add option",
				"id": "166645f8-d2fd-415b-b7ca-3a7ace480b36",
				"value": "Just use a table tag, it will have that effect automatically",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "code",
				"placeholder": "Add option",
				"id": "39e67c3d-86b0-4d0c-9f4f-cd93a9625794",
				"value": "div { @apply var(--zebra) }",
				"autoFocus": false
			},
			{
				"blockType": "code",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "5195293c-dce4-430c-941b-3b79453255e8",
				"value": "div:odd-child { background-color: black}"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "88b5cd72-295b-48ac-bf5a-670d119fac1b",
				"blockType": "text",
				"value": "By slicing backgrounds in tools like photoshop and use background-repeat to put all backgrounds together",
				"autoFocus": true
			}
		],
		"status": "new",
		"voted": [
			{
				"answerId": "6bfaf8dd-fbbd-4014-9a32-38c06263c506",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"answerId": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"answerId": "88b5cd72-295b-48ac-bf5a-670d119fac1b",
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			},
			{
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1",
				"answerId": "6bfaf8dd-fbbd-4014-9a32-38c06263c506"
			},
			{
				"answerId": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "6bfaf8dd-fbbd-4014-9a32-38c06263c506"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "6bfaf8dd-fbbd-4014-9a32-38c06263c506"
			},
			{
				"answerId": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2"
			},
			{
				"answerId": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2"
			},
			{
				"answerId": "5195293c-dce4-430c-941b-3b79453255e8",
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2"
			},
			{
				"userId": "8d5n92IZsOMbZtnfoEgMhjFF8C63",
				"answerId": "6bfaf8dd-fbbd-4014-9a32-38c06263c506"
			},
			{
				"userId": "8d5n92IZsOMbZtnfoEgMhjFF8C63",
				"answerId": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			},
			{
				"userId": "8d5n92IZsOMbZtnfoEgMhjFF8C63",
				"answerId": "88b5cd72-295b-48ac-bf5a-670d119fac1b"
			},
			{
				"answerId": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292",
				"answerId": "6bfaf8dd-fbbd-4014-9a32-38c06263c506"
			},
			{
				"answerId": "6bfaf8dd-fbbd-4014-9a32-38c06263c506",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62",
				"answerId": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			},
			{
				"answerId": "5195293c-dce4-430c-941b-3b79453255e8",
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62"
			},
			{
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2",
				"answerId": "fa3ec186-bf05-454a-8220-9e00938fae7b"
			},
			{
				"answerId": "6bfaf8dd-fbbd-4014-9a32-38c06263c506",
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2"
			}
		],
		"codeSandboxExample": "",
		"id": "7ff3d89a-1a67-4d02-b79b-40c2b79fbe36",
		"type": "checkbox"
	},
	{
		"answers": [
			{
				"placeholder": "Add option",
				"id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4",
				"type": "radio",
				"blockType": "code",
				"value": "onClick={handleClick} check"
			},
			{
				"blockType": "code",
				"type": "radio",
				"placeholder": "Add option",
				"id": "da93489a-4e9c-415a-979a-8da8851c6a78",
				"value": "onClick={handleClick(e)}"
			},
			{
				"id": "1e2f5025-752f-4cab-a52b-8ac75b0d4059",
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"value": "click(function(e) {})"
			},
			{
				"type": "radio",
				"blockType": "code",
				"value": "onclick={(e) ⇒ handleClick(e)}",
				"id": "66b6fc7b-cda2-44c3-be4e-809739720545",
				"placeholder": "Add option"
			},
			{
				"value": "onClick={handleClick.bind(e)}",
				"placeholder": "Add option",
				"blockType": "code",
				"id": "6bfaf8dd-fbbd-4014-9a32-38c06263c506",
				"type": "radio"
			},
			{
				"blockType": "code",
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"placeholder": "Add option",
				"type": "radio",
				"value": "onClick={(e) ⇒ handleClick(e)}"
			}
		],
		"openingTime": null,
		"status": "new",
		"category": "react",
		"voted": [],
		"codeBlock": "",
		"type": "checkbox",
		"pollNumber": 87,
		"id": "d10cccce-1c3f-492f-b98d-dcd5ead53331",
		"question": "Various answers are listed and you have just one to pick, in React, how can you pass event arguments with an on click? ",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "id": "db1d4d07-16ed-4031-8fe4-b5f502063844", "value": "radio" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{ "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c", "value": "^" },
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{ "id": "04cfe937-2a1c-4e21-adf4-949835c0d764", "value": "try" },
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{ "value": "throw", "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3" },
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"value": "Lifting state up"
			},
			{
				"value": "accent-color",
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{ "value": "jsx", "id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4" },
			{
				"id": "fa3ec186-bf05-454a-8220-9e00938fae7b",
				"value": "onClick={(e) ⇒ handleClick(e)}"
			}
		]
	},
	{
		"id": "2825169a-8ff3-4e85-b180-144dfe949fe1",
		"question": "In React, markup and JS is what you apply, what is the name of the syntax that renders UI?",
		"voted": [],
		"codeBlock": "",
		"answers": [
			{
				"placeholder": "Add option",
				"id": "e1b685bc-4167-4d70-a308-1cc61b9f60ef",
				"value": "tsx",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "HTML",
				"id": "91314ced-3e7f-476b-93f7-c3b52e364be2",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "elements",
				"id": "10a2baee-5df3-4076-b928-83b799d79411",
				"type": "radio",
				"blockType": "text"
			},
			{
				"id": "5e8a699f-cec6-496b-a5aa-41c6498078af",
				"value": "components",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "fragments",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "0f1ea07c-68ff-4586-a7ba-4cc6bd7cdd11"
			},
			{
				"id": "4ad60bfa-c521-4944-b29a-c9a14fcffc67",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "synthetic HTML"
			},
			{
				"placeholder": "Add option",
				"value": "strings",
				"blockType": "text",
				"id": "8ce7a62e-757c-4f60-9f8d-3050d033159e",
				"type": "radio"
			},
			{
				"id": "2f123b31-3617-4e5c-89cd-13ed06c15359",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "XML"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "1fbd9309-e03e-4f11-b107-cca12c51ad98",
				"value": "jQuery"
			},
			{
				"id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4",
				"value": "jsx",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "da93489a-4e9c-415a-979a-8da8851c6a78",
				"value": "Virtual DOM elements",
				"blockType": "text"
			}
		],
		"pollNumber": 86,
		"correctAnswers": [
			{ "value": "jsx", "id": "4cea1053-afcb-4661-844f-8ed4ed3a3af4" }
		],
		"status": "closed",
		"type": "radio",
		"category": "react",
		"openingTime": 1662970082474
	},
	{
		"type": "radio",
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "accent-color",
				"type": "radio",
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "b76fb707-c575-4684-b3ff-9d3a51cf829c",
				"value": "form-color",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "background-color",
				"id": "04f74bd2-de8b-4190-a52c-f4298e30acb0"
			},
			{
				"id": "31b4db08-5352-47af-a76a-a9797d2c9d5a",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "color"
			},
			{
				"type": "radio",
				"value": "CSS variables",
				"id": "b9e9ecde-f0cd-48ec-8d00-f1c73096b28e",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "e44f90fe-5787-4422-9889-72ed874c7717",
				"placeholder": "Add option",
				"value": "It's a SASS mixin",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "e1b685bc-4167-4d70-a308-1cc61b9f60ef",
				"value": "ui-color",
				"placeholder": "Add option"
			}
		],
		"codeBlock": "",
		"pollNumber": 85,
		"id": "b09135d6-f2dc-45a0-b821-1b4f73ec9e1e",
		"voted": [],
		"question": "In CSS, UI controls are mostly hard to style, now what is the name of the CSS property that eases styling UI controls and make you smile? ",
		"status": "closed",
		"openingTime": 1664178549610,
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "id": "db1d4d07-16ed-4031-8fe4-b5f502063844", "value": "radio" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{ "value": "^", "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c" },
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{ "value": "try", "id": "04cfe937-2a1c-4e21-adf4-949835c0d764" },
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{ "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3", "value": "throw" },
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c"
			},
			{
				"value": "Lifting state up",
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747",
				"value": "accent-color"
			}
		],
		"category": "css"
	},
	{
		"openingTime": 1663919646053,
		"codeBlock": "",
		"answers": [
			{
				"value": "Redux ",
				"type": "radio",
				"id": "185d717e-5336-4020-a92e-d949bf26f8e2",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "Context",
				"id": "e603b6e0-78de-46b9-a341-cf73fc06451e",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "Lifting state up",
				"placeholder": "Add option",
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "44124c59-24e4-4742-ae6e-4a5aa37dd592",
				"blockType": "text",
				"value": "LocalStorage"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "Hooks",
				"id": "090bfeb2-f91b-42fb-a50b-19ded47dbe63",
				"placeholder": "Add option"
			},
			{
				"id": "1af4fbc6-916c-45f6-83b7-f81a156804b3",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Firebase"
			},
			{
				"id": "3a72fc48-3823-479a-a2e2-e0f521bdd026",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "IndexedDB"
			},
			{
				"blockType": "text",
				"id": "ee2a5f6e-7bcd-45c9-98cb-e3ed41529dc4",
				"type": "radio",
				"placeholder": "Add option",
				"value": "React-query"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "useState",
				"type": "radio",
				"id": "bf70be23-42b6-4ab8-bde7-f961bd5ca747"
			}
		],
		"id": "f92edbaf-00e5-49c6-8685-259c585db243",
		"type": "radio",
		"pollNumber": 84,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{ "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c", "value": "^" },
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{ "id": "04cfe937-2a1c-4e21-adf4-949835c0d764", "value": "try" },
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{ "value": "throw", "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3" },
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			},
			{
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"value": "When you have heavy computations doing the same thing "
			},
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c",
				"value": "It builds confidence in your code because you can run it whenever you make changes in code"
			},
			{
				"id": "314a6b8f-b5f0-443e-adab-d2b36587befc",
				"value": "Lifting state up"
			}
		],
		"voted": [],
		"question": "In React, state management can be hard I admit, when component B and C require state to be in sync, what approach would be the best fit? ",
		"status": "closed",
		"category": "react"
	},
	{
		"openingTime": 1664355438997,
		"status": "closed",
		"question": "In JS, ensuring code quality is no jest, what are reasons can you give why we should test?",
		"type": "checkbox",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "value": "<dbz>", "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "value": "color", "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{ "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c", "value": "^" },
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{ "value": "try", "id": "04cfe937-2a1c-4e21-adf4-949835c0d764" },
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{ "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3", "value": "throw" },
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"value": ".map doesn’t run when the array is empty",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62"
			},
			{
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"value": "When you have heavy computations doing the same thing "
			},
			{
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b",
				"value": "Nothing: You can perfectly do this request"
			},
			{
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c",
				"value": "It builds confidence in your code because you can run it whenever you make changes in code"
			},
			{
				"value": "It will probably reduce code maintenance",
				"id": "185d717e-5336-4020-a92e-d949bf26f8e2"
			}
		],
		"category": "javascript",
		"answers": [
			{
				"blockType": "text",
				"value": "To encapsulate your code ",
				"placeholder": "Add option",
				"type": "radio",
				"id": "fc94832d-7483-4cb9-9e94-7454dabfc79c"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It’s a mandatory step to fulfill the needs for a CI/CD pipeline process, before going to production",
				"id": "c17ec993-a73d-466f-9e20-01735b25768a"
			},
			{
				"placeholder": "Add option",
				"id": "1a7d45d3-0e45-4d14-8256-962e7d57eb68",
				"blockType": "text",
				"type": "radio",
				"value": "We do it because It actually is a requirement when working with agile scrum: Each sprint we don’t have to go to production, but we should strive to writing tests to successfully conclude a sprint"
			},
			{
				"value": "It helps increasing your LoC and code coverage, which reflects your activity and shows your commitment and is important for measuring individual performance in the team and the company ",
				"blockType": "text",
				"id": "764d758c-5b6d-49c8-9dc3-2a67465006f8",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "It builds confidence in your code because you can run it whenever you make changes in code",
				"id": "6ae45a37-d353-4d95-8c94-c516c45b431c",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "fb1eff26-e17f-4160-9a92-d3c77bff4fe1",
				"blockType": "text",
				"value": "It’s just code etiquette we all adhere to, e.g: at casual companies, tests are often not required, but if the company is more corporate, etiquettes like this have to be followed"
			},
			{
				"id": "0bbb4a23-3f2e-4447-83ae-bf65d2cfefc0",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It is only beneficial when you don’t have manual testers in you team",
				"type": "radio"
			},
			{
				"value": "It’s a way to guide visual impaired developers in codebases and help them get familiar with it",
				"id": "c237e49e-b5ee-4136-b417-136aa85ccd27",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "185d717e-5336-4020-a92e-d949bf26f8e2",
				"value": "It will probably reduce code maintenance",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			}
		],
		"id": "1211c8ea-4e02-4d3e-9495-3606e6780610",
		"codeBlock": "",
		"voted": [],
		"pollNumber": 83
	},
	{
		"correctAnswers": [
			{
				"value": "Nothing: You can perfectly do this request",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			}
		],
		"question": "In Web, when JS code is served from `http://oodoo.nl/marcianosr/pull-requests` and does a fetch request to `http://oodoo.nl/oodoo-copilot` via HTTP, what problem will you run into for free? ",
		"type": "radio",
		"answers": [
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "CORS (ofCORS!): because cross-origin requests are not allowed",
				"blockType": "text",
				"id": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f"
			},
			{
				"blockType": "text",
				"value": "Nothing: You can perfectly do this request",
				"type": "radio",
				"placeholder": "Add option",
				"id": "c8582033-1847-4175-99bd-d02ea8819c9b"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Your website will crash because it will get stuck in a request loop",
				"id": "c8c405d1-6b0c-4d5a-8b35-1fcdcaa78611",
				"type": "radio"
			},
			{
				"value": "You’ll run into auth errors ",
				"id": "74620b9c-6293-4195-ae09-c60b90e35712",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "863e5af3-c60f-497e-98fc-065d2314abe0",
				"value": "If your IP is exposed, it will let Oodoo administrators know a request is done to their server because making requests to an URL without the owner(s) knowing may get you in trouble"
			},
			{
				"placeholder": "Add option",
				"id": "2ac209c6-2776-494d-a7cf-2535f68201a1",
				"value": "It will work, but throw a warning message in the console, because HTTP is used",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"value": "It will not work, and throw an error message in the console, because HTTP is used and violates the security policy",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "7b480290-a9a0-4eb4-b012-beeeeb5ae5ea"
			},
			{
				"blockType": "text",
				"id": "fc94832d-7483-4cb9-9e94-7454dabfc79c",
				"type": "radio",
				"value": "It depends on what is returned by HTTP: if the page exists and returns a 200, it’ll be fine, however if the code contains 400’s or 500’s, you’ll get the concerned HTTP status as return (which is seen in the network inspector)",
				"placeholder": "Add option"
			}
		],
		"codeBlock": "",
		"id": "dfb8ecd4-f6ab-4847-bc75-f8518e371b39",
		"voted": [],
		"openingTime": 1663749409090,
		"category": "general-frontend",
		"pollNumber": 82,
		"status": "closed"
	},
	{
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "value": "<dbz>", "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{ "value": "^", "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c" },
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{ "id": "04cfe937-2a1c-4e21-adf4-949835c0d764", "value": "try" },
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{ "value": "throw", "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3" },
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"value": ".map doesn’t run when the array is empty",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"value": "A nodelist of document nodes",
				"id": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f"
			}
		],
		"type": "radio",
		"question": "In JS, the DOM API contains querySelectorAll, what will be returned when you give this function a call? ",
		"pollNumber": 81,
		"answers": [
			{
				"placeholder": "Add option",
				"value": "An array of document nodes",
				"blockType": "text",
				"id": "79f2a624-4ec5-41b2-a711-984cb76b5e41",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "An object of document nodes ",
				"id": "e4ad5b01-976b-4ecd-a9e7-f9ff41713111",
				"type": "radio"
			},
			{
				"id": "82fba6ff-b288-4c0a-83ee-4970f1e75b33",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "A set of document nodes "
			},
			{
				"placeholder": "Add option",
				"value": "A list of document nodes wrapped in <li>",
				"id": "c4c0881e-9186-4bf4-a324-6a23d272cd83",
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "A list of divs",
				"id": "4b3c466c-f2c5-4f53-a81a-4220afb985d6"
			},
			{
				"id": "9ba787df-c87c-46b5-aea2-4559f8f23d24",
				"placeholder": "Add option",
				"value": "null",
				"type": "radio",
				"blockType": "text"
			},
			{
				"value": "A nodelist of document nodes",
				"id": "14c3f63f-195c-4fa3-8005-80a9b16b5d4f",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			}
		],
		"codeBlock": "",
		"status": "closed",
		"category": "javascript",
		"openingTime": 1662710002404,
		"voted": [],
		"id": "212e5f4d-88bc-43e3-a517-db2e430fe118"
	},
	{
		"answers": [
			{
				"id": "a047b356-f2f1-4a1b-8cb3-fd5f506c18a8",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Memoization should by default be applied on all computations to improve the expense of allocated memory when writing code"
			},
			{
				"value": "When you notice your UI reacts very slow",
				"type": "radio",
				"id": "7680be63-8a37-427a-a262-ab87151ad6ff",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "Memoization is actually the process of storing values in variables which means values are “remembered” or to stay with the term: “memorized/memoized”; Values are “memorized” in computer memory, so basically it’s always applied without realizing it",
				"placeholder": "Add option",
				"type": "radio",
				"id": "4f1091d4-e4b1-4876-a779-58d9b08e1ea5",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "d90e1c21-4888-4044-801e-4f85696dff29",
				"value": "Memoization is not dedicated to JS only: it’s a “human cognition technique” researched and encouraged by neuroscientists and often used by programmers when they want to study something new concepts or a new programming language efficiently",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "When memory leaks occur memoization is used to fix the memory leaks ",
				"id": "627a48ad-744e-4d2b-8566-1ea16db2e819",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "When you have heavy computations doing the same thing ",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			},
			{
				"type": "radio",
				"id": "02e418cb-7fcb-4550-b127-c812b6809817",
				"value": "You don’t manually: When storing variables in JS, your allocating memory, which is what “memoization” is",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"placeholder": "Add option",
				"value": "When your function is pure "
			}
		],
		"status": "closed",
		"type": "checkbox",
		"openingTime": 1663745190977,
		"question": "In JS, memoization is a technique often applied, in what context is the use of memoization justified?  ",
		"correctAnswers": [
			{
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"value": "When you have heavy computations doing the same thing "
			},
			{
				"value": "When your function is pure ",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62"
			}
		],
		"codeBlock": "",
		"pollNumber": 80,
		"id": "345a656b-71f7-4f35-9a45-cd03e8a6c849",
		"category": "javascript",
		"voted": []
	},
	{
		"codeSandboxExample": "",
		"category": "javascript",
		"openingTime": null,
		"pollNumber": 79,
		"voted": [],
		"answers": [
			{
				"value": ".map creates an array for each element it loops over",
				"id": "a047b356-f2f1-4a1b-8cb3-fd5f506c18a8",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": ".map always creates a new array as return value",
				"type": "radio",
				"id": "7680be63-8a37-427a-a262-ab87151ad6ff",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": ".map should always be preferred over for and forEach because .map is immutable",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "4f1091d4-e4b1-4876-a779-58d9b08e1ea5",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": ".map can be used on array and array-like (e.g node lists) items",
				"id": "d90e1c21-4888-4044-801e-4f85696dff29",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": ".map is a higher order function used to transform data",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "627a48ad-744e-4d2b-8566-1ea16db2e819"
			},
			{
				"blockType": "text",
				"value": ".map is a higher order function used to filter items in your array",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "02e418cb-7fcb-4550-b127-c812b6809817",
				"value": ".map is a function google came with",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": ".map doesn’t run when the array is empty",
				"type": "radio",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"blockType": "text"
			},
			{
				"id": "79f2a624-4ec5-41b2-a711-984cb76b5e41",
				"type": "radio",
				"placeholder": "Add option",
				"value": ".map mutates the array you are working with",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "824fed95-1577-4e79-9756-45d6b016cad0",
				"placeholder": "Add option",
				"type": "radio",
				"value": ".map returns the data type you return in your callback function e.g: when returning an object, you’ll get an object as result"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "a48f211d-2155-46c1-b73d-badb6a4dba7c",
				"blockType": "text",
				"value": ".map is not a browser standard yet, and has to be babelified"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "f86a9e34-ff32-4ba2-81af-e7075262f400",
				"value": ".map and .forEach are the same",
				"type": "radio"
			}
		],
		"type": "checkbox",
		"id": "fe664a79-7cf5-48e2-92d9-8c5780a79cba",
		"status": "new",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "value": "<dbz>", "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "value": "color", "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{ "value": "^", "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c" },
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{ "value": "try", "id": "04cfe937-2a1c-4e21-adf4-949835c0d764" },
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{ "value": "throw", "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3" },
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"id": "7680be63-8a37-427a-a262-ab87151ad6ff",
				"value": ".map always creates a new array as return value"
			},
			{
				"value": " .map is a higher order function used to transform data",
				"id": "627a48ad-744e-4d2b-8566-1ea16db2e819"
			},
			{
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"value": ".map doesn’t run when the array is empty"
			}
		],
		"question": "In JS, for this question seasoned developers can take a nap, name some facts to be aware of when using .map?",
		"codeBlock": ""
	},
	{
		"question": "In CSS, flexbox has a property flex-shrink, now how does this work, do you think? ",
		"pollNumber": 78,
		"codeBlock": "",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{ "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c", "value": "^" },
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{ "id": "04cfe937-2a1c-4e21-adf4-949835c0d764", "value": "try" },
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{ "value": "throw", "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3" },
			{
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"value": "Semantic tags are important for users with screen readers"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{
				"value": "It specifies how much a flex item will shrink relatively to other flex items ",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6"
			}
		],
		"answers": [
			{
				"id": "a047b356-f2f1-4a1b-8cb3-fd5f506c18a8",
				"type": "radio",
				"blockType": "text",
				"value": "It specifies the amount of space a flex item can occupy when hitting the built-in browser breakpoint",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "7680be63-8a37-427a-a262-ab87151ad6ff",
				"value": "It allows you to shrink elements with a factor based on the given width / height. If a given element is 100px wide, the default flex-shrink value is 1. When you change it to 2, it will be 200px "
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "4f1091d4-e4b1-4876-a779-58d9b08e1ea5",
				"value": "It specifies that your container is responsive ",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It ensures the flex items will shrink until it’s content width",
				"type": "radio",
				"id": "d90e1c21-4888-4044-801e-4f85696dff29"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "It ensures all flex items will stay on a single line",
				"id": "627a48ad-744e-4d2b-8566-1ea16db2e819"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "7d065da6-592b-4283-8438-18d90ec2f0b6",
				"value": "It specifies how much a flex item will shrink relatively to other flex items ",
				"blockType": "text"
			},
			{
				"value": "It allows resizing elements on the 2d plane",
				"placeholder": "Add option",
				"id": "02e418cb-7fcb-4550-b127-c812b6809817",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "8c26881c-c657-4e4a-a454-635e6b3a4d62",
				"placeholder": "Add option",
				"value": "It allows to shrink the screen size off the users device"
			}
		],
		"openingTime": null,
		"id": "c00e3ab7-4fdc-4c16-b824-cbce65cd833b",
		"category": "css",
		"type": "radio",
		"status": "new",
		"voted": []
	},
	{
		"voted": [],
		"id": "9b72e07f-c09d-4cc9-8f0d-e450076ce60d",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "value": "<dbz>", "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{ "value": "^", "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c" },
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			},
			{ "id": "04cfe937-2a1c-4e21-adf4-949835c0d764", "value": "try" },
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{ "value": "throw", "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3" },
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{ "id": "2f7ef919-8429-4b95-b199-dcb9a60367f4", "value": "!false" },
			{
				"value": "\"false\"",
				"id": "d35b8425-09e1-47f8-a383-c986879b110e"
			},
			{
				"value": "new Date()",
				"id": "2e163444-917d-4c73-a4f8-c248a25505f2"
			},
			{ "id": "a047b356-f2f1-4a1b-8cb3-fd5f506c18a8", "value": "[]" },
			{ "id": "3962991e-5248-4bff-98dd-8d1fa14d9fb1", "value": "5" },
			{
				"id": "ae6e11dc-5a57-4e80-b8e6-7d2e442dc68b",
				"value": "\"true\" "
			}
		],
		"openingTime": null,
		"pollNumber": 77,
		"type": "radio",
		"question": "Truthy, falsy, these conversions dazzle my head, from the answers below truthy values is what I seek, how about you give me the correct ones instead?",
		"status": "new",
		"codeBlock": "",
		"codeSandboxExample": "",
		"answers": [
			{
				"type": "radio",
				"autoFocus": false,
				"id": "a047b356-f2f1-4a1b-8cb3-fd5f506c18a8",
				"blockType": "code",
				"placeholder": "Add option",
				"value": "[]"
			},
			{
				"value": "\"\"",
				"blockType": "code",
				"autoFocus": false,
				"id": "7680be63-8a37-427a-a262-ab87151ad6ff",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "!false",
				"id": "2f7ef919-8429-4b95-b199-dcb9a60367f4",
				"type": "radio",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"value": "\"false\"",
				"type": "radio",
				"id": "d35b8425-09e1-47f8-a383-c986879b110e",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false
			},
			{
				"autoFocus": false,
				"id": "2e163444-917d-4c73-a4f8-c248a25505f2",
				"placeholder": "Add option",
				"type": "radio",
				"value": "new Date()",
				"blockType": "text"
			},
			{
				"id": "3962991e-5248-4bff-98dd-8d1fa14d9fb1",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "5",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"autoFocus": false,
				"type": "radio",
				"value": "NaN",
				"id": "f8f35fde-7035-444a-8350-3d11ebee2cdd",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "92577f72-7612-4e15-8e91-1ac1a9ac0832",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio",
				"value": "0"
			},
			{
				"blockType": "text",
				"id": "01974633-e6b6-4d98-8e48-ecf8765c3e69",
				"value": "false",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"value": "null",
				"id": "7a0a29ae-de66-4361-95ff-7722f03caaa0",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "\"true\" ",
				"id": "ae6e11dc-5a57-4e80-b8e6-7d2e442dc68b",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": true
			}
		],
		"category": "javascript"
	},
	{
		"openingTime": null,
		"codeBlock": "",
		"category": "javascript",
		"voted": [],
		"question": "In JS, when the output of `false === \"false\"` is `false` , `true === “true”` is `false`, NaN == NaN is `false`,  what will the output of `true == “true”` bring you? ",
		"id": "f429bf4d-13a9-47e0-8e35-428a0f58c41c",
		"pollNumber": 76,
		"answers": [
			{
				"value": "true",
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"id": "a047b356-f2f1-4a1b-8cb3-fd5f506c18a8"
			},
			{
				"id": "7680be63-8a37-427a-a262-ab87151ad6ff",
				"value": "false",
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio"
			}
		],
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "value": "color", "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "id": "db1d4d07-16ed-4031-8fe4-b5f502063844", "value": "radio" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"value": "SessionStorage will be removed when a browser is closed",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654"
			},
			{ "value": "^", "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c" },
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{ "id": "04cfe937-2a1c-4e21-adf4-949835c0d764", "value": "try" },
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "finally"
			},
			{ "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3", "value": "throw" },
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450"
			},
			{ "id": "7680be63-8a37-427a-a262-ab87151ad6ff", "value": "false" }
		],
		"type": "radio",
		"status": "closed"
	},
	{
		"id": "b44146a5-55bb-481c-8da2-e3b60cea3630",
		"type": "checkbox",
		"pollNumber": 75,
		"answers": [
			{
				"value": "Semantic tags have display flex by default, which encourages the use of semantic tags and makes styling easier",
				"type": "radio",
				"blockType": "text",
				"id": "a5a37123-8eb8-4055-ab9f-495c97e48d5e",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "418dc3a9-94e6-46a9-b7c5-124933a65946",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Semantic tags are important to SEO; page ranking is influenced"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "Semantic tags increases performance of page rendering because the browser can skim easier through meaningful tags than when having a forest of <divs>",
				"id": "f7d38bb0-a355-4f89-9722-8d258cedd5c2"
			},
			{
				"id": "925d5135-b6f0-4346-93af-f974b886fcee",
				"type": "radio",
				"value": "Semantic tags can’t be ignored because the browser compiler will throw an error at runtime when semantic tags are not used in the right place",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"id": "1bb74571-4eec-4493-a039-0971a27f75e4",
				"value": "Apps that use semantic tags will be marked as more trustworthy",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "4d6a5a08-4551-4485-b2e6-c718e6f49344",
				"blockType": "text",
				"value": "Using semantic tags are way to enhance your styling and help to scope your CSS code"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "Semantic tags show developer’s intent",
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "0a223e3f-a2ee-431c-9aa4-2a328d3fe8ea",
				"value": "Semantic tags are there to style your page according to the concerned tag. E.g, <form> will provide a styled form without any CSS needed",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "a047b356-f2f1-4a1b-8cb3-fd5f506c18a8",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "Semantic tags have better browser support "
			}
		],
		"question": "In HTML, semantic tags it’s what it’s all about, what benefits of writing semantic tags can you name without doubt?",
		"codeBlock": "",
		"openingTime": 1663834813577,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{ "value": "^", "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c" },
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{ "value": "try", "id": "04cfe937-2a1c-4e21-adf4-949835c0d764" },
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{ "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3", "value": "throw" },
			{
				"value": "Semantic tags are important for users with screen readers",
				"id": "7767b333-639a-40e7-904d-158fe4127d37"
			},
			{
				"id": "a6434f4e-7cc2-4758-9ff1-c42ad5af0450",
				"value": "Semantic tags show developer’s intent"
			},
			{
				"id": "418dc3a9-94e6-46a9-b7c5-124933a65946",
				"value": "Semantic tags are important to SEO; page ranking is influenced"
			}
		],
		"status": "closed",
		"voted": [],
		"category": "html"
	},
	{
		"category": "javascript",
		"voted": [],
		"question": "In JS, errors can be endowed, what statements in error handling are allowed?",
		"id": "f669edd7-b5f5-4cb3-9342-bd43d7537d48",
		"pollNumber": 74,
		"type": "checkbox",
		"codeBlock": "",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "value": "<dbz>", "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "value": "color", "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "id": "db1d4d07-16ed-4031-8fe4-b5f502063844", "value": "radio" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{ "value": "^", "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c" },
			{
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter "
			},
			{ "id": "04cfe937-2a1c-4e21-adf4-949835c0d764", "value": "try" },
			{
				"value": "finally",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14"
			},
			{ "value": "throw", "id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3" }
		],
		"answers": [
			{
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764",
				"type": "radio",
				"placeholder": "Add option",
				"value": "try",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "catch"
			},
			{
				"id": "bcf20a6e-46f7-46ab-9dc4-a65c95501e01",
				"blockType": "text",
				"value": "begin",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"blockType": "text",
				"value": "finally",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "if",
				"id": "65f569d4-ffcd-4d40-94a4-d1b950a74b6c",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "else",
				"blockType": "text",
				"id": "cef17f4d-641d-4617-b588-e979ed6e3849",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "1475ecac-1c5d-49a7-b4de-04f5154c3212",
				"value": "switch",
				"blockType": "text"
			},
			{
				"value": "kick",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "d9493059-81cd-4ef0-8ae8-5cdcdbbd4c5f"
			},
			{
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"type": "radio",
				"value": "throw",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "f3589dbb-96c8-4c5c-8c26-e255f790f13a",
				"value": "ensure",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "922ab3fd-f593-4070-8a66-7fd94169aba8",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "promise"
			},
			{
				"value": "async",
				"type": "radio",
				"placeholder": "Add option",
				"id": "61b353e3-c02f-47c3-a88b-96a0c232671e",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"value": "await",
				"type": "radio",
				"placeholder": "Add option",
				"id": "a5a37123-8eb8-4055-ab9f-495c97e48d5e"
			}
		],
		"status": "closed",
		"openingTime": null
	},
	{
		"voted": [],
		"id": "e166d4f7-ba63-458a-bdc1-4093e4011815",
		"openingTime": null,
		"codeBlock": "callFunction());",
		"category": "javascript",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "value": "<dbz>", "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "value": "color", "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{ "value": "^", "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c" },
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			}
		],
		"status": "new",
		"answers": [
			{
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "Function error"
			},
			{
				"type": "radio",
				"value": "SyntaxError",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "bcf20a6e-46f7-46ab-9dc4-a65c95501e01",
				"value": "TypeError",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "UnexpectedError",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "CallbackError",
				"placeholder": "Add option",
				"id": "65f569d4-ffcd-4d40-94a4-d1b950a74b6c",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "cef17f4d-641d-4617-b588-e979ed6e3849",
				"value": "undefined"
			},
			{
				"value": "null",
				"id": "1475ecac-1c5d-49a7-b4de-04f5154c3212",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "d9493059-81cd-4ef0-8ae8-5cdcdbbd4c5f",
				"type": "radio",
				"value": "RangeError"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "b11a8ff3-b819-4a97-8173-fe3a2cae91c3",
				"value": "UriError"
			},
			{
				"type": "radio",
				"id": "f3589dbb-96c8-4c5c-8c26-e255f790f13a",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "ReferenceError"
			}
		],
		"question": "In JS, errors will annoy you to the bone, what type of error from the following code will be thrown? ",
		"type": "radio",
		"pollNumber": 73
	},
	{
		"id": "97c35fa2-acea-4736-a65f-16d18515173e",
		"status": "closed",
		"codeBlock": "",
		"question": "In CSS, logical properties have a place, do you know a situation where we should use them with grace? ",
		"answers": [
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "When we want to use conditionals in CSS",
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764"
			},
			{
				"blockType": "text",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264",
				"value": "When writing directions (foreign languages) matter ",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "When we want to enhance CSS with JS ",
				"placeholder": "Add option",
				"id": "bcf20a6e-46f7-46ab-9dc4-a65c95501e01",
				"blockType": "text"
			},
			{
				"id": "48210ee4-aff9-4771-b7fd-00c42c20dc14",
				"value": "Logical properties are used in css-in-js to style your components based on JS logic ",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "When you want to debug your CSS ",
				"id": "65f569d4-ffcd-4d40-94a4-d1b950a74b6c",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "cef17f4d-641d-4617-b588-e979ed6e3849",
				"type": "radio",
				"placeholder": "Add option",
				"value": "When you need math in CSS for cool (physics) animations/3d or complex grid layouts (calculate widths/heights/distances/gaps )"
			}
		],
		"openingTime": null,
		"pollNumber": 72,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"value": "Strawperson > Proposal > Draft > Candidate > Finished"
			},
			{
				"value": "LocalStorage persists across browsers",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{ "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c", "value": "^" },
			{
				"value": "When writing directions (foreign languages) matter ",
				"id": "0fb405b9-e38f-4b2d-b1fe-7dec83f25264"
			}
		],
		"category": "css",
		"type": "radio",
		"voted": []
	},
	{
		"codeBlock": "",
		"openingTime": null,
		"pollNumber": 71,
		"id": "10706652-477b-4596-9ebb-8e23ab9d5635",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "value": "<dbz>", "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"value": "<noscript>"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "LocalStorage persists across browsers"
			},
			{
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage will be removed when a browser is closed"
			},
			{ "value": "^", "id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c" }
		],
		"voted": [],
		"question": "In JS, what you often see are package managers which is no baloney, what token do you need next to your version to update minor/patches only? ",
		"answers": [
			{
				"id": "732e43e6-4eb9-4083-b759-938b6023bea2",
				"type": "radio",
				"value": "-",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "_",
				"placeholder": "Add option",
				"id": "4d5e079d-88e5-4c8c-af29-34412001e333",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "fc434f61-8698-483b-89bf-424672eb4793",
				"placeholder": "Add option",
				"value": "~",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "65c565fc-586c-4af9-b635-dbfd39b78aad",
				"blockType": "text",
				"type": "radio",
				"value": "Nothing, it won’t upgrade packages unless you explicitly run an upgrade command from the concerned package manager",
				"placeholder": "Add option"
			},
			{
				"value": "^",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "bc7d1e20-d478-4ef6-91b7-e2a55332372c"
			},
			{
				"id": "4cf1a3f1-2b4d-4548-8ef6-cd0a9ec4965c",
				"type": "radio",
				"value": "🚧",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"id": "376a09b5-6e09-46aa-891c-fcac946f512e",
				"blockType": "text",
				"value": ">",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "!",
				"type": "radio",
				"id": "d546aa34-e83c-43be-acb6-3886940d2afe",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "949a77b0-0dba-499b-a13c-299ff2693f00",
				"value": "⚠️",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "334c898f-5ac5-4693-9979-ec69dfb2c550",
				"placeholder": "Add option",
				"value": "lock"
			},
			{
				"id": "04cfe937-2a1c-4e21-adf4-949835c0d764",
				"value": "🔒",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			}
		],
		"category": "javascript",
		"type": "checkbox",
		"status": "closed"
	},
	{
		"id": "44f18753-110b-43a9-a6b5-7cffd11a0792",
		"codeBlock": "",
		"openingTime": 1669020419415,
		"status": "closed",
		"codeSandboxExample": "",
		"pollNumber": 70,
		"answers": [
			{
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "GlobalStorage",
				"blockType": "text",
				"autoFocus": false,
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"id": "14000f03-3405-4e5e-b231-81b45faa6654",
				"value": "SessionStorage"
			},
			{
				"value": "Firebase",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "b0ff5a57-7f2e-43d5-b7bc-9da13a80b823",
				"autoFocus": false
			},
			{
				"autoFocus": false,
				"id": "1b6c820b-250d-42cb-85cb-0c434d04f798",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Memory"
			},
			{
				"type": "radio",
				"autoFocus": false,
				"id": "01b4dcc4-e2af-4830-874f-c8be0c1fc5d2",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "CORS"
			},
			{
				"value": "WASM",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "1dcdae73-6623-42dd-bce1-1a3a2539888c",
				"type": "radio",
				"autoFocus": false
			},
			{
				"id": "40d3ba66-fc41-4981-a232-21f0e3161ff4",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"value": "SetState"
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text",
				"type": "radio",
				"value": "LocalStorage",
				"id": "828053ff-e5fe-413e-966e-d568f08e821f"
			},
			{
				"id": "0efaf544-5cbb-4a71-bf78-ae61c6634758",
				"value": "Extending the browser window object",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text"
			},
			{
				"autoFocus": false,
				"value": "It doesn’t exist client-side; you need to store everything serverside if you want to have your data persisted",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "732e43e6-4eb9-4083-b759-938b6023bea2"
			},
			{
				"type": "radio",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "74823a92-c48c-451f-885b-87542e33c41a",
				"value": "Object.freeze"
			},
			{
				"placeholder": "Add option",
				"value": "Redux",
				"type": "radio",
				"autoFocus": true,
				"blockType": "text",
				"id": "645bdfae-ddc4-47ac-9f41-816320fd244b"
			}
		],
		"voted": [],
		"type": "radio",
		"question": "In Frontend, client-side data storages exist, when the user closes it’s browser, what technique is used to have the data persist? ",
		"category": "general-frontend",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "value": "color", "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"value": "When your “Navi” intellisense suggests “any” ",
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713"
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"value": "Strawperson > Proposal > Draft > Candidate > Finished",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914"
			},
			{
				"value": "GlobalStorage",
				"id": "828053ff-e5fe-413e-966e-d568f08e821f"
			}
		]
	},
	{
		"voted": [
			{
				"answerId": "75e579c1-d269-4575-a1c7-9d2eb1fe1a75",
				"userId": "amN2Z3FGaTQnjwSktECXoGYXEYi1"
			},
			{
				"userId": "RUn3dqxhhXO4wD2Cmc31rQQ9uub2",
				"answerId": "75e579c1-d269-4575-a1c7-9d2eb1fe1a75"
			},
			{
				"userId": "SMJFRAatZgXUeXXcx2ijheHyBqv1",
				"answerId": "75e579c1-d269-4575-a1c7-9d2eb1fe1a75"
			},
			{
				"answerId": "75e579c1-d269-4575-a1c7-9d2eb1fe1a75",
				"userId": "BnwWAepzt0NMd880xRNNvEOjxnv2"
			},
			{
				"userId": "aWI6X9i1RugALHJ7ILr8Xp4baIW2",
				"answerId": "75e579c1-d269-4575-a1c7-9d2eb1fe1a75"
			},
			{
				"answerId": "75e579c1-d269-4575-a1c7-9d2eb1fe1a75",
				"userId": "tRLVcXr9ZXgF3A5VzwO4rrESCY32"
			},
			{
				"answerId": "75e579c1-d269-4575-a1c7-9d2eb1fe1a75",
				"userId": "ZJTGuZOOvgaIycOFMIq2vSXXD292"
			},
			{
				"userId": "qBHCpnXFOLZsdzcHbKzvkqP6Uck1",
				"answerId": "6edf4add-1024-4dd0-a0ac-036a70b32216"
			},
			{
				"answerId": "d0913b53-99a2-4190-9427-efb65f8a9c3e",
				"userId": "8O6cHx6IxmTUXaMnXhxcQ2HFgEV2"
			},
			{
				"answerId": "6edf4add-1024-4dd0-a0ac-036a70b32216",
				"userId": "VsNPZ5xdDgdZxTUeynrJJk5Qs5v2"
			},
			{
				"userId": "92mwfTrtfSRsiOzcahAIKsNW5vO2",
				"answerId": "75e579c1-d269-4575-a1c7-9d2eb1fe1a75"
			},
			{
				"userId": "lMl7YkcHrzSQnR4di8OJsDVmeEC3",
				"answerId": "d0913b53-99a2-4190-9427-efb65f8a9c3e"
			},
			{
				"answerId": "75e579c1-d269-4575-a1c7-9d2eb1fe1a75",
				"userId": "B762i26QM7Y275I0w2uAtklg3Gx1"
			},
			{
				"userId": "btmzQ2h02aa7NwgpOFMGvGSgcv62",
				"answerId": "75e579c1-d269-4575-a1c7-9d2eb1fe1a75"
			},
			{
				"answerId": "75e579c1-d269-4575-a1c7-9d2eb1fe1a75",
				"userId": "GxloHn9wFkRFYYHXSuTj56kXd0q2"
			}
		],
		"codeBlock": "",
		"status": "closed",
		"id": "11b07060-1529-48cc-bfa2-ed9f5ffaad60",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"value": "ternary operator"
			},
			{
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"value": "When you are using TypeScript but don’t really need the types"
			},
			{
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a",
				"value": "When you’re working on simple/small applications (<1000 lines of code)"
			},
			{
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"value": "When run-time errors are contextually more informative (depends on the project)"
			},
			{
				"value": "When your codebase is at a level it needs flexibility at every level",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story"
			},
			{
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5"
			},
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			},
			{
				"id": "75e579c1-d269-4575-a1c7-9d2eb1fe1a75",
				"value": "When the feature reaches \"stage 4: Finished\" "
			}
		],
		"category": "general-frontend",
		"answers": [
			{
				"type": "radio",
				"autoFocus": false,
				"value": "Whenever a popular developer writes a blogpost or makes video about it",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "fb1abdbe-9f41-456c-b21c-e6f56416c8e1"
			},
			{
				"blockType": "text",
				"autoFocus": false,
				"id": "75e579c1-d269-4575-a1c7-9d2eb1fe1a75",
				"value": "When the feature reaches \"stage 4: Finished\" ",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "6edf4add-1024-4dd0-a0ac-036a70b32216",
				"type": "radio",
				"value": "When the feature is released on production ",
				"autoFocus": false
			},
			{
				"type": "radio",
				"value": "When the feature contains a W3C-approval sticker ",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "d0913b53-99a2-4190-9427-efb65f8a9c3e"
			},
			{
				"type": "radio",
				"value": "When the features emerges in the NPM registry",
				"placeholder": "Add option",
				"id": "d75fd3a2-0301-4ad7-a939-b21d73e68914",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"type": "radio",
				"id": "d403d7e9-21e6-497f-b51f-068a5c9ad304",
				"value": "When the feature underwent all scrum events",
				"blockType": "text",
				"autoFocus": false,
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "When the ECMAScript elections result in more votes for \"RELEASE\" then \"DON'T RELEASE\" ",
				"id": "4f160163-e018-45db-81d8-88ffc2e8edaf",
				"blockType": "text",
				"type": "radio",
				"autoFocus": false
			},
			{
				"autoFocus": true,
				"blockType": "text",
				"type": "radio",
				"value": "Whenever a new ECMAScript president is chosen, a new feature is also released ",
				"placeholder": "Add option",
				"id": "f7d4efef-c9bf-41d3-8719-0920aaa493f9"
			}
		],
		"openingTime": 1670488269082,
		"pollNumber": 69,
		"type": "radio",
		"codeSandboxExample": "",
		"question": "In Frontend, making changes in the ECMAScript specification is quite a big transition, what marks the stage as complete and ready for the next ECMAScript edition? "
	},
	{
		"openingTime": 1662710082474,
		"category": "html",
		"codeBlock": "",
		"correctAnswers": [
			{
				"value": "<noscript>",
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2"
			}
		],
		"id": "ddd0c88f-555b-444c-acf0-e3ef3e82efd5",
		"type": "radio",
		"pollNumber": 68,
		"answers": [
			{
				"blockType": "code",
				"id": "b0167e8d-9b19-49f4-ad68-6368015b452a",
				"value": "<nojavascript>",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "You can do it by adding the classname “.no-js” ",
				"id": "6af4a0c6-ab5f-418a-b402-0b83aebbef94"
			},
			{
				"type": "radio",
				"id": "2f09710d-a607-4a2c-a824-177731b89078",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "CSS has a property for it called “script” which takes values “no-script” and “apply”"
			},
			{
				"value": "<script disabled>",
				"type": "radio",
				"id": "487a7e91-4305-4e50-b30d-ab7745102756",
				"blockType": "code",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "735dcdbb-bcac-44b4-b3a3-b42827503f96",
				"value": "<script no=”yes”> ",
				"type": "radio",
				"blockType": "code"
			},
			{
				"value": "<script yes=”no”> ",
				"type": "radio",
				"placeholder": "Add option",
				"id": "eccc3cae-2dd0-4739-ba29-33a4aecaf1df",
				"blockType": "code"
			},
			{
				"id": "3aee7979-9b2c-4279-8809-85412985a8bb",
				"blockType": "code",
				"value": "<script type=”text”> ",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"id": "1666b3f4-eed3-4307-9811-d231a5d474c2",
				"type": "radio",
				"placeholder": "Add option",
				"value": "<noscript>",
				"blockType": "code"
			},
			{
				"blockType": "text",
				"id": "fc1d7092-852e-49f0-bc07-ca193de8459c",
				"type": "radio",
				"placeholder": "Add option",
				"value": "With a condition: <script> if (window.user.javascript === false) </script> "
			},
			{
				"blockType": "text",
				"id": "a385399f-df2f-4274-98d7-23cf98ffd64c",
				"placeholder": "Add option",
				"value": "That’s not possible",
				"type": "radio"
			},
			{
				"id": "fb1abdbe-9f41-456c-b21c-e6f56416c8e1",
				"type": "radio",
				"value": "It’s possible with a special React component <NoScript />",
				"blockType": "text",
				"placeholder": "Add option"
			}
		],
		"question": "In HTML, there is a tag that renders when turned off in the browser scripts are not supported, what tag am I looking for and if you answer this correctly will get you awarded? ",
		"status": "closed",
		"voted": []
	},
	{
		"pollNumber": 67,
		"type": "radio",
		"id": "090e2a73-ea09-45fd-a8d1-5e82e941e8a0",
		"codeBlock": "",
		"openingTime": 1663319990982,
		"correctAnswers": [
			{
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"value": "Optimistic UI"
			}
		],
		"voted": [],
		"question": "In Frontend, translating user experience to the browser is an important task to focus on, what is the technique called where interfaces are updated before a backend request is done? ",
		"category": "general-frontend",
		"status": "closed",
		"answers": [
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "271d009f-003d-43cc-a089-34ef16da5a03",
				"value": "Client-side rendering "
			},
			{
				"id": "6e2706aa-a1f8-47ab-bfa3-106e2c220578",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Server-side rendering "
			},
			{
				"id": "dfb20745-5a98-4645-a3ab-e9c32306beef",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Response handling "
			},
			{
				"placeholder": "Add option",
				"value": "Reactive programming ",
				"blockType": "text",
				"id": "1e3b5f48-7b60-40ea-8096-0ad21cb9ff5b",
				"type": "radio"
			},
			{
				"id": "c0741c27-729f-4899-a1a5-527a585ae0fc",
				"placeholder": "Add option",
				"value": "Modern web UI ",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "Optimistic UI",
				"id": "0d98a726-af17-439c-9c4c-85c6dd6d26e5",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "React UI",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "b2ede620-a52f-421c-832d-22e4d7173a83"
			},
			{
				"value": "Agile UI ",
				"blockType": "text",
				"type": "radio",
				"id": "8b7e3740-3792-499f-8a59-da347f56413b",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "6afd1b86-792d-43e9-b9bb-50f8535f6856",
				"blockType": "text",
				"value": "Directives",
				"placeholder": "Add option"
			},
			{
				"id": "13b85b70-7fed-4c94-a30a-0e13068300d4",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Observables"
			},
			{
				"id": "1596d29d-3179-491b-a9b0-f04d4dbaf653",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Long polling"
			},
			{
				"blockType": "text",
				"value": "Perceived performance",
				"id": "d6071439-6397-49d8-b8eb-3ab3b0f59937",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "b0167e8d-9b19-49f4-ad68-6368015b452a",
				"placeholder": "Add option",
				"value": "User experience enhancing",
				"type": "radio"
			}
		]
	},
	{
		"openingTime": null,
		"voted": [],
		"category": "typescript",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "value": "<dbz>", "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "id": "db1d4d07-16ed-4031-8fe4-b5f502063844", "value": "radio" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"value": "lexical scope",
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			},
			{
				"value": "When you have tests, linters and code climate, usage of any is valid",
				"id": "dfb20745-5a98-4645-a3ab-e9c32306beef"
			},
			{
				"id": "6e2706aa-a1f8-47ab-bfa3-106e2c220578",
				"value": "When you already know upfront that this code is going to be refactored or changed often"
			},
			{
				"id": "271d009f-003d-43cc-a089-34ef16da5a03",
				"value": "When the code is written in a defensive way and when comments are self-documenting, “any” should be acceptable"
			},
			{
				"value": "When you are using TypeScript but don’t really need the types",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5"
			},
			{
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76"
			},
			{
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"value": "When your codebase is at a level it needs flexibility at every level"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"value": "When your “Navi” intellisense suggests “any” "
			},
			{
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)"
			},
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			}
		],
		"codeBlock": "",
		"type": "radio",
		"question": "WARNING! In TS, different types are offered of which there are many, what would be a good use case to use “any”?  ",
		"answers": [
			{
				"value": "When you are working on a feature or pressing bug and it needs to be shipped quickly",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b"
			},
			{
				"blockType": "text",
				"value": "When you really don’t know what else type it should be so you can fallback to any(time!)",
				"id": "f4d06b29-84d7-44aa-b6a2-2617ad5e8913",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "When the TypeScript Guru is not available and you are losing development speed in your 2-pointer user story",
				"id": "817554c4-d0b4-40ff-98ac-e8f8bdd64f15"
			},
			{
				"id": "6f30cc13-d9ff-4d99-97af-c82562bb9713",
				"type": "radio",
				"value": "When your “Navi” intellisense suggests “any” ",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "db33d7f3-4b4f-474d-aa92-12212578a5c1",
				"type": "radio",
				"value": "When your codebase is at a level it needs flexibility at every level",
				"placeholder": "Add option"
			},
			{
				"value": "When run-time errors are contextually more informative (depends on the project)",
				"id": "24eeaa1e-059d-46b6-a96d-b508dcdcfa76",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "When you’re working on simple/small applications (<1000 lines of code)",
				"type": "radio",
				"id": "59154095-c2e1-45c7-9b9a-c678d407439a"
			},
			{
				"blockType": "text",
				"id": "657a1557-daea-450c-a76e-0c628c7e74c5",
				"type": "radio",
				"value": "When you are using TypeScript but don’t really need the types",
				"placeholder": "Add option"
			},
			{
				"value": "When the code is written in a defensive way and when comments are self-documenting, “any” should be acceptable",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "271d009f-003d-43cc-a089-34ef16da5a03"
			},
			{
				"id": "6e2706aa-a1f8-47ab-bfa3-106e2c220578",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "When you already know upfront that this code is going to be refactored or changed often"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "When you have tests, linters and code climate, usage of any is valid",
				"id": "dfb20745-5a98-4645-a3ab-e9c32306beef",
				"blockType": "text"
			}
		],
		"pollNumber": 66,
		"status": "closed",
		"id": "0b676f0e-505e-47c6-9404-39d10ab32b66"
	},
	{
		"openingTime": null,
		"codeBlock": "isAuthenticated ? \"Hallo, welkom bij Oodoo! Uw database verloopt over 20 dagen.\" : \"Toegangsfout: Deze beperking is te wijten aan de volgende regels (\"'Activiteit' (mail.activity) records\")\"",
		"status": "new",
		"category": "javascript",
		"answers": [
			{
				"type": "radio",
				"blockType": "text",
				"id": "27b84cf5-494b-4ed3-a12a-b37fa4bf68cd",
				"value": "variadic function",
				"placeholder": "Add option"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "OAuth 2.0",
				"id": "5a740d2a-6aca-4e4c-9d48-d0970b770cd2",
				"type": "radio"
			},
			{
				"value": "functional programming",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "c7a2dfaa-36c7-442a-9580-5d02cec83e85"
			},
			{
				"value": "variable assignment",
				"placeholder": "Add option",
				"id": "da31646b-a569-43fa-897a-1c9ae81a7b37",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "this technique is called invalid JavaScript",
				"id": "c9f8a104-30e9-4ee9-8c95-353adca9a9b4",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "react conditional",
				"id": "3c3335c3-7133-4557-8465-d0af717816f3"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "nullish coalescing",
				"id": "d2c502aa-66c9-4d59-95b3-effb65213b16",
				"type": "radio"
			},
			{
				"id": "176c154d-6679-4a5f-aa4e-0981cea7296b",
				"placeholder": "Add option",
				"type": "radio",
				"value": "optional chaining",
				"blockType": "text"
			}
		],
		"pollNumber": 65,
		"type": "radio",
		"id": "823550ad-081c-4d89-a431-e9267f781946",
		"voted": [],
		"codeSandboxExample": "",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "value": "color", "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			},
			{
				"value": "ternary operator",
				"id": "97005d72-c086-40a9-9803-cb15e3360a2e"
			}
		],
		"question": "See the following JS on your screen, what is this technique called you must have seen?"
	},
	{
		"type": "radio",
		"category": "javascript",
		"id": "8834b276-24b8-4567-9478-93d80a4fa8f1",
		"pollNumber": 64,
		"voted": [],
		"question": "In JS, why would you recommend the use of eval, to other developers as function fundamental?",
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"value": "It is not recommended because it opens a security leak, eval is evil"
			},
			{
				"type": "radio",
				"id": "d49bfb2e-a053-4814-ad31-b7d3ca2fe9bb",
				"value": "You don’t use it because it’s a special function used by the JIT compiler to make your JS more performant when it’s runs in the browser",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "7a110f32-e82b-4222-bf77-4c2699b1b902",
				"type": "radio",
				"value": "It’s used, but not so much because it makes code less readable. It is only used if code needs to be really performant, like in (older) JS environments where functional programming style is even too heavy",
				"placeholder": "Add option"
			},
			{
				"value": "It’s just a function used for regular expressions",
				"placeholder": "Add option",
				"id": "533d9424-3ef2-4626-9ed9-b7babab3fc9c",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "It’s a useful function when you want to parse CSS styles in your JavaScript e.g when you don’t use CSS modules. It provides a ready-made object (much like the CSS modules “styles” object)",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "71935f3d-8ea0-4b15-948c-03368628db3a"
			},
			{
				"placeholder": "Add option",
				"value": "It’s a function used by build tools and uglifiers to provide the fastest build times and hot module reloads",
				"type": "radio",
				"id": "b4ca60b8-63d5-4a3a-b1fc-a67bb9045ae3",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"value": "It’s not recommended because it’s deprecated",
				"type": "radio",
				"id": "c6e7f307-7f3f-44f5-9303-dda528d81b7f",
				"placeholder": "Add option"
			},
			{
				"id": "27b84cf5-494b-4ed3-a12a-b37fa4bf68cd",
				"type": "radio",
				"value": "It’s only used for older browsers when code is transpiled because JS runs way faster when code is ran in eval",
				"placeholder": "Add option",
				"blockType": "text"
			}
		],
		"status": "closed",
		"openingTime": null,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "value": "color", "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "id": "db1d4d07-16ed-4031-8fe4-b5f502063844", "value": "radio" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function"
			},
			{
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"value": "block scope"
			},
			{
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a",
				"value": "function scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"value": "module scope"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			},
			{
				"value": "It is not recommended because it opens a security leak, eval is evil",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe"
			}
		],
		"codeBlock": ""
	},
	{
		"status": "new",
		"category": "javascript",
		"pollNumber": 63,
		"question": "In JS, scopes are important to know, but with what kind of scopes does JS go?",
		"answers": [
			{
				"placeholder": "Add option",
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "function scope",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "dc7ac71c-7532-4e29-883e-588f8e36617f",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "run-time scope"
			},
			{
				"type": "radio",
				"id": "81f2b46d-812e-4dc3-80b7-c70946695122",
				"placeholder": "Add option",
				"value": "inline-block scope",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "1d3f8784-6cbc-47f6-96ae-2a620a78b1eb",
				"value": "colono scope",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "7f766d76-8042-4eb1-9c51-64685db82ef5",
				"value": "\"this\" scope",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "object scope",
				"blockType": "text",
				"id": "c2df9801-a137-40ae-9b62-e4fafd96bda0"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "b366ad87-359c-417b-938b-69055ba0880a",
				"value": "MVP scope"
			},
			{
				"id": "b9b7fa73-1458-4aa0-a5e8-72171ee93cf2",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "dynamic scope"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "lexical scope"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2",
				"blockType": "text",
				"value": "module scope"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f",
				"value": "global scope",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "afc85054-6567-41fa-8392-a0153ad3b4b6",
				"value": "variable scope"
			},
			{
				"type": "radio",
				"id": "88b8516d-c705-4e91-aadd-62b2332f69e1",
				"placeholder": "Add option",
				"value": "react scope ",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "micro scope",
				"type": "radio",
				"id": "108c4292-94d1-462b-8a43-853bff8b04cc",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "ffb4a4bb-62ce-4777-9037-7151aa345fbe",
				"placeholder": "Add option",
				"value": "app scope",
				"blockType": "text"
			}
		],
		"codeBlock": "",
		"voted": [],
		"id": "851e9030-bd5f-4245-a026-c31eb8ab1a46",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "value": "<dbz>", "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "value": "hidden", "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			},
			{
				"value": "block scope",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			},
			{
				"value": "function scope",
				"id": "3fde5310-76c6-4d9c-9a6a-190376ea117a"
			},
			{
				"id": "c96331c7-6e24-45d1-8867-e6e732d9c096",
				"value": "lexical scope"
			},
			{
				"value": "module scope",
				"id": "c439b0dd-dcb4-470b-b590-bc3f411fa6d2"
			},
			{
				"value": "global scope",
				"id": "2937cdd9-f343-45e4-b297-7e968f23cc1f"
			}
		],
		"type": "checkbox",
		"openingTime": null
	},
	{
		"status": "closed",
		"pollNumber": 62,
		"voted": [],
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8", "value": "reset" },
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			},
			{
				"value": "The margins will collapse, meaning that the margin of the biggest element will win ",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b"
			},
			{
				"value": "debugger",
				"id": "d987a018-4259-438f-8baa-67cb031c3591"
			},
			{
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f"
			}
		],
		"question": "In JS, runtime errors are caught so be assured, can you explain how the following error occurred? ",
		"category": "javascript",
		"codeBlock": "(Error: \"[”FREE”, “KABISA”, “DRINKS”].toLowerCase()\" is not a function)",
		"id": "6359ddbd-1056-4ad5-b5c5-fe7d5f5046b7",
		"openingTime": null,
		"answers": [
			{
				"blockType": "text",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It occurred because you are trying to call a value as a function but the value is not a function",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "It occurred because you didn’t export your React component",
				"blockType": "text",
				"id": "d6259cbc-9a09-4f76-b42b-106907ded817",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "848216c9-32c4-4d32-b099-329cc04852f7",
				"value": "It occurred because you are trying to access a function before it is initialized",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "It occurred because the code was not transpiled ",
				"blockType": "text",
				"id": "a6a06bcc-e8f7-4e68-89ac-aa33e2c93c02",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "20ef4314-2dbf-4d87-b0c1-bdf253db172d",
				"value": "It occurred because the code was not polyfilled ",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "d744a6ce-e9f0-48f9-b8f4-abf21f15de0a",
				"value": "It occurred because it is a syntax error",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "It occurred because a variable name is missing ",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "8dc1892f-2713-4e5b-b40d-c968f1df009d"
			},
			{
				"type": "radio",
				"id": "2195789d-bc18-4430-9918-ebb32baed75d",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "It occurred because you forgot to include the necessary libraries"
			},
			{
				"id": "7abb5c29-86c7-47ab-a118-f8e0a8931741",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "It occured because you are running JS in an environment where usage of JS is limited"
			},
			{
				"type": "radio",
				"value": "It occurred because you are trying to access a property on a null object",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "739db4b7-a7d2-4f0f-8742-66f4b999a9fc"
			},
			{
				"value": "It occured because it’s not adhering the JS syntax",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "ff00c1c2-daa2-4191-8a81-636925358e6f"
			}
		],
		"type": "radio"
	},
	{
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"value": "line-height",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "id": "db1d4d07-16ed-4031-8fe4-b5f502063844", "value": "radio" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"value": "debugger"
			}
		],
		"answers": [
			{
				"blockType": "text",
				"value": "inspect",
				"placeholder": "Add option",
				"type": "radio",
				"id": "daa2b428-c4cb-41bc-a46c-48e458347ffd"
			},
			{
				"value": "return",
				"id": "556a98e7-253a-458e-b519-ffe42a10fd85",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "d262b52e-c281-4f01-a740-4c4f659a4de7",
				"placeholder": "Add option",
				"type": "radio",
				"value": "break",
				"blockType": "text"
			},
			{
				"value": "trace",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "b7bea478-6179-4875-8f0d-ba740aa67cf2",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "2ffcbbb6-16fb-43b1-bbe4-b815c0b1543a",
				"blockType": "text",
				"value": "console.log"
			},
			{
				"id": "d987a018-4259-438f-8baa-67cb031c3591",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "debugger"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "throw new error",
				"id": "f276807b-8f1a-44d3-b9d1-a26955372c5d",
				"type": "radio"
			},
			{
				"id": "9585ff5c-66ad-4174-bdc9-d752e0169adb",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "eval"
			},
			{
				"blockType": "text",
				"id": "db02c1f0-1936-4aae-80b6-ae2b9e381d02",
				"placeholder": "Add option",
				"value": "By installing the debug.js package",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "dda0b3d7-4175-4178-aa1c-9199f514886f",
				"value": "It’s not a JS feature but something default since Chrome 47"
			}
		],
		"codeBlock": "",
		"status": "closed",
		"type": "radio",
		"question": "For the 50th time now it’s hard to come up with a question rhyme, but what in JS is a statement that halts execution of code and allows to inspect it in the browser at runtime?",
		"pollNumber": 61,
		"openingTime": null,
		"id": "fba1e165-93dc-400b-9b12-474ec77ece68",
		"voted": [],
		"category": "javascript"
	},
	{
		"type": "checkbox",
		"id": "ec015e3a-a0dc-4e42-8424-382475b3bd46",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary"
			},
			{ "value": "color", "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "value": "radio", "id": "db1d4d07-16ed-4031-8fe4-b5f502063844" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3"
			},
			{
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			}
		],
		"voted": [],
		"status": "closed",
		"category": "css",
		"codeBlock": "",
		"openingTime": null,
		"pollNumber": 60,
		"question": "In CSS, when block level element margins vertically collide, what explanation from this behaviour can you provide?",
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "The adjacent element will dissappear",
				"id": "ea02ed2c-c22a-497d-983f-73000725e8a1"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "ae5aef4a-9ce6-42a5-b2fd-ba8d455a52b4",
				"value": "The adjacent block element will behave as inline element"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "d95894eb-ee5f-42eb-9267-202468d05171",
				"value": "Nothing, it will just behave as instructed in CSS or default browser styles are applied",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "b492cb62-3d59-4dac-8311-32cc4e5a7a7b",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "The margins will collapse, meaning that the margin of the biggest element will win "
			},
			{
				"value": "The adjacent block element will be out of the document flow",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "7751f427-8984-4220-a230-6b61d3602ed6",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "The adjacent block element will ignore all CSS rules applied",
				"id": "c6d8ed1a-6be3-443c-8133-e340e653c3e2",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "daa2b428-c4cb-41bc-a46c-48e458347ffd",
				"blockType": "text",
				"value": "Margins will be removed from both elements ",
				"type": "radio"
			}
		]
	},
	{
		"type": "checkbox",
		"openingTime": null,
		"id": "e9be1513-8833-47b6-8ba9-8b3c74f1fbe8",
		"codeBlock": "",
		"voted": [],
		"answers": [
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "1ac970bf-1ff9-4a00-8e44-188c967e07d0",
				"value": "flex-contain"
			},
			{
				"value": "contain",
				"type": "radio",
				"placeholder": "Add option",
				"id": "c3801bb7-b4bb-44df-8d56-81b3ebaad941",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "currently not possible with flexbox but will come with CSS4",
				"id": "fcc51844-fc40-4d18-b625-41b4ae2eefbd",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "container-wrap",
				"blockType": "text",
				"type": "radio",
				"id": "12ede4c4-0144-4c6b-95b1-5067200d80f7"
			},
			{
				"blockType": "text",
				"id": "c155b868-5791-4341-9a57-d49d0a88fd35",
				"placeholder": "Add option",
				"type": "radio",
				"value": "overflow-wrap"
			},
			{
				"value": "flex-burrito",
				"placeholder": "Add option",
				"id": "7abe8172-2794-4b9f-89d1-79668b619fcd",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "9404521e-646f-487b-90cd-b65e0963d634",
				"type": "radio",
				"value": "apply a class “wrapper” to a html element will do it ",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "784a2706-f037-4210-8d5c-4431585e2bb4",
				"value": "flex-shrink",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "flex-grow",
				"id": "aed48ac6-c158-4399-9840-515456171f6c",
				"type": "radio"
			},
			{
				"value": "flex",
				"placeholder": "Add option",
				"id": "b3849543-f133-4686-a698-9b717b738796",
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "flex-wrap",
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"type": "radio"
			},
			{
				"value": "flex-basis",
				"id": "61d74de0-aa84-40fd-ab78-8462f1c38922",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "max-width",
				"type": "radio",
				"id": "ea02ed2c-c22a-497d-983f-73000725e8a1",
				"blockType": "text"
			}
		],
		"pollNumber": 59,
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a",
				"value": "The effect is an infinite loop, due to circularity "
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "value": "<dbz>", "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"value": "Block level elements take the width of the entire row",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3", "value": "color" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "id": "db1d4d07-16ed-4031-8fe4-b5f502063844", "value": "radio" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{
				"id": "32f418cf-3fab-4ca1-a081-70d9e683afe3",
				"value": "flex-wrap"
			}
		],
		"status": "closed",
		"question": "For CSS devs this might be a no-brainer, but what flex property makes sure items are forced on multiple lines when they don’t fit their container?",
		"category": "css"
	},
	{
		"status": "closed",
		"openingTime": null,
		"id": "2d11134c-28a2-4b0b-9d5d-fcc52f363c75",
		"pollNumber": 58,
		"codeBlock": "",
		"answers": [
			{
				"value": "color",
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "7cb20a35-249d-44c5-b92f-3940e4135d91"
			},
			{
				"placeholder": "Add option",
				"id": "bacdceab-fe62-48bb-a958-606503549537",
				"value": "country",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "message",
				"id": "5a671f46-236d-4d04-94d9-2c5a797bec87",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "hidden",
				"id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "radio",
				"id": "db1d4d07-16ed-4031-8fe4-b5f502063844",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "91372ccf-4ced-4625-b1b3-a709ce7b862c",
				"value": "tv",
				"blockType": "text"
			},
			{
				"id": "f868c635-7e94-407c-8c2a-05f6acd17638",
				"value": "blank",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"id": "326a96ff-f5f0-4c18-b902-784ab87aa97c",
				"type": "radio",
				"blockType": "text",
				"value": "video"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8",
				"blockType": "text",
				"value": "reset"
			},
			{
				"blockType": "text",
				"value": "code",
				"id": "5166c210-bd60-4f1c-99d5-2c8b11e85d0c",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "switch",
				"id": "284aefc7-2627-43c4-adfd-99bb1b166ed8",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "63c6e93b-db1a-4e27-a370-ea495130dbfc",
				"type": "radio",
				"value": "gender"
			},
			{
				"id": "1ac970bf-1ff9-4a00-8e44-188c967e07d0",
				"value": "url",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			}
		],
		"question": "In HTML, input types come with a lot of various values, what are existing ones that you may already have used?",
		"type": "checkbox",
		"category": "html",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{ "value": "color", "id": "9eadd81b-a378-414a-827b-7c9d105b1ca3" },
			{ "id": "8ee6ed67-f4f3-4c90-99ab-419fd22f6cbc", "value": "hidden" },
			{ "id": "db1d4d07-16ed-4031-8fe4-b5f502063844", "value": "radio" },
			{ "value": "reset", "id": "3ca90d03-4c4b-4c68-920a-cc03ce36dbf8" },
			{ "id": "1ac970bf-1ff9-4a00-8e44-188c967e07d0", "value": "url" }
		],
		"voted": []
	},
	{
		"answers": [
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row",
				"blockType": "text"
			},
			{
				"id": "aacbda67-363e-44da-ae60-50237596814c",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Block level elements are the default for every element"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "cf2b5eb1-afce-40f5-8048-5bc9d7450fea",
				"type": "radio",
				"value": "Setting flex or inline-flex on an element means the element is block or inline"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "<button> is a block level element because it’s looking like a “block”",
				"id": "8744c3e1-6516-4e94-a719-724d96a83a93"
			},
			{
				"value": "When a block element is followed by an inline, they are both positioned in the same row next to each other ",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "aef8dd8c-361b-44a1-a22f-639e1efaf0f8"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "c99e8e72-7b8a-4350-9dcf-bc4564cf5bec",
				"value": "A <span> with “width: 100%” will automatically become a block level element "
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "Setting “display:block” on an inline element will make the element block level",
				"id": "9ebc4b2b-142a-4b75-bf50-79c221fe4822"
			},
			{
				"id": "9eadd81b-a378-414a-827b-7c9d105b1ca3",
				"type": "radio",
				"value": "There is a specific CSS selector that selects only block level elements",
				"blockType": "text",
				"placeholder": "Add option"
			}
		],
		"id": "3110f5ab-1865-4ed2-b40b-0484c0099382",
		"question": "In HTML, elements are either block or inline, what are facts to know that’ll make your skills shine?",
		"codeBlock": "",
		"category": "html",
		"voted": [],
		"type": "checkbox",
		"openingTime": 1665387799196,
		"status": "closed",
		"pollNumber": 57,
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"value": "“this” is determined on how a function is called",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0"
			},
			{
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			},
			{
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"value": "Block level elements take the width of the entire row"
			},
			{
				"value": "An inline element does not start on a new line and it only takes up as much width as necessary",
				"id": "ce4df6e8-727d-46a1-b567-9421382a9694"
			},
			{
				"id": "9ebc4b2b-142a-4b75-bf50-79c221fe4822",
				"value": "Setting “display:block” on an inline element will make the element block level"
			}
		]
	},
	{
		"id": "d03b72d1-7478-4c82-a9ab-2ff07f6666b9",
		"pollNumber": 56,
		"openingTime": null,
		"status": "closed",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a",
				"value": "line-height"
			}
		],
		"voted": [],
		"answers": [
			{
				"id": "957fb965-562c-499a-8b65-1768935101ef",
				"value": "height",
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio"
			},
			{
				"value": "padding",
				"placeholder": "Add option",
				"id": "c79acdc6-183d-4ecc-a227-eead616f0dd3",
				"blockType": "code",
				"type": "radio"
			},
			{
				"id": "14ee8ebb-1433-4270-8d3a-6543c506c591",
				"placeholder": "Add option",
				"value": "margin",
				"type": "radio",
				"blockType": "code"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"value": "flexbox",
				"type": "radio",
				"id": "fc43c80f-8456-4d0e-87cd-62180cd2fb05"
			},
			{
				"placeholder": "Add option",
				"id": "d9c9fa14-535d-4b24-8ae4-93b63b5abbbf",
				"blockType": "code",
				"type": "radio",
				"value": "grid"
			},
			{
				"value": "gap",
				"type": "radio",
				"id": "3f7d3c38-2025-4340-b133-3e57f5194940",
				"placeholder": "Add option",
				"blockType": "code"
			},
			{
				"value": "text-space",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code",
				"id": "6d792f32-b790-488f-8d82-46eb87d03775"
			},
			{
				"type": "radio",
				"blockType": "code",
				"placeholder": "Add option",
				"id": "eb5b2c65-ef0b-4200-967d-7b30066dd76e",
				"value": "line-gap"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "You can't control it, it depends on the font",
				"blockType": "code",
				"id": "423fa5c2-369f-47b7-820d-e945cde32647"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code",
				"value": "justify-content: space-between",
				"id": "d749370b-6555-467f-8392-e96fb37f8afd"
			},
			{
				"placeholder": "Add option",
				"value": "line-height",
				"type": "radio",
				"blockType": "code",
				"id": "4ed9cbb1-2fb4-4ffb-a258-518174bb4d7a"
			},
			{
				"blockType": "code",
				"value": "CSS is unable to do this, but in JS there is a way where you can calculate the height of each character and check line by line to determine the distance",
				"id": "b0987f23-4b8e-4e61-b0f2-7c05849e738d",
				"type": "radio",
				"placeholder": "Add option"
			}
		],
		"question": "In CSS, for readability it’s important to have vertical spacing for text inbetween, what property do you use that make your text look neat and clean?",
		"codeBlock": "",
		"type": "radio",
		"category": "css"
	},
	{
		"pollNumber": 55,
		"question": "Babel is used in projects many times, now what does it do and what are it’s facts,  for sure is that it’s quite hard to come up with these rhymes!",
		"voted": [],
		"category": "javascript",
		"id": "9ff76fdf-b0c1-49d5-92d5-aef0dca5458b",
		"codeBlock": "",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			}
		],
		"openingTime": null,
		"type": "radio",
		"answers": [
			{
				"blockType": "text",
				"id": "45f5bbab-3aa9-4bc7-8b1b-8ceb300c7e6f",
				"value": "It’s a special tool designed by Google to make the web a better place specially aimed at IE11",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "It’s a tool to transform your code to make it more efficient and faster in browsers",
				"id": "7c60d897-60dc-4b7c-8184-121067bc2038",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "c19a6b37-5450-46c9-b801-ffe560709b26",
				"placeholder": "Add option",
				"value": "When using Babel in your app you are adhering to the code quality standards according to the EcmaScript committee. This allows your company to wear the Babel quality mark. Once a year Babel auditors randomly visit companies for code quality inspections and taking coding assignments with the people working at the company"
			},
			{
				"value": "Babel detects what features a browser has to offer. You can serve great experiences for each user per device",
				"placeholder": "Add option",
				"id": "faff9b44-5735-4a2d-88f2-53c8c10b1fc2",
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Babel is a tool that converts not native supported browser code into backwards compatible code so you can write the newest features in all browsers",
				"type": "radio",
				"id": "6808c73e-c93e-4d4d-955b-4d9fcfbaaf65"
			},
			{
				"id": "61063dfe-dc53-4e0d-8344-6ff1b17e3eb7",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Babel has nothing to do with web, it’s just a one-on-one interaction (mostly used in user research fields) to gather information from a person, which is called “even Babelen” that has been \"accepted\" as the multilingual term people understand",
				"type": "radio"
			},
			{
				"id": "60399f16-e182-4a5d-9b74-40bd10f7b7ab",
				"type": "radio",
				"value": "It’s a library you can include that provides functions like “.map” or “.reduce” out of the box and places those methods on the datatype they belong to",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "9917128d-c4a5-415c-9c51-443e294ad5bc",
				"placeholder": "Add option",
				"value": "Babel-testing-library is a fast and popular testing framework ",
				"type": "radio"
			},
			{
				"id": "735a89ef-8d5d-4a75-9803-33c48a82b82e",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Babel is a tool that allows developers to test their websites and apps in different emulated browsers",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "a92e09c7-4c42-45df-85de-b56366b32375",
				"value": "Babel compiles JavaScript code to a low level language that provides low level languages like C or Rust to run in the browser",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "Babel is a module bundler like webpack or rollup",
				"type": "radio",
				"id": "b3f773c7-5ff8-4704-975d-79271aeecd6f",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Babel is software to track all your hours in, manage your resources or propose your time off (the nicer competitor to Oodoo)",
				"id": "957fb965-562c-499a-8b65-1768935101ef",
				"type": "radio"
			}
		],
		"status": "closed"
	},
	{
		"category": "html",
		"type": "checkbox",
		"answers": [
			{
				"value": "<h7>",
				"blockType": "code",
				"placeholder": "Add option",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"type": "radio"
			},
			{
				"blockType": "code",
				"value": "<h6>",
				"placeholder": "Add option",
				"id": "686af49e-1e8f-43d1-a9cb-02028412917b",
				"type": "radio"
			},
			{
				"blockType": "code",
				"value": "<legend>",
				"type": "radio",
				"id": "739580c9-725e-4bb3-95ef-3955e8691776",
				"placeholder": "Add option"
			},
			{
				"blockType": "code",
				"type": "radio",
				"value": "<option>",
				"placeholder": "Add option",
				"id": "5d7df2bb-c376-4b62-b0bc-8c75e11855d3"
			},
			{
				"blockType": "code",
				"id": "216e678a-b9c9-43f1-92f0-f071a8e16459",
				"value": "<flex>",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "code",
				"type": "radio",
				"placeholder": "Add option",
				"value": "<grid>",
				"id": "73ae1614-e0df-4878-b3be-13e81b4a2ee3"
			},
			{
				"id": "3971d747-59f2-4ddd-b76e-6f6fa4d40dc0",
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"value": "<name>"
			},
			{
				"blockType": "code",
				"type": "radio",
				"placeholder": "Add option",
				"id": "2a3bf16d-08d9-482d-ba64-4fbea2059c9b",
				"value": "<hr>"
			},
			{
				"type": "radio",
				"blockType": "code",
				"placeholder": "Add option",
				"value": "<li>",
				"id": "3aa0777b-defc-488a-a20f-c2689c3a4c54"
			},
			{
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"value": "<meter>",
				"id": "9f9d9033-df88-45ea-a4bc-93a3b7db57ee"
			},
			{
				"type": "radio",
				"blockType": "code",
				"id": "4d288058-e3b3-4c1d-8dbf-c6029126ff23",
				"value": "<fortissimo>",
				"placeholder": "Add option"
			},
			{
				"blockType": "code",
				"id": "afe30cec-6d40-4e19-8476-f6ee6f03e93e",
				"placeholder": "Add option",
				"value": "<pre>",
				"type": "radio"
			},
			{
				"value": "<textarea>",
				"blockType": "code",
				"id": "e7b7def2-513d-4e7d-9c75-4902fc963473",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "<cookie>",
				"id": "d30a130b-31d4-4661-b543-e4aa387644f4",
				"blockType": "code"
			},
			{
				"id": "ee8a6af5-b27c-4c09-98ce-085a687fdb5a",
				"blockType": "code",
				"value": "<photo>",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "<serverside>",
				"blockType": "code",
				"type": "radio",
				"placeholder": "Add option",
				"id": "45f5bbab-3aa9-4bc7-8b1b-8ceb300c7e6f"
			}
		],
		"id": "02dd9811-e45b-4457-8536-da9f390d676c",
		"voted": [],
		"question": "Part 3: While writing HTML, semantic tags are to keep in mind, which tags you see listed here are false and not defined? ",
		"status": "closed",
		"openingTime": 1666078626448,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "value": "<dbz>", "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			},
			{
				"value": "Methods like call(), apply()and bind() can refer thisto any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			},
			{ "id": "216e678a-b9c9-43f1-92f0-f071a8e16459", "value": "<flex>" },
			{ "value": "<grid>", "id": "73ae1614-e0df-4878-b3be-13e81b4a2ee3" },
			{ "value": "<name>", "id": "3971d747-59f2-4ddd-b76e-6f6fa4d40dc0" },
			{
				"id": "4d288058-e3b3-4c1d-8dbf-c6029126ff23",
				"value": "<fortissimo>"
			},
			{
				"value": "<cookie>",
				"id": "d30a130b-31d4-4661-b543-e4aa387644f4"
			},
			{
				"value": "<serverside>",
				"id": "45f5bbab-3aa9-4bc7-8b1b-8ceb300c7e6f"
			},
			{ "id": "ee8a6af5-b27c-4c09-98ce-085a687fdb5a", "value": "<photo>" }
		],
		"pollNumber": 54,
		"codeBlock": ""
	},
	{
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "value": "<dbz>", "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61" },
			{
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there"
			},
			{
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			},
			{
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e",
				"value": "arrow functions doesn’t have a “this” context"
			},
			{
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3",
				"value": "Methods like call(), apply()and bind() can refer thisto any object"
			},
			{
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "“this” is determined on how a function is called"
			}
		],
		"status": "closed",
		"openingTime": 1665992663657,
		"answers": [
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"blockType": "text",
				"value": "“this” is determined on how a function is called"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "“this” can only be used in class based code, if you use it outside it’ll return undefined",
				"id": "4a0e7bb0-5423-4c10-ac96-86d76dabe1a9",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "Methods like call(), apply()and bind() can refer this to any object",
				"id": "0505ae05-c4b4-49d4-9d22-6addb75683c3"
			},
			{
				"placeholder": "Add option",
				"value": "“this” always refers to the window object",
				"type": "radio",
				"id": "0b220fb2-2e6f-4325-a45e-288932cad711",
				"blockType": "text"
			},
			{
				"value": "The value of “this” depends on the preferences set by the user in the browser ",
				"placeholder": "Add option",
				"id": "de54b60e-750a-4e15-b489-41f42734e24c",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "c14bacc1-8e97-4de1-a515-e058b9dd2685",
				"value": "“this” is the same as “that” "
			},
			{
				"id": "f1b94e2c-e68a-4f90-8640-18f67dbd1362",
				"value": "“this” reference is preserved with var ",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "arrow functions doesn’t have a “this” context",
				"id": "bb11bd65-08dc-439e-a79a-f95ba083734e"
			}
		],
		"category": "javascript",
		"id": "8cb9cb38-1887-43f5-aa79-e12665449bdd",
		"codeBlock": "",
		"question": "In JS, the value of the “this” keyword depend, what are facts you know to about it to recommend to others who practise frontend?",
		"voted": [],
		"type": "checkbox",
		"pollNumber": 53
	},
	{
		"codeSandboxExample": "",
		"type": "radio",
		"pollNumber": 52,
		"openingTime": null,
		"question": "In CSS, centering an element on both axis is a common thing to embed, now what is one way to do this which may stick in your head?",
		"id": "4d7e0811-d0af-41d2-834e-eabd6b89655f",
		"codeBlock": "",
		"category": "css",
		"answers": [
			{
				"id": "8d73fb79-a808-4df9-a9eb-8c61bfc241de",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code",
				"value": ".center { \n   position: middle; \n}",
				"autoFocus": false
			},
			{
				"value": ".center {  \n  display: flex;  \t\n  justify-content: center;   \n  align-items: center; \n}",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "code",
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"type": "radio"
			},
			{
				"autoFocus": false,
				"placeholder": "Add option",
				"id": "0394bf39-c3f2-48f2-a084-73a4f5abda69",
				"type": "radio",
				"value": ".center {  \n  align-x: center; \n  align-y: center; \n}",
				"blockType": "code"
			},
			{
				"id": "8532d476-4c24-4154-a260-0c2f88c44094",
				"placeholder": "Add option",
				"type": "radio",
				"value": ".center {  \t\n  center: true; \n}",
				"blockType": "code",
				"autoFocus": false
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio",
				"blockType": "text",
				"id": "5703adf3-67a0-4c0c-99d1-f40b2319bb49",
				"value": "Just using a class named “.center” will do this automatically"
			},
			{
				"id": "e9821040-8591-4711-ad52-10a262997762",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"blockType": "code",
				"value": "By using the <center> tag in HTML"
			},
			{
				"autoFocus": false,
				"blockType": "text",
				"id": "570b7310-b8d1-4221-859a-062a24f26cd0",
				"value": "By going to page layout > page setup > layout > select “center” from the “alignment” dropdown list",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"id": "f9908a5f-960a-43a6-b80e-e4e4a38681f9",
				"autoFocus": false,
				"value": "By using divs with a determined fixed width and transparent background which take up space and push content to the middle",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"autoFocus": true,
				"value": ".center {  \t\n   vertical-alignment: \"horizontal\"\n}",
				"id": "accda345-6a7a-46e2-af9f-4db103e15fa1",
				"placeholder": "Add option",
				"blockType": "text"
			}
		],
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			},
			{
				"value": ".parent {\n  position: relative;\n}\n.child {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16"
			},
			{
				"id": "bea9de41-11d0-4f2b-b035-160daa0a5be9",
				"value": ".center {  \tdisplay: flex;  \tjustify-content: center;   align-items: center; }"
			}
		],
		"voted": [],
		"status": "new"
	},
	{
		"voted": [],
		"status": "closed",
		"question": "In Web, apps can be XSS (Cross Site Scripting) tormented, what are things to consider to have this prevented?",
		"codeBlock": "",
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "If you allow user input, make sure it’s limited or sanitized: In this case never allow certain special characters to be put in the database directly and be in control of the output. ",
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "43a4ba28-05ac-4c2d-893f-f93f3122baa1",
				"value": "If you want to prevent XSS, you must make sure users can’t toggle developer tools when using your app ",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "XSS was a problem up until awhile ago, but modern web frameworks resolved this issue automatically",
				"placeholder": "Add option",
				"type": "radio",
				"id": "5fdc837d-4977-4653-bf86-0c5654fa2791",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "7097b6b3-9f94-4d12-be9b-87893a9a4602",
				"type": "radio",
				"value": "XSS is not a problem, if you communicate to your users that they should use your app carefully you should always trust your users "
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "XSS is nothing dangerous, it’s a tool that allow developers to use scripts on many sites at once. In short, this gives the possibility to work on multiple apps/sites simultaneously",
				"id": "a52db799-80cb-421e-a349-fcc0380c1730"
			},
			{
				"value": "You prevent XSS by setting the Access-Control-Allow-Origin: property",
				"blockType": "text",
				"id": "03fbbb9a-49cd-4635-b91f-0746e1ee2519",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b",
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "You prevent XSS by making sure to disable JavaScript for users in their browsers",
				"id": "ad617ee8-ae38-4605-8c11-650af4baf026"
			},
			{
				"value": "Host your app with https, XSS then won’t have a chance",
				"id": "00cc9ec9-f13a-4249-99c7-eba7f0c19247",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "You often see developers creating a .xss file in their project root. In there you can define rules to prevent XSS attacks",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "a5a04528-8f9f-452e-ae90-9001392de24d"
			},
			{
				"placeholder": "Add option",
				"id": "f43ec046-0138-4ef3-a232-36a769f28b16",
				"value": "XSS only happens in outdated browsers, so make sure your users only access your app in modern browsers ",
				"blockType": "text",
				"type": "radio"
			}
		],
		"pollNumber": 51,
		"type": "checkbox",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a",
				"value": "<apple>"
			},
			{ "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61", "value": "<dbz>" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "value": "<card>", "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1" },
			{ "value": "<vue>", "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b" },
			{
				"value": "Beware for HTML attributes with special meanings like src from <script> tag or href from <a> because this can be misused if you allow user input there",
				"id": "9c72fa19-6f7f-4020-ba97-fed125e4fe8b"
			}
		],
		"openingTime": null,
		"category": "general-frontend",
		"id": "ef85354e-525c-4377-b38c-bcb07da1cc56"
	},
	{
		"answers": [
			{
				"id": "1518fb8f-7151-4f55-b833-1b6c5cd06ce5",
				"placeholder": "Add option",
				"type": "radio",
				"value": "<address>",
				"blockType": "code"
			},
			{
				"blockType": "text",
				"id": "2ff6cdf1-c244-46a4-bc62-aa7efce54f6f",
				"value": "<article>",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "<apple>",
				"blockType": "text",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{
				"id": "d73ddf38-fe0a-4bfc-b652-05b95b5cac5b",
				"type": "radio",
				"placeholder": "Add option",
				"value": "<aside>",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "<audio>",
				"id": "5e0dd14c-c19b-42a0-b255-80430b6dc9a3",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "36bf1b5f-0652-45b9-b1d6-76b79adf50cc",
				"type": "radio",
				"value": "<base>"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "<dbz>",
				"id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "<data>",
				"id": "38ea832e-3426-459f-8cd6-b0c34aec6bc9",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "<react>",
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"blockType": "text"
			},
			{
				"value": "<ruby>",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "279d0160-a9c7-4dd0-8897-dc32d67c7a8a"
			},
			{
				"placeholder": "Add option",
				"id": "a4948aec-bada-4c59-b083-9155a6f8b8b1",
				"blockType": "text",
				"type": "radio",
				"value": "<card>"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "fe586458-735a-4ecc-b72b-0459534b9d76",
				"value": "<dd>"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "b015c56d-7a81-4e78-8c9b-7e874c907985",
				"placeholder": "Add option",
				"value": "<center>"
			},
			{
				"id": "87b96802-bb31-47dd-802f-be0bfc0e02a5",
				"value": "<mark>",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"value": "<figure>",
				"placeholder": "Add option",
				"id": "2ec1d87f-f292-45dc-9b46-67cda74a6429",
				"type": "radio"
			},
			{
				"id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "<vue>"
			}
		],
		"id": "8420118b-7e60-4f4c-b9ac-9ddceb197f75",
		"openingTime": null,
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"value": "<apple>",
				"id": "d4ea34ba-a642-45ff-8547-10882f06023a"
			},
			{ "value": "<dbz>", "id": "42b33efe-15a9-4bb7-b88b-17d1a6cfec61" },
			{
				"id": "6347176f-b796-4c3a-9319-ba2b9584fb1d",
				"value": "<react>"
			},
			{ "id": "a4948aec-bada-4c59-b083-9155a6f8b8b1", "value": "<card>" },
			{ "id": "15ab5784-357c-4c9d-9a13-fdbea7b9da2b", "value": "<vue>" }
		],
		"type": "radio",
		"voted": [],
		"category": "html",
		"question": "Part 2: While writing HTML, semantic tags are to keep in mind, which tags you see listed here are false and not defined? ",
		"codeBlock": "",
		"status": "closed",
		"pollNumber": 50
	},
	{
		"id": "7abc189a-961a-48a8-ad7a-b319ee50372e",
		"status": "closed",
		"openingTime": null,
		"category": "react",
		"question": "See the code on your screen, what is the effect of the code that is seen? ",
		"pollNumber": 49,
		"answers": [
			{
				"id": "d0508c23-d4fd-4836-b402-e364ed5d3af2",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "The effect is that the count variable is updated from 0 to 1, because the useEffect will run once on pageload"
			},
			{
				"blockType": "text",
				"id": "a839a7c3-a6f4-4800-8481-12ccde3d8c00",
				"value": "The effect is that the count variable is not updated and stays 0, because it never runs useEffect on the first render, only when you update the “count” value in another place first",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"id": "c4fdfe41-aa69-4715-83ce-b2a5f5555453",
				"value": "The effect is a performance improvement, because React wants to know what state variable it should update so when you pass that as dependency it helps React identifying state (kinda like “keys”) ",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "49ec256c-95e3-4aa2-bac1-ea44ba75e771",
				"blockType": "text",
				"value": "The effect is that all useState’s in this component are updated",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "The effect is an infinite loop, due to circularity ",
				"placeholder": "Add option",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			},
			{
				"id": "1518fb8f-7151-4f55-b833-1b6c5cd06ce5",
				"type": "radio",
				"value": "The effect is that you will get an error, because the useEffect rule is that you can’t update state inside a useEffect hook",
				"blockType": "text",
				"placeholder": "Add option"
			}
		],
		"codeBlock": "import \"./styles.css\";\nimport React, { useState } from \"react\";\n\nexport default function App() {\n  const [count, setCount] = useState(0);\n\tconst [count2, setCount2] = useState(10);\n  \n  React.useEffect(() => {\n    setCount(count + 1);\n  }, [count]);\n\n  return (\n    <div className=\"App\">\n      <h1>{count}</h1>\n    </div>\n  );\n}",
		"voted": [],
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			},
			{
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"value": "The effect is an infinite loop, due to circularity ",
				"id": "9b9e9b8f-3028-4dd9-ac2a-984647a08d8a"
			}
		],
		"type": "radio"
	},
	{
		"openingTime": null,
		"id": "21e57202-a8fd-4b91-9d97-d02b03359a89",
		"answers": [
			{
				"placeholder": "Add option",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format ",
				"blockType": "text",
				"type": "radio",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e"
			},
			{
				"placeholder": "Add option",
				"value": "It’s a way to validate JSON and check for null and undefined values. Stringify automatically turns everything into a string and removes null and undefined values",
				"id": "9274036c-7bb7-4e09-9a29-212af3029210",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "5abc2c08-1f79-434d-949e-bf8b08f15bc4",
				"value": "It’s a way to sanitize data before sending to the server",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "5cbf34df-26d4-451b-9e06-c910bd26227b",
				"blockType": "text",
				"value": "It’s a way to improve performance when sending data over the wire",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "ed980571-46ec-43a2-a143-69a4b328c880",
				"placeholder": "Add option",
				"value": "It’s just a tradition we all keep in place and is passed on for a long time from senior devs to junior devs",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "With JSON.stringify we care about longevity of transferring data over HTTP. It’s is the “greener” and so to say the “environment friendly” way of sending data ",
				"id": "b032e10b-6111-425d-b830-e36dcbd76cc2",
				"placeholder": "Add option"
			},
			{
				"value": "It hasn’t got a real purpose anymore with modern browsers have the built-in SendData API available",
				"id": "d0508c23-d4fd-4836-b402-e364ed5d3af2",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			}
		],
		"question": "In JS, JSON.stringify() has a purpose, what knowledge about that can you surface?",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"value": "It blocks the link from following the url",
				"id": "45811d31-fb63-44fa-bf00-074924b71525"
			},
			{
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)"
			},
			{
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"value": "When sending data to a web server, it’s often needed that the data has to be in a serialized JSON string format "
			}
		],
		"status": "closed",
		"type": "radio",
		"codeBlock": "",
		"voted": [],
		"category": "javascript",
		"pollNumber": 48
	},
	{
		"id": "cb4e41bb-23fe-4a36-9233-b666ab00c922",
		"type": "radio",
		"pollNumber": 47,
		"voted": [],
		"openingTime": null,
		"answers": [
			{
				"id": "3ca9f093-d762-4e36-80c3-7ba090de794f",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "Circling (event flow cycle)"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "Square (event square model: top, left, right, bottom)",
				"id": "8aa5643f-35a5-43fa-b9c2-b8e7459a676b",
				"blockType": "text"
			},
			{
				"id": "9e214139-4cb5-4fdf-b417-b7e5ae8e568c",
				"type": "radio",
				"value": "Passing down events (Event delegation)",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe",
				"blockType": "text",
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"placeholder": "Add option"
			},
			{
				"value": "EventEffect (events on dependency mamagement)",
				"blockType": "text",
				"type": "radio",
				"id": "b720ca6d-c9b5-4624-a3e5-1c2ac9d9594e",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "6fef370e-bd28-47f6-b740-ed870d3733cb",
				"type": "radio",
				"value": "Synthetic event flow"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "d96cc921-1d4d-456e-b6ce-9adec656e9b8",
				"value": "Event flow artifacts"
			},
			{
				"placeholder": "Add option",
				"id": "317cc6ef-d660-42d2-8457-b458b68d69d1",
				"type": "radio",
				"value": "Event loop (queue based)",
				"blockType": "text"
			},
			{
				"value": "What the heck are you talking about? There is no such thing as event flows",
				"id": "90d693e7-6fe0-4efa-8c9d-9ce8d602d13e",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			}
		],
		"category": "javascript",
		"question": "In HTML, a web page has event flows built into, now what are the ways it flows through?",
		"codeBlock": "",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"value": "Top to Bottom(Event Capturing) and Bottom to Top (Event Bubbling)",
				"id": "34c18a18-3671-4769-af9a-33c9092b2bfe"
			}
		],
		"status": "closed"
	},
	{
		"openingTime": null,
		"pollNumber": 46,
		"voted": [],
		"question": "In JS, preventDefault is used to prevent default user-agent actions, but when having preventDefault and clicking on <a> do you know what happens?",
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "ab661612-5a25-4b05-873b-a534c850d851",
				"value": "It will create soft links (routing without page refresh)  instead of the default hard links (routing with page refresh)"
			},
			{
				"value": "It will disable a link tag and make it unclickable. Often used when you want to prevent the user from going to the next step when user data is required and still misses",
				"type": "radio",
				"id": "2e5d9f9a-3be0-461f-9992-64758379e52d",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "It will open a link in a new tab",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "b1d55de6-85f3-4166-aaf3-9d06b11d6aed",
				"type": "radio"
			},
			{
				"value": "It will open a link in the same tab",
				"id": "60c1978c-6cce-4268-9962-6469a38102c7",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"value": "It will change from behaviour from an <a> to what a <button> does",
				"placeholder": "Add option",
				"type": "radio",
				"id": "43b2718d-0558-4d4e-aaf4-163a00db6bfc"
			},
			{
				"value": "It will force the user to double click the link",
				"blockType": "text",
				"type": "radio",
				"id": "9b64a8a3-c990-4ed4-b708-fde8eb27840f",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "It will prevent that the current link won’t be taken into account for SEO",
				"id": "3ca9f093-d762-4e36-80c3-7ba090de794f"
			}
		],
		"codeBlock": "",
		"category": "javascript",
		"id": "1c15a030-0f06-4e6a-a00f-e6bbc3708d65",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"value": "Temporal API"
			},
			{
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "It blocks the link from following the url"
			}
		],
		"status": "closed",
		"type": "radio"
	},
	{
		"type": "radio",
		"id": "f025bc02-4652-48e9-8f21-6ec494a9c3fd",
		"category": "javascript",
		"status": "closed",
		"voted": [],
		"openingTime": null,
		"codeBlock": "",
		"question": "In JS, debounced function calls keeps your app lean, but what is a benefit that can be seen? ",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "Debouncing will delay function execution and reduce the amount of times a function fires based on a regular interval",
				"id": "b1d55de6-85f3-4166-aaf3-9d06b11d6aed"
			}
		],
		"pollNumber": 45,
		"answers": [
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"value": "Debouncing will batch a series of calls into a single call to prevent multiple calls "
			},
			{
				"placeholder": "Add option",
				"id": "ab661612-5a25-4b05-873b-a534c850d851",
				"value": "Debouncing is a technique to load your script in a lazy manner",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "Debounce.js is the new kid on the block concerning frontend frameworks that handles SSR, like Next.js and Remix",
				"id": "2e5d9f9a-3be0-461f-9992-64758379e52d",
				"blockType": "text",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Debouncing will delay function execution and reduce the amount of times a function fires based on a regular interval",
				"type": "radio",
				"id": "b1d55de6-85f3-4166-aaf3-9d06b11d6aed"
			},
			{
				"placeholder": "Add option",
				"value": "Debouncing is an option within developer tools to check the bounce rate of your users in your app ",
				"blockType": "text",
				"type": "radio",
				"id": "60c1978c-6cce-4268-9962-6469a38102c7"
			},
			{
				"blockType": "text",
				"id": "43b2718d-0558-4d4e-aaf4-163a00db6bfc",
				"type": "radio",
				"value": "Debouncing is a piece of code used to provide modern functionality on older browsers that do not natively support it",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "9b64a8a3-c990-4ed4-b708-fde8eb27840f",
				"value": "Debouncing doesn’t exist and is another mumbo jumbo term you made up again :@",
				"placeholder": "Add option",
				"type": "radio"
			}
		]
	},
	{
		"voted": [],
		"answers": [
			{
				"value": "const [2,3] = me",
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"blockType": "code",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "const [first, …rest] = me",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "code",
				"id": "fbcecb9a-6270-47bb-bcff-dd6f072e1aa3"
			},
			{
				"type": "radio",
				"id": "0522a3e0-295d-4c7c-bec9-d615d1ff0b34",
				"blockType": "code",
				"placeholder": "Add option",
				"value": "const [“Side project manager”, “FE Poll Master”] = me;"
			},
			{
				"id": "c4f6ba6a-cb61-4f03-b04a-4f7b85285944",
				"placeholder": "Add option",
				"blockType": "code",
				"value": "me.lastTwo()",
				"type": "radio"
			},
			{
				"value": "me.last().last()",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "code",
				"id": "898234e0-8054-4e39-8956-dbf70ea54206"
			},
			{
				"id": "e12b6321-b66e-4e58-ab76-def15a1e9d1b",
				"blockType": "code",
				"value": "me.pop()",
				"type": "radio",
				"placeholder": "Add option"
			}
		],
		"openingTime": null,
		"pollNumber": 44,
		"id": "7d406e7c-da85-459b-b23e-d83f614032d9",
		"status": "new",
		"question": "Don’t ask me why these polls all rhyme, but when I want to get the last 2 items of this array, how do you adjust the following line?",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			},
			{
				"value": "const [first, …rest] = me",
				"id": "fbcecb9a-6270-47bb-bcff-dd6f072e1aa3"
			}
		],
		"category": "javascript",
		"type": "radio",
		"codeBlock": "1 const me = {\n2   id: \"1\",\n3   name: \"Marciano\",\n4   what: [\"Tapping keyboards\", \"Side project manager\", \"FE Poll Master\"]\n5 }"
	},
	{
		"status": "closed",
		"type": "radio",
		"id": "ebf7d59e-d6fa-4b7b-a4ae-bb02ba309a00",
		"answers": [
			{
				"id": "6c4a8965-6c87-4a8a-9854-539d467e6678",
				"blockType": "text",
				"value": "Nothing, the Date object will stay but will be improved ",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "Nothing, because there is nothing wrong with the Date object",
				"type": "radio",
				"blockType": "text",
				"id": "febd9b9f-08e1-4c92-a20e-5b04e09d4ac4",
				"placeholder": "Add option"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "633de2e7-5fd3-4350-9b40-8a3e838c862b",
				"value": "Moment.js will be the replacement",
				"blockType": "text"
			},
			{
				"id": "525a453e-9f2e-4c2f-9cae-1b2a22e95c7f",
				"type": "radio",
				"value": "Date-fns will be the replacement",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "04b9d48f-3f83-4e77-af29-2c09384c44c6",
				"value": "Calendar API"
			},
			{
				"placeholder": "Add option",
				"value": "DateTime API",
				"type": "radio",
				"id": "92c1d319-2e57-46bf-93ab-047e5875d85a",
				"blockType": "text"
			},
			{
				"value": "Timezone API",
				"id": "b95a97d5-dfa0-42cb-937a-e257848f628c",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "ImprovedDate API",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "27169ec4-5aa9-4b6e-9e31-3744f11f54a1"
			},
			{
				"value": "Date v2.0 API",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "b040ab82-fbb0-46f9-8af9-212e3fda215c"
			},
			{
				"value": "The Date API will be deprecated eventually because most libraries handle it way better these days",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "45811d31-fb63-44fa-bf00-074924b71525",
				"type": "radio"
			}
		],
		"question": "In JS, `Date` has been a long-standing pain point in ECMAScript, now what is the name of the new upcoming API that will make the `Date` object get skipped?",
		"pollNumber": 43,
		"voted": [],
		"openingTime": null,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"value": "Temporal API",
				"id": "36a518f8-703c-4991-a1bc-94c45f0cf9e8"
			}
		],
		"category": "javascript",
		"codeBlock": ""
	},
	{
		"answers": [
			{
				"blockType": "text",
				"id": "ad69c147-3a6c-4e26-9506-169204dbc8eb",
				"placeholder": "Add option",
				"type": "radio",
				"value": "Sets allows you to manage returns of values as sets of a given number: Set(5) returns a set of 5 items"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35"
			},
			{
				"id": "7d99e753-c532-4a78-8bc6-fc0b0b07279b",
				"blockType": "text",
				"value": "You can store arrays and objects interchangeably and work with these datatypes with the same API",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "A Set is a newly added datatype that allows you to find and return matching values in arrays more easily",
				"id": "06cc3409-aafc-4900-af48-90923a680b86",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"value": "A Set is a newly added datatype that eventually will deprecate arrays, because Sets are much more performant then arrays",
				"type": "radio",
				"blockType": "text",
				"id": "43fc3a45-b357-48ef-a68a-5c9ef919d9b8",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "7a56fea1-3556-4821-8071-5871e665b445",
				"value": "A Set holds data and tries to automatically find the “matching set” based on the type of value what is put in the Set. This means for instance that when you have: new Set(“mumbo jumbo”, 655, true, “wahay”), it only returns the two strings (“mumbo jumbo”and “wahay”) because it’s a “set of strings”",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "Sets are a way to use new methods on arrays and objects in older browsers like IE9 and lower. Because it was harder and less performant to implement newly added methods on objects and arrays, Sets were a solution not many developers are aware of",
				"type": "radio",
				"blockType": "text",
				"id": "6c4a8965-6c87-4a8a-9854-539d467e6678"
			}
		],
		"status": "closed",
		"id": "534fc315-2223-4a64-90df-08c8299bb5ec",
		"codeBlock": "",
		"type": "radio",
		"question": "In JS, newly added features do impress, now name something unique about “Sets”",
		"voted": [],
		"pollNumber": 42,
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"value": "Promises can run in parallel",
				"id": "a19b766d-8134-4522-b450-0995ff336c73"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "<androidframe>"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "Sets allows you to manage a collection of unique values in a subjectively nice way"
			}
		],
		"openingTime": null,
		"category": "javascript"
	},
	{
		"status": "closed",
		"openingTime": null,
		"question": "In JS, we have a new thing called nullish coalescing, what is the effect of this thing?",
		"voted": [],
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "<currency>"
			},
			{
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"value": "<javascript>"
			},
			{ "value": "<weak>", "id": "167676d3-d8e4-49d2-becc-299208a0fa73" },
			{ "id": "ad69c147-3a6c-4e26-9506-169204dbc8eb", "value": "<text>" }
		],
		"answers": [
			{
				"id": "ad69c147-3a6c-4e26-9506-169204dbc8eb",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "it checks whether a variable is null or undefined and returns the truthy value "
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "619d9c63-c15d-436d-96ba-a919d267af35",
				"value": "it checks whether a variable is falsey and returns the truthy value"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "it sets the variable to a non-null value",
				"type": "radio",
				"id": "7d99e753-c532-4a78-8bc6-fc0b0b07279b"
			},
			{
				"blockType": "text",
				"id": "06cc3409-aafc-4900-af48-90923a680b86",
				"type": "radio",
				"placeholder": "Add option",
				"value": "it checks whether a variable is falsey, and if so returns the the falsey value"
			},
			{
				"type": "radio",
				"value": "It nullifies values, which means for a string that holds “this is a string” it returns “”, for numbers that holds 34 it returns the number 0, for booleans which hold a true value, it returns false",
				"placeholder": "Add option",
				"id": "43fc3a45-b357-48ef-a68a-5c9ef919d9b8",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"id": "7a56fea1-3556-4821-8071-5871e665b445",
				"value": "With nullish coalescing it is possible to assign custom values to null, like: null = “null is now a string”"
			},
			{
				"placeholder": "Add option",
				"id": "6c4a8965-6c87-4a8a-9854-539d467e6678",
				"type": "radio",
				"value": "Nullish coalescing is a technique that nullifies the JavaScript in your app, which gives you the ability to overwrite JS keywords like “class”, “static”, “function” and add keywords yourself",
				"blockType": "text"
			}
		],
		"codeBlock": "",
		"id": "8a5fadcc-914c-4730-851c-33690c3e3088",
		"type": "radio",
		"category": "javascript",
		"pollNumber": 41
	},
	{
		"category": "html",
		"status": "closed",
		"codeBlock": "",
		"pollNumber": 40,
		"voted": [],
		"openingTime": null,
		"question": "While writing HTML, semantic tags are to keep in mind, which tags you see listed here are false and not defined? ",
		"type": "checkbox",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "<androidframe>",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff"
			},
			{
				"value": "<currency>",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"value": "<javascript>",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78"
			},
			{ "id": "167676d3-d8e4-49d2-becc-299208a0fa73", "value": "<weak>" },
			{ "id": "ad69c147-3a6c-4e26-9506-169204dbc8eb", "value": "<text>" }
		],
		"id": "67cba5a0-3e99-4e17-b9f2-d8f6609c0f77",
		"answers": [
			{
				"placeholder": "Add option",
				"id": "4aad2a7c-ae6a-4ad6-ace1-7af9e18ee8fb",
				"value": "<kbd>",
				"blockType": "code",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "<details>",
				"blockType": "code",
				"id": "e4e40a95-8e2a-4309-ad2f-8ca3d3b1cfaa"
			},
			{
				"placeholder": "Add option",
				"value": "<summary>",
				"id": "7427171d-31b5-4272-9ca7-bfee79419607",
				"blockType": "code",
				"type": "radio"
			},
			{
				"value": "<time>",
				"placeholder": "Add option",
				"blockType": "code",
				"id": "d3bfcc38-a094-4bbb-a252-cf929db78a29",
				"type": "radio"
			},
			{
				"value": "<androidframe>",
				"type": "radio",
				"blockType": "code",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "<output>",
				"placeholder": "Add option",
				"blockType": "code",
				"id": "3786bfe8-56d4-4aa5-a516-e764b18b442c"
			},
			{
				"type": "radio",
				"blockType": "code",
				"value": "<currency>",
				"placeholder": "Add option",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9"
			},
			{
				"id": "92bd22d4-b9fc-41b6-975f-92d69864ce61",
				"value": "<progress>",
				"blockType": "code",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "code",
				"value": "<title>",
				"id": "6c0a9dec-f2b3-48b2-ab26-1ca5b9ba6102"
			},
			{
				"placeholder": "Add option",
				"value": "<javascript>",
				"blockType": "code",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"value": "<iframe>",
				"id": "e8c05a28-ef57-46d1-b81f-28fdf69e1d11"
			},
			{
				"placeholder": "Add option",
				"value": "<dialog>",
				"id": "6941dca5-70b6-41f0-828e-2782a7a15091",
				"blockType": "code",
				"type": "radio"
			},
			{
				"blockType": "code",
				"placeholder": "Add option",
				"value": "<tbody>",
				"id": "c8f9947c-af19-4b51-9049-7f877587cbe8",
				"type": "radio"
			},
			{
				"blockType": "code",
				"type": "radio",
				"value": "<weak>",
				"placeholder": "Add option",
				"id": "167676d3-d8e4-49d2-becc-299208a0fa73"
			},
			{
				"placeholder": "Add option",
				"id": "ad69c147-3a6c-4e26-9506-169204dbc8eb",
				"type": "radio",
				"blockType": "code",
				"value": "<text>"
			}
		]
	},
	{
		"codeBlock": "",
		"pollNumber": 39,
		"voted": [],
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "@supports",
				"id": "e4e40a95-8e2a-4309-ad2f-8ca3d3b1cfaa"
			}
		],
		"status": "closed",
		"type": "radio",
		"question": "In CSS, features can depend on browser support, what syntax can you use to detect this which you shouldn’t subvert?",
		"category": "css",
		"openingTime": null,
		"id": "5a260808-707e-4f8e-ae12-b541daf1d43e",
		"answers": [
			{
				"value": "@enabled",
				"type": "radio",
				"placeholder": "Add option",
				"id": "4aad2a7c-ae6a-4ad6-ace1-7af9e18ee8fb",
				"blockType": "text"
			},
			{
				"value": "@supports",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "e4e40a95-8e2a-4309-ad2f-8ca3d3b1cfaa",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "7427171d-31b5-4272-9ca7-bfee79419607",
				"value": "@feature",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "d3bfcc38-a094-4bbb-a252-cf929db78a29",
				"type": "radio",
				"placeholder": "Add option",
				"value": "@media",
				"blockType": "text"
			},
			{
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"value": "@experimental",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "@danger",
				"id": "3786bfe8-56d4-4aa5-a516-e764b18b442c",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"value": "@property",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "92bd22d4-b9fc-41b6-975f-92d69864ce61",
				"blockType": "text",
				"type": "radio",
				"value": "@under-construction"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "6c0a9dec-f2b3-48b2-ab26-1ca5b9ba6102",
				"placeholder": "Add option",
				"value": "You just implement the code and the browser will automatically recognise if it works or not"
			},
			{
				"blockType": "text",
				"id": "669ae2c8-54ac-4155-918b-59948f55fd78",
				"type": "radio",
				"placeholder": "Add option",
				"value": "@browser(\"Chrome\").supports()"
			}
		]
	},
	{
		"category": "css",
		"answers": [
			{
				"value": "It selects all elements on the top level of the page ",
				"type": "radio",
				"blockType": "text",
				"id": "4aad2a7c-ae6a-4ad6-ace1-7af9e18ee8fb",
				"placeholder": "Add option"
			},
			{
				"value": "It selects all elements except elements with id’s and classes ",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "e4e40a95-8e2a-4309-ad2f-8ca3d3b1cfaa"
			},
			{
				"blockType": "text",
				"id": "7427171d-31b5-4272-9ca7-bfee79419607",
				"placeholder": "Add option",
				"type": "radio",
				"value": "It selects all elements on the page"
			},
			{
				"blockType": "text",
				"value": "It doesn’t hold a specificity value ",
				"id": "d3bfcc38-a094-4bbb-a252-cf929db78a29",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "It selects all elements except elements with id’s and classes ",
				"id": "2a5ad730-c73c-4a5c-9190-10b0c7009cff",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It enables CSS debugging by drawing borders around every element when putting “*” in your CSS ",
				"id": "3786bfe8-56d4-4aa5-a516-e764b18b442c"
			},
			{
				"blockType": "text",
				"value": "It selects a random element",
				"id": "e10915b6-d9e0-481f-83e6-d797bfbcd1f9",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "92bd22d4-b9fc-41b6-975f-92d69864ce61",
				"type": "radio",
				"value": "It’s a specific way in CSS to style password input: a single “*” selector determines how a single character might look like, but you can also style multiple characters by selecting “*:nth-child(n)” for example. "
			}
		],
		"question": "In CSS, the “*” selector does exist, what effects of this selector can you list? ",
		"codeBlock": "",
		"type": "checkbox",
		"pollNumber": 38,
		"status": "closed",
		"voted": [],
		"openingTime": null,
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"value": "absolute"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			},
			{
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf"
			},
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			},
			{
				"value": "It selects all elements on the page",
				"id": "7427171d-31b5-4272-9ca7-bfee79419607"
			},
			{
				"id": "d3bfcc38-a094-4bbb-a252-cf929db78a29",
				"value": "It doesn’t hold a specificity value "
			}
		],
		"id": "0dbc6596-79c8-49e0-be0a-0fc06cfbbf82"
	},
	{
		"answers": [
			{
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3",
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"value": "The power of promises is attaching chains, but you can’t attach more than 5 chains to your promise because of performance issues. Libraries like bluebird do allow this ",
				"blockType": "text",
				"id": "9020655e-def4-4bb0-b2de-64f54033a343",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "All JavaScript callbacks are promises ",
				"id": "13cf862e-8d9e-4601-975b-8a1e86caea2b",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"blockType": "text",
				"value": "Promises can run in parallel"
			},
			{
				"placeholder": "Add option",
				"id": "77f11d06-eea3-4901-8b69-911fb7a25fe0",
				"type": "radio",
				"value": "Promises return values automatically, that’s why they are called promises",
				"blockType": "text"
			},
			{
				"type": "radio",
				"value": ".chain is used to chain promises together",
				"id": "6aee8fad-2eeb-4f10-8e81-39cd9b141d22",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "ec7d556f-a78e-4dc0-93f9-7612f07412f3",
				"type": "radio",
				"blockType": "text",
				"value": "Promises enable multithreading in JS",
				"placeholder": "Add option"
			},
			{
				"value": "Promises improve performance drastically compared to callbacks",
				"blockType": "text",
				"id": "8963fea2-d0c5-4721-b6f2-2b1b22b8111b",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "65b8fa87-c2b4-425b-811c-58d365838dbc",
				"type": "radio",
				"value": "Promises are only used to fetch data from an API",
				"placeholder": "Add option"
			},
			{
				"id": "4aad2a7c-ae6a-4ad6-ace1-7af9e18ee8fb",
				"value": "When a promise is rejected, it automatically stops executing the remaining code and rest of the chain",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			}
		],
		"id": "52c18704-6915-4868-99db-5c123f2d8ef6",
		"category": "javascript",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			},
			{
				"value": "Promises are a more convenient way to handle asynchrony instead of with callback functions",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			},
			{
				"id": "a19b766d-8134-4522-b450-0995ff336c73",
				"value": "Promises can run in parallel"
			}
		],
		"question": "In JS, a promise can be resolved or rejected, now what knowledge is required to make promises work as expected? ",
		"status": "closed",
		"codeBlock": "",
		"openingTime": null,
		"voted": [],
		"type": "checkbox",
		"pollNumber": 37
	},
	{
		"question": "In JS, arrow functions are a famous subject, now how do you write an arrow function correct? ",
		"pollNumber": 36,
		"type": "radio",
		"category": "javascript",
		"voted": [],
		"openingTime": null,
		"id": "2c3ccd22-9e5e-4b51-911e-25ce4bb918a6",
		"status": "closed",
		"codeBlock": "",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			},
			{
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"value": "() => {} "
			}
		],
		"answers": [
			{
				"blockType": "code",
				"type": "radio",
				"value": "() => {} ",
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "() <= {}",
				"blockType": "code",
				"type": "radio",
				"id": "bbd9256c-ae8f-41d0-b02a-4718cb172680"
			},
			{
				"placeholder": "Add option",
				"blockType": "code",
				"id": "0390378f-5a0b-46db-8e4b-0cc5c647f102",
				"type": "radio",
				"value": "() ==> {}"
			},
			{
				"type": "radio",
				"blockType": "code",
				"value": "() ≤=> {}",
				"id": "6d3686c5-3996-4b0f-aa72-68dbf902dfce",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "code",
				"value": "() -> {}",
				"placeholder": "Add option",
				"id": "1364885f-5e59-41ec-afad-5595e2e1699d"
			},
			{
				"id": "e3566c78-bfcb-4f28-8d07-9f7741a73617",
				"type": "radio",
				"value": "() > {}",
				"placeholder": "Add option",
				"blockType": "code"
			},
			{
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"value": "() ^^ {}",
				"id": "9362ac3f-51d3-4875-baa5-72848cb81842"
			},
			{
				"id": "4f2b455a-f4cc-4ca4-92f8-aa0f1190958c",
				"type": "radio",
				"placeholder": "Add option",
				"value": "() <<<<>>>>> {}",
				"blockType": "code"
			},
			{
				"value": "arrow function() {} ",
				"blockType": "code",
				"id": "ebe29ef7-3f84-424e-91cf-0665e58ff1eb",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "function() {} ",
				"blockType": "code",
				"placeholder": "Add option",
				"id": "92832d19-d803-4444-ba67-ef4416d4eadb",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "() 👉 {}",
				"placeholder": "Add option",
				"blockType": "code",
				"id": "67925c0e-9e0a-4106-8e85-80d69694b4b3"
			}
		]
	},
	{
		"status": "closed",
		"answers": [
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Closures are a way to end a function",
				"type": "radio",
				"id": "1c3197af-7cba-452b-bcb8-1c426cf5a785"
			},
			{
				"blockType": "text",
				"id": "e6df005f-18c8-43db-9d58-4f65392bc142",
				"type": "radio",
				"value": "Closures are syntactical sugar for prototype in JS",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "517a849e-8b65-45af-807d-e207bcd1cf23",
				"type": "radio",
				"blockType": "text",
				"value": "Because closures was released as experiment, it should be used sparingly since they are heavy for performance up until now. The W3C is still looking for ways to improve this"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6",
				"blockType": "text",
				"value": "Closures provide the ability to store variables and use it after it’s execution"
			},
			{
				"value": "Closures were introduced with ES6 because many developers proposed this feature ",
				"type": "radio",
				"id": "a0eff40c-6d72-4e5a-9210-cc02384ba859",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "27720c55-be30-4ad2-a797-a5ecada4d8cf",
				"placeholder": "Add option",
				"value": "A closure is the init function from a class",
				"blockType": "text",
				"type": "radio"
			}
		],
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)"
			},
			{
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area)."
			},
			{
				"value": "Closures provide the ability to store variables and use it after it’s execution",
				"id": "781929bb-472d-4dad-8837-7647615b8ad6"
			}
		],
		"category": "javascript",
		"type": "radio",
		"pollNumber": 35,
		"codeBlock": "",
		"id": "efd0f153-e5b7-4fb3-bc0a-4bd02fbd669b",
		"voted": [],
		"openingTime": null,
		"question": "In JS, closures are there, what do you know about it, can you share? "
	},
	{
		"type": "checkbox",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "value": "fixed", "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472"
			},
			{
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611"
			}
		],
		"id": "e2a44c00-2d86-4d25-9fdd-ed51dd8e52bc",
		"pollNumber": 34,
		"question": "In HTML, an element often used is <label>, what benefits will this element enable? ",
		"voted": [],
		"category": "html",
		"status": "closed",
		"answers": [
			{
				"id": "8865d6f9-afd6-43bb-8314-2f22e93e1687",
				"type": "radio",
				"value": "<label> has built-in functionality by the W3C, that when screen readers notice a <label> without corresponding input, it automatically informs the user and will send feedback to the developer",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "Screen reader users (will read out loud the label, when the user is focused on the element)",
				"placeholder": "Add option",
				"id": "1977b552-5ef6-4dd2-9539-903cccc4a472",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "It’s an ready-made element basically to get attention from your user: it may display things like text and a close button, a “status” from a particular object or pricetags for example",
				"blockType": "text",
				"id": "b935bd6d-e8c7-4a93-9269-b328c7f4409e"
			},
			{
				"value": "<label> basically relates several input fields together",
				"id": "2bdf5124-a734-4ee6-a5ab-a4b6ca317809",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "bde8cb1a-7132-40b0-8e4d-39f266bc1e89",
				"blockType": "text",
				"value": "When using <label>, it will generate a corresponding input out of the box",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"id": "5f366adf-4d5e-44ce-a7ca-870bdb62a611",
				"blockType": "text",
				"value": "Users who have difficulty clicking on very small regions (such as checkboxes) - because when a user clicks the text within the <label> element, it toggles the input (this increases the hit area).",
				"placeholder": "Add option"
			},
			{
				"id": "ff933790-6566-4918-a4c8-f5a2341b54d1",
				"type": "radio",
				"value": "It doesn’t have any additional benefits, so the HTML spec deprecated the <label> tag",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "Adding <label> auto validates the <input> closest to it",
				"id": "05079c62-8cba-49a8-ac2f-c738a94d9236"
			},
			{
				"placeholder": "Add option",
				"value": "On mobile devices, when using <label> next to in an input field, a user can tap on it and it will automatically fill in data that is saved in the browser (e.g name, password, address) ",
				"id": "1c3197af-7cba-452b-bcb8-1c426cf5a785",
				"blockType": "text",
				"type": "radio"
			}
		],
		"codeBlock": "",
		"openingTime": null
	},
	{
		"voted": [],
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			},
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			},
			{ "id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0", "value": "fixed" },
			{
				"value": "absolute",
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd"
			}
		],
		"question": "In CSS, the position property was implemented long ago, which values from below remove the elements out of the document flow? ",
		"id": "b7f245ea-523e-42c6-a8bd-f6b3f1479b0f",
		"pollNumber": 33,
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"value": "fixed"
			},
			{
				"id": "fc6f8bb2-5019-40be-ae33-569674c18c83",
				"type": "radio",
				"blockType": "code",
				"value": "relative",
				"placeholder": "Add option"
			},
			{
				"value": "sticky",
				"blockType": "code",
				"placeholder": "Add option",
				"id": "885dcb1a-761d-405f-88da-068b40157adf",
				"type": "radio"
			},
			{
				"id": "f50a6987-b8ca-4426-bc57-342adbca39cd",
				"placeholder": "Add option",
				"value": "absolute",
				"blockType": "code",
				"type": "radio"
			},
			{
				"blockType": "code",
				"id": "16186995-9478-449d-b7ba-7d05780b28a8",
				"placeholder": "Add option",
				"type": "radio",
				"value": "static"
			},
			{
				"blockType": "code",
				"type": "radio",
				"value": "flex",
				"id": "836482e4-dde9-4b0e-b58c-a91485979c6c",
				"placeholder": "Add option"
			},
			{
				"id": "8865d6f9-afd6-43bb-8314-2f22e93e1687",
				"placeholder": "Add option",
				"blockType": "code",
				"type": "radio",
				"value": "transform"
			}
		],
		"category": "css",
		"status": "closed",
		"codeBlock": "",
		"type": "checkbox",
		"openingTime": null
	},
	{
		"question": "In TypeScript, “.d.ts” files are very handy for sure, but what it is it for? ",
		"id": "57c6facb-02da-4d4e-83c0-a5665f219a92",
		"status": "closed",
		"answers": [
			{
				"blockType": "text",
				"id": "1850b956-0afe-4d0d-8682-baab867486ee",
				"value": "For seperation of concerns: It’s a special file that is used for your types or interfaces which are used in your app. You often see something like “app-types.d.ts” which contains all your types which you import your types from in your app",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "1ef216ec-e59e-4f91-8da4-c5ab2c6916fb",
				"value": "These are settings which are important for your keyboard in favor of use of TypeScript (certain shortcuts, automatic type inference)",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493",
				"blockType": "text",
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense."
			},
			{
				"blockType": "text",
				"id": "f9058688-96f1-4e7c-898a-1216ba242988",
				"placeholder": "Add option",
				"type": "radio",
				"value": "It’s a file to declare what file types you need to support in your app when you import these files (like .ttf, .woff, .tsx, .jsx)"
			},
			{
				"id": "c82f7137-c264-4857-9886-7887607ab526",
				"blockType": "text",
				"value": "It’s a method to decide what type version you use for TypeScript, like how Node Version Manager is to Node.js. This enhances testing, because you can test code with current and older TypeScript versions by only changing the file by adding the desired version",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It’s a file where you declare the type of TypeScript rules you need specifically",
				"id": "d94e33d7-4c62-4e7b-b349-d5cb8b38a0af",
				"type": "radio"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "2de2b47c-bacf-4ed8-8862-3f3d658c77fa",
				"value": "It’s a visual way of showing your small atomic types and interfaces to other developers in your team in isolation",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "ac5533fd-b30f-4dcb-9a59-ba19027f83b0",
				"type": "radio",
				"value": "Because TS has it’s own ecosystem, this file represents the tools and plugins you use. You can install certain features like type inference, built-in types or custom types from other developers to use in your own projects"
			}
		],
		"voted": [],
		"codeBlock": "",
		"category": "typescript",
		"openingTime": 1663142700182,
		"type": "radio",
		"correctAnswers": [
			{
				"value": "Having type information for the library code or other external API’s helps you in coding by providing detailed information about the types, method signatures, etc., and provides IntelliSense.",
				"id": "89871020-d1d8-4798-9e0b-b29453bf5493"
			}
		],
		"pollNumber": 32
	},
	{
		"openingTime": null,
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff",
				"value": "In a function with an unending loop "
			},
			{
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85"
			}
		],
		"type": "radio",
		"answers": [
			{
				"value": "Inference means that TypeScript interferes with your code, kind of a spelling checker ",
				"placeholder": "Add option",
				"id": "949306d1-6c8c-4d34-a5a1-b7f1de2c20a3",
				"type": "radio",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "699e5f6a-78bf-4d31-9933-ad08063c4043",
				"value": "Inference is not part of TypeScript, it’s VSCode who is smart enough to recognize your types",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "Inference means that TypeScript can automatically understand types without explicit typing",
				"placeholder": "Add option",
				"id": "7a1b9b93-615f-4a82-b06d-9483dc191d85",
				"blockType": "text"
			},
			{
				"id": "071bec56-3b51-4e6f-801e-009cf62d4984",
				"blockType": "text",
				"value": "Inference means that TypeScript can’t automatically understand types without explicit typing ",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "Inference is an AI developer by Microsoft especially for TypeScript, running through codebases to allow type inference",
				"id": "3f4d92cf-b920-4cee-8942-b19072040e38",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "8d929821-7869-4b43-b6af-ae97b1d99253",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "Inference means that TypeScript “interferes” which is some kind of middleware for TypeScript"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "1850b956-0afe-4d0d-8682-baab867486ee",
				"value": "Inference means that TypeScript has a system which modulized your code so it doesn’t interfere or clash with other libraries "
			}
		],
		"codeBlock": "",
		"question": "In TypeScript, inference makes TypeScript smart, what are the facts you can tell apart?",
		"pollNumber": 31,
		"id": "b7e36596-f54c-4381-a579-28448c6d94cd",
		"voted": [],
		"status": "closed",
		"category": "typescript"
	},
	{
		"codeBlock": "",
		"status": "closed",
		"category": "typescript",
		"pollNumber": 30,
		"openingTime": null,
		"voted": [],
		"answers": [
			{
				"value": "In a function without the word return, because it never returns",
				"placeholder": "Add option",
				"id": "e98ec828-ff23-4190-b0a9-fb10f9ddc261",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "In a function with an unending loop ",
				"type": "radio",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "e0508d20-8e45-4a90-8caf-37c67930fe3e",
				"value": "In a function that returns falsy values",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "714f06fb-70a6-4d7e-b107-b54a990c8e1d",
				"type": "radio",
				"value": "In a function that crashes halfway your app at runtime"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "5e4848c0-caa4-4804-b13c-4e12c2b01df4",
				"value": "In a function that has a break statement: it breaks and never returns",
				"type": "radio"
			},
			{
				"type": "radio",
				"value": "In a function that has an empty body",
				"blockType": "text",
				"id": "919ed152-3124-4ab3-977c-5b40cc7a634f",
				"placeholder": "Add option"
			},
			{
				"id": "d41574d5-c559-4f64-a14c-f0436520aaeb",
				"blockType": "text",
				"value": "Typescript never returns a never unless you explicitly say so",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"id": "b6c055d4-1d92-49b8-92f0-d889480a0a07",
				"blockType": "text",
				"value": "In a function that is never written",
				"type": "radio"
			},
			{
				"id": "383f2b4b-4020-4e7b-a3f1-3e43007dbf3e",
				"value": "In a promise function, because you can never be sure what it returns",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "In a function that throws an error ",
				"id": "949306d1-6c8c-4d34-a5a1-b7f1de2c20a3",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			}
		],
		"type": "checkbox",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			},
			{
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"value": "In a function with an unending loop ",
				"id": "e6595f93-dbcc-4842-b1fb-08bbc3bad1ff"
			},
			{
				"id": "949306d1-6c8c-4d34-a5a1-b7f1de2c20a3",
				"value": "In a function that throws an error "
			}
		],
		"question": "In TypeScript, never is a type, but when do functions return the never type, would you describe? ",
		"id": "6551b2dc-27e4-43b4-b112-b2ee1d33e019"
	},
	{
		"id": "0b142e83-7131-49be-b07e-7c6a9da7eb25",
		"type": "checkbox",
		"codeBlock": "",
		"question": "In TypeScript, when it expects a property the compiler may complain, which syntax makes sure the compiler won’t go insane? ",
		"category": "typescript",
		"status": "closed",
		"voted": [],
		"openingTime": null,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450",
				"value": "Setting a default value of the property"
			}
		],
		"pollNumber": 29,
		"answers": [
			{
				"placeholder": "Add option",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"value": "Using “?” behind the property",
				"type": "radio",
				"blockType": "text"
			},
			{
				"id": "c167c248-2171-4ca1-8605-12d03657ea28",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "Setting the type of the property to at least “undefined” "
			},
			{
				"value": "Setting the type of the property to at least “null” ",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "7427a6e6-ee56-44d4-9ff5-98a8b19fcf0d"
			},
			{
				"blockType": "text",
				"id": "c2c59421-8540-4e73-9612-40f3c8043871",
				"value": "Setting the type of the property to “optional”",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": "Using [] to wrap around a property like [optionalProperty]",
				"type": "radio",
				"id": "1174a27a-a616-47bb-b3db-d958e4a6db39",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "Using ternary conditionals in object properties so it only applies on a certain condition",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "61e39bd1-45a6-4cac-8094-d722046b5ebd",
				"type": "radio"
			},
			{
				"value": "In ES2023, you can do it with using by wrapping your property with “^property^” syntax",
				"id": "810f0a48-b1f5-4615-ab97-6bf4cb8c17e2",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "By using the built-in generic utility <Optional> type",
				"id": "946ee0f9-cf4d-4f5c-ab9b-25564d18c450",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Setting a default value of the property",
				"id": "50af7894-4765-44fb-8e9c-6089ccf48450"
			},
			{
				"blockType": "text",
				"value": "TypeScript can’t have optional types, you need for example libraries to handle this",
				"type": "radio",
				"placeholder": "Add option",
				"id": "e98ec828-ff23-4190-b0a9-fb10f9ddc261"
			}
		]
	},
	{
		"answers": [
			{
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance"
			},
			{
				"value": "Adding the key prop only helps React if you have ordered lists, not when the order of your array data doesn’t matter",
				"id": "c167c248-2171-4ca1-8605-12d03657ea28",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "7427a6e6-ee56-44d4-9ff5-98a8b19fcf0d",
				"value": "Keys are not needed in React if you sort arrays correctly beforehand so React doesn’t have to worry about identifying items",
				"placeholder": "Add option"
			},
			{
				"id": "c2c59421-8540-4e73-9612-40f3c8043871",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Keys are not needed in React if you have an array of objects which contains an ID property",
				"blockType": "text"
			},
			{
				"id": "1174a27a-a616-47bb-b3db-d958e4a6db39",
				"placeholder": "Add option",
				"value": "Key prop should be used with Object.keys() so it will generate keys",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "61e39bd1-45a6-4cac-8094-d722046b5ebd",
				"value": "It is only required when you use a mix of types in your array or iterable (number, string, boolean). When you have items of the same type (e.g: string, string, string) you can omit the key prop",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "The key prop is an operator that takes an component and produces a string or numeric literal union of its keys.",
				"type": "radio",
				"id": "810f0a48-b1f5-4615-ab97-6bf4cb8c17e2",
				"blockType": "text",
				"placeholder": "Add option"
			}
		],
		"type": "radio",
		"correctAnswers": [
			{
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"value": ".post h1, .post h2, .post h3 "
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings.",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5"
			},
			{
				"value": "Key prop helps React identify which items have changed, are added, or are removed, which increases performance",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830"
			}
		],
		"question": "In React, when working with arrays or iterators the key prop is required, but how does it help React to manage effects that are undesired?",
		"openingTime": null,
		"codeBlock": "",
		"id": "15ffc55f-7e48-4c1b-83e0-18724a05d69b",
		"voted": [],
		"category": "react",
		"pollNumber": 28,
		"status": "closed"
	},
	{
		"answers": [
			{
				"id": "02fd3834-362c-4ef3-8daa-06ac9849e216",
				"blockType": "text",
				"type": "radio",
				"value": "It removes all styling from a given selector. The reset is done by using: all: unset on the wildcard selector",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "3efc2990-9588-40d8-ad4f-340c1f628d38",
				"value": "It removes all styling from every level (user-agent styles, browser default styles, external and internal styles) from a page and basically gives you a clean sheet as starting point",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			},
			{
				"placeholder": "Add option",
				"value": "CSS reset is according to the W3C “the great reset” and took place when the W3C introduced the modular way of releasing CSS features",
				"type": "radio",
				"blockType": "text",
				"id": "64e9c699-5d56-4291-bb8a-99c6a9b844a6"
			},
			{
				"blockType": "text",
				"value": "CSS reset means it resets cascade layer so developers can define that order themselves",
				"type": "radio",
				"id": "424d9c93-1754-4052-b6fe-a7a54183e6bb",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"id": "65cd6d3f-7770-46e1-a51f-39bde38b77ba",
				"value": "CSS reset is actually a script that runs over your CSS code and “purifies” your code (and therefore “resets” properties which are not used",
				"blockType": "text",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "eea028bb-36cd-42bd-ab2b-d2206bddb895",
				"blockType": "text",
				"value": "It is actually a way to reset CSS scopes, so style leakage will be prevented",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "It is just a saying which got popular among CSS developers when they visited a CSS conference and have a drink afterwards or when they a had day full working with hard CSS code. ",
				"id": "f3f8034a-f2c3-4ff1-adda-934491cf4830",
				"placeholder": "Add option"
			}
		],
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			},
			{
				"id": "58d53af2-4e8c-42d0-8953-e2e0245dddb5",
				"value": "It helps reduce browser inconsistencies in things like default line heights, margins and headings font sizes. Meant to be a starting point for your to build on your own default stylings."
			}
		],
		"question": "In CSS, resets are often used, but what are the things that with it’s use are then improved?",
		"pollNumber": 27,
		"id": "7c4b1551-e030-4a7f-9151-84f5f4fb831d",
		"category": "css",
		"type": "radio",
		"codeBlock": "",
		"status": "closed",
		"voted": [],
		"openingTime": null
	},
	{
		"openingTime": null,
		"type": "radio",
		"voted": [],
		"category": "css",
		"codeBlock": "",
		"id": "d23366bd-a215-43f7-a12f-e2458e7e5803",
		"question": "In CSS, when creating animations, why is it advised to use translate over absolute in these occasions?",
		"answers": [
			{
				"id": "6b6d8334-b2f6-4338-aaff-a932b1b7f382",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "It’s not advised, always use absolute over translate "
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "5f072ce8-21dc-4ca0-9d0c-b6381c7f72fc",
				"blockType": "text",
				"value": "Because translate is specifically for animations, you can’t animate other properties"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "bff35663-7777-4fa6-a8ae-114088731282",
				"value": "According to the CSS spec, translate is more intuitive and has a clearer API to use than using absolute"
			},
			{
				"value": "Animating with translate is supported by all browsers, while absolute isn’t supported by all browsers, which makes it clear why you would use one over the other ",
				"blockType": "text",
				"type": "radio",
				"id": "30e77275-b476-46cd-9c20-759fcd04f5e8",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "Both absolute and translate should be used together to create the most efficient animations",
				"id": "2f48b8f1-20f1-4cb5-800c-f99d178dfc1e"
			},
			{
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient",
				"placeholder": "Add option",
				"type": "radio",
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Absolute positioning removes elements from their natural flow, which makes it less intensive and efficient to animate",
				"id": "ff36a075-1071-4014-9c95-3852d9847277"
			},
			{
				"id": "02fd3834-362c-4ef3-8daa-06ac9849e216",
				"type": "radio",
				"placeholder": "Add option",
				"value": "With translate we actually mean a React hook useTranslate(), which is taling care of animation and is more efficient than CSS’ “absolute”",
				"blockType": "text"
			}
		],
		"status": "closed",
		"pollNumber": 26,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px "
			},
			{
				"id": "5010daf5-0348-403c-8c88-e2b5a83d1da0",
				"value": "Animating absolute uses CPU and triggers reflow; translate uses GPU and is more efficient"
			}
		]
	},
	{
		"pollNumber": 25,
		"codeBlock": "",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"value": "Curry’ing"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation."
			},
			{
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3",
				"value": "box-sizing: content-box is the default setting according to the CSS standard"
			},
			{
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 220px ",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f"
			}
		],
		"category": "css",
		"question": "In CSS, knowing box-sizing is essential for layout, what are facts of setting box-sizing to know that’ll pay out? ",
		"openingTime": null,
		"type": "checkbox",
		"voted": [],
		"answers": [
			{
				"value": "box-sizing: border-box changes how the width and height of elements are being calculated, border and padding are also being included in the calculation.",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4"
			},
			{
				"id": "85c8051f-2a67-4ed3-827b-081767cd681e",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "box-sizing: border-box is a neat way to debug your CSS as it puts borders around every element",
				"type": "radio"
			},
			{
				"blockType": "text",
				"type": "radio",
				"value": "box-sizing: content-box is the default setting according to the CSS standard",
				"placeholder": "Add option",
				"id": "7929f4e8-483e-487e-aa68-88cbe56c99e3"
			},
			{
				"id": "b41fb488-8386-4582-9a53-cdc942aae939",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "Using box-sizing in IE11 required a polyfill"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "9b11ed33-cc3b-45a9-a150-e7dd750bf73f",
				"blockType": "text",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 240px "
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "00fd00b5-ec01-4b2d-b690-609e0ec09fc6",
				"type": "radio",
				"value": "When box-sizing: content-box is set and width is 200px + and padding is 20px, the total width is 200px "
			},
			{
				"value": "Prefixes are still required to support box-sizing on all browsers and devices because sadly  it’s still not implemented in all browsers yet",
				"type": "radio",
				"placeholder": "Add option",
				"id": "8d7a2409-43cc-49d9-8ab9-b631bf22f320",
				"blockType": "text"
			},
			{
				"type": "radio",
				"id": "847c36c7-3416-495e-9324-e757e605fca9",
				"placeholder": "Add option",
				"value": "Box-sizing setting controls from accessibility perspective the focus (or highlight) of certain elements like a button or a link where the user can click / tab through. ",
				"blockType": "text"
			},
			{
				"value": "Box-sizing is another way with CSS logical properties to determine width of an element",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "6b6d8334-b2f6-4338-aaff-a932b1b7f382"
			}
		],
		"status": "closed",
		"id": "ebc63fd7-0a87-48d7-9ebc-eb3b694dd328"
	},
	{
		"status": "closed",
		"id": "75913aad-ae06-40af-b320-cbd327a586a1",
		"type": "radio",
		"openingTime": null,
		"voted": [],
		"correctAnswers": [
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Curry’ing",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411"
			}
		],
		"codeBlock": "concatenated(\"It's\")(\"always\")(\"Christmas\")(\"in\")(\"Freezeezy\")(\"Peak\")",
		"pollNumber": 24,
		"category": "javascript",
		"answers": [
			{
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b",
				"value": "Ketchup’ing",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Promises",
				"id": "b097388c-fc5a-4093-8456-0ce689da756d"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "c8cf19e1-be99-4705-b940-433fc135dcc4",
				"placeholder": "Add option",
				"value": "Reducers"
			},
			{
				"id": "bbca7472-8b14-4f63-a123-57e5a87ee22e",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "Prototype chain "
			},
			{
				"placeholder": "Add option",
				"value": "Inheritance",
				"id": "96eb3564-5609-4bdf-92f7-7b864fc5df2d",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "Concatenation",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "2147fbf6-8b0a-450b-bd20-73f46a9fa308",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "Curry’ing",
				"blockType": "text",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "This is just a regular function",
				"blockType": "text",
				"id": "7a94fc65-1c59-41c1-9d77-297d40334b3f"
			},
			{
				"id": "bc36f7da-aefb-43b3-b1fb-73d71e3fd2f4",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Higher order components",
				"type": "radio"
			}
		],
		"question": "See the following code on your screen, what is the name of this technique you’ve seen?"
	},
	{
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			},
			{
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b",
				"value": "Event delegation is a technique involving adding event listeners to a parent element instead of adding them to the descendant elements. The listener will fire whenever the event is triggered on the descendant elements due to event bubbling up the DOM"
			}
		],
		"category": "css",
		"voted": [],
		"status": "closed",
		"id": "fb8159a6-53fa-4d75-8171-5821cc5503f7",
		"pollNumber": 23,
		"question": "In CSS, animations can be used to engage people on your site, but which media query controls if the user wants the animations you write?",
		"answers": [
			{
				"placeholder": "Add option",
				"value": "prefers-reduced-motion",
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "monochrome",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "b097388c-fc5a-4093-8456-0ce689da756d"
			},
			{
				"id": "c8cf19e1-be99-4705-b940-433fc135dcc4",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "display mode"
			},
			{
				"placeholder": "Add option",
				"value": "animation",
				"blockType": "text",
				"id": "bbca7472-8b14-4f63-a123-57e5a87ee22e",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "allow-animation",
				"id": "96eb3564-5609-4bdf-92f7-7b864fc5df2d",
				"type": "radio"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "2147fbf6-8b0a-450b-bd20-73f46a9fa308",
				"value": "prefers-boring-website",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "fbb7006f-f8a0-4481-aada-7a51b8244411",
				"placeholder": "Add option",
				"value": "Not possible with CSS, this requires tools like Modernizr"
			},
			{
				"value": "It is not done with media queries, but in another CSS way",
				"blockType": "text",
				"id": "7a94fc65-1c59-41c1-9d77-297d40334b3f",
				"type": "radio",
				"placeholder": "Add option"
			}
		],
		"openingTime": null,
		"codeBlock": "",
		"type": "radio"
	},
	{
		"openingTime": null,
		"codeBlock": "",
		"question": "In JS, event delegation is a technique, the benefits are clear, what is the correct fact of it I seek?",
		"pollNumber": 22,
		"status": "closed",
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			},
			{
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"value": "Slice and splice without arguments is valid JS"
			},
			{
				"value": "Event delegation is a technique involving adding event listeners to a parent element instead of adding them to the descendant elements. The listener will fire whenever the event is triggered on the descendant elements due to event bubbling up the DOM",
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b"
			}
		],
		"category": "javascript",
		"type": "radio",
		"answers": [
			{
				"placeholder": "Add option",
				"value": "Event delegation is a technique involving adding event listeners to a parent element instead of adding them to the descendant elements. The listener will fire whenever the event is triggered on the descendant elements due to event bubbling up the DOM",
				"type": "radio",
				"blockType": "text",
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b"
			},
			{
				"placeholder": "Add option",
				"value": "Event delegation is a native JavaScript way of managing app state like React context or Redux. Events are used to delegate data to certain places in your app",
				"blockType": "text",
				"type": "radio",
				"id": "b097388c-fc5a-4093-8456-0ce689da756d"
			},
			{
				"value": "Event delegation is not out of the box in JavaScript because it is not supported, however event delegation will come to JavaScript, but it is still a proposal, so for now you can npm install event-delegation.js",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"id": "c8cf19e1-be99-4705-b940-433fc135dcc4"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "bbca7472-8b14-4f63-a123-57e5a87ee22e",
				"value": "Event delegation is a term in Scrum and doesn’t have anything to do with JS"
			}
		],
		"voted": [],
		"id": "fb88b043-4617-4cf0-8056-760d57af72ec"
	},
	{
		"codeBlock": "",
		"codeSandboxExample": "",
		"voted": [],
		"answers": [
			{
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b",
				"type": "radio",
				"value": "Splice actually was an improved experiment of slice and not meant to be used yet, but devs used it anyway which made it impossible to remove from the web (as it would break alot of code) ",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "Slice and splice do the same",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"id": "dd8ff765-9591-458f-b919-2abd1622b8a0"
			},
			{
				"value": "Slice returns a new array while splice mutates the original array",
				"type": "radio",
				"id": "b097388c-fc5a-4093-8456-0ce689da756d",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "Splice can be used to copy the array with it's contents",
				"type": "radio",
				"blockType": "text",
				"id": "c8cf19e1-be99-4705-b940-433fc135dcc4",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "bbca7472-8b14-4f63-a123-57e5a87ee22e",
				"value": "Slice and splice methods can take 3 parameters: start, mid, end. "
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"placeholder": "Add option",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1",
				"type": "radio",
				"blockType": "text"
			}
		],
		"correctAnswers": [
			{
				"value": "Slice returns a new array while splice mutates the original array",
				"id": "b097388c-fc5a-4093-8456-0ce689da756d"
			},
			{
				"value": "Slice and splice without arguments is valid JS",
				"id": "e2746202-ca69-4db9-95a3-ad683eb7c9f1"
			}
		],
		"pollNumber": 21,
		"question": "In JS, slice and splice are common terms, what facts from both can you affirm?",
		"status": "closed",
		"openingTime": null,
		"category": "javascript",
		"type": "checkbox",
		"id": "63e46477-1fee-456e-b4e3-5a61dd509414"
	},
	{
		"type": "radio",
		"question": "In HTML, <ul> and <ol> are list tags that exist, do you know the functionality that's comes with using <datalist>?",
		"id": "319f7f6b-dbae-44ff-8e62-2a28986854c7",
		"voted": [],
		"category": "html",
		"status": "closed",
		"correctAnswers": [
			{
				"value": "<datalist> enables an autocomplete feature when combining with an input field, based on the items provided in a datalist",
				"id": "aceb4477-34e2-4380-ac14-3642aa39f8f6"
			}
		],
		"codeBlock": "",
		"answers": [
			{
				"value": "<datalist> is used for server-side data and has SEO features",
				"type": "radio",
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"id": "dd8ff765-9591-458f-b919-2abd1622b8a0",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "Content wrapped in <dl> will be automatically submitted when submitting a form, even outside a form"
			},
			{
				"value": "<datalist> can be used as reusable template code HTML code in JavaScript",
				"type": "radio",
				"id": "064970a7-1844-4e90-89a3-4a8f1da9391d",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "<datalist> comes with check/uncheck functionality out of the box (todo list) ",
				"id": "74ddb6ac-ca0b-4646-aac5-92abafeb8a19"
			},
			{
				"value": "<datalist> enables an autocomplete feature when combining with an input field, based on the items provided in a datalist",
				"type": "radio",
				"id": "aceb4477-34e2-4380-ac14-3642aa39f8f6",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "<datalist> is used to display tabular data mostly",
				"id": "64b42ac9-06a3-4dbf-aeab-2825ad808408",
				"type": "radio",
				"blockType": "text"
			}
		],
		"openingTime": 1668502663681,
		"codeSandboxExample": "",
		"pollNumber": 20
	},
	{
		"answers": [
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"value": "Nothing, this is new syntax and a new feature… ",
				"id": "eioozak-ojnab"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "ae7d7747-0269-4f3f-9884-3ff976640e7d",
				"value": ".post h1 h2 h3",
				"type": "radio"
			},
			{
				"id": "2412d9da-347e-4d5f-bf03-72c83f1dc8b4",
				"value": ".post h1, h2, h3",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "h1 .post, h2 .post, h3 .post",
				"id": "8926ae25-07d9-4eb1-8795-2a1b2abb8dce"
			},
			{
				"value": "h1.post, h2.post, h3.post",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b"
			}
		],
		"codeBlock": ".post :is(h1, h2, h3) {\n    line-height: 1.2;\n\n}",
		"pollNumber": 19,
		"category": "css",
		"voted": [],
		"type": "radio",
		"openingTime": null,
		"correctAnswers": [
			{
				"value": ".post h1, .post h2, .post h3 ",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da"
			}
		],
		"status": "closed",
		"question": "See the following new CSS syntax on your screen, what should the equivalent have been? ",
		"id": "a60f11b6-5b29-4386-a3b6-fec17d41ce4d"
	},
	{
		"category": "css",
		"status": "closed",
		"id": "b15cbe49-3b97-4095-9694-6a80e78dde31",
		"pollNumber": 18,
		"question": "In CSS, stacking contexts are created several ways now and then, now the stacking context is formed when?",
		"answers": [
			{
				"id": "eioozak-ojnab",
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"value": "At the root element of the DOM <html>"
			},
			{
				"value": "When using floats",
				"type": "radio",
				"id": "26344aa4-6a2e-41f2-9c1a-92b8b88932da",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "ae7d7747-0269-4f3f-9884-3ff976640e7d",
				"placeholder": "Add option",
				"value": "When elements become positioned elements other than “static” "
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "When using display flex",
				"id": "2412d9da-347e-4d5f-bf03-72c83f1dc8b4"
			},
			{
				"id": "8926ae25-07d9-4eb1-8795-2a1b2abb8dce",
				"value": "When using transform with any other value than none ",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "d7e81629-a4ff-437d-bdf0-f10103fe876b",
				"type": "radio",
				"value": "When using the stacking-context-name and stacking-context-type properties",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "Every html element creates a stacking context down the tree, which is why elements further down the tree lay on top of elements that came before",
				"placeholder": "Add option",
				"type": "radio",
				"id": "2d01f2fa-89e1-4b21-85a1-2a3ac51a2df6",
				"blockType": "text"
			}
		],
		"correctAnswers": [
			{
				"id": "eioozak-ojnab",
				"value": "At the root element of the DOM <html>"
			},
			{
				"value": "When elements become positioned elements other than “static” ",
				"id": "ae7d7747-0269-4f3f-9884-3ff976640e7d"
			},
			{
				"value": "When using transform with any other value than none ",
				"id": "8926ae25-07d9-4eb1-8795-2a1b2abb8dce"
			}
		],
		"codeBlock": "",
		"voted": [],
		"type": "checkbox",
		"openingTime": null
	},
	{
		"codeBlock": "<Array<number>>",
		"id": "40686ba4-f173-458e-8c99-b14979a966ce",
		"openingTime": null,
		"status": "closed",
		"voted": [],
		"question": "See the following TS code on your screen, what is the name of this piece you must have seen?",
		"pollNumber": 17,
		"answers": [
			{
				"value": "Generics",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "695d0e14-5d1f-4d7c-b943-2d206b563aa0",
				"type": "radio"
			},
			{
				"value": "Type guards",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"id": "04f5a1cd-ca8d-49b9-95d1-283d50e9eebf"
			},
			{
				"value": "Union types",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "c3971d99-74f3-458c-b5f0-f9e6c4b83dfb"
			},
			{
				"blockType": "text",
				"id": "4ae0cae6-888d-40ae-9217-8dffba61bad2",
				"placeholder": "Add option",
				"value": "Tuple",
				"type": "radio"
			},
			{
				"value": "Type constraint",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "90395e00-562d-4006-b8fc-ca64514142ff"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "5aab22e2-cf31-43a4-9aed-34adb20d8f00",
				"value": "Number of arrays",
				"placeholder": "Add option"
			}
		],
		"correctAnswers": [
			{ "value": "ems", "id": "dcc0a920-f9b9-4af6-a541-007309b8b79e" },
			{ "value": "return", "id": "396f95dc-43c6-4ece-a504-3bb9cb6f4edd" },
			{
				"value": "Generics",
				"id": "695d0e14-5d1f-4d7c-b943-2d206b563aa0"
			}
		],
		"category": "typescript",
		"type": "radio"
	},
	{
		"id": "727d58e6-3f7a-4ae9-a04d-cd4e2b69072c",
		"category": "css",
		"openingTime": null,
		"status": "closed",
		"correctAnswers": [
			{ "id": "dcc0a920-f9b9-4af6-a541-007309b8b79e", "value": "ems" },
			{ "value": "return", "id": "396f95dc-43c6-4ece-a504-3bb9cb6f4edd" },
			{
				"value": "When you want to wrap text around elements (an image)",
				"id": "04f5a1cd-ca8d-49b9-95d1-283d50e9eebf"
			}
		],
		"answers": [
			{
				"value": "When you want to achieve complex responsive layouts ",
				"blockType": "text",
				"id": "695d0e14-5d1f-4d7c-b943-2d206b563aa0",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"id": "04f5a1cd-ca8d-49b9-95d1-283d50e9eebf",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "When you want to wrap text around elements (an image)"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "When you users use Edge, because it does not yet support flex / grid",
				"type": "radio",
				"id": "c3971d99-74f3-458c-b5f0-f9e6c4b83dfb"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "4ae0cae6-888d-40ae-9217-8dffba61bad2",
				"value": "When you want to enforce a stacking context",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "When you want to enforce to take out an element of the document flow to place it on top of an element",
				"blockType": "text",
				"id": "90395e00-562d-4006-b8fc-ca64514142ff"
			},
			{
				"blockType": "text",
				"value": "It is used in combination with anchor tags, which normally scrolls to a place like an anchor, but the float adds a “smooth” and “floaty” experience to it",
				"id": "5aab22e2-cf31-43a4-9aed-34adb20d8f00",
				"type": "radio",
				"placeholder": "Add option"
			}
		],
		"codeBlock": "-",
		"voted": [],
		"pollNumber": 16,
		"type": "radio",
		"question": "In CSS, the float property knew glory for a long time, although barely useful now, in what situation is it’s use not a crime?"
	},
	{
		"type": "radio",
		"pollNumber": 15,
		"id": "48b05fc3-fd4a-49fc-a38f-fe13c7c201f8",
		"answers": [
			{
				"placeholder": "Add option",
				"blockType": "code",
				"id": "695d0e14-5d1f-4d7c-b943-2d206b563aa0",
				"value": "[2, 4, 6, 8, 10, 12, 14]",
				"type": "radio"
			},
			{
				"id": "04f5a1cd-ca8d-49b9-95d1-283d50e9eebf",
				"type": "radio",
				"blockType": "code",
				"placeholder": "Add option",
				"value": "Uncaught TypeError: Cannot read properties of undefined"
			},
			{
				"type": "radio",
				"id": "c3971d99-74f3-458c-b5f0-f9e6c4b83dfb",
				"blockType": "code",
				"placeholder": "Add option",
				"value": "[1, 2, 3, 4, 5, 6, 7]"
			},
			{
				"type": "radio",
				"value": "null",
				"placeholder": "Add option",
				"blockType": "code",
				"id": "4ae0cae6-888d-40ae-9217-8dffba61bad2"
			},
			{
				"id": "90395e00-562d-4006-b8fc-ca64514142ff",
				"value": "[]",
				"type": "radio",
				"blockType": "code",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"blockType": "code",
				"id": "5aab22e2-cf31-43a4-9aed-34adb20d8f00",
				"type": "radio",
				"value": "[\"2\", \"4\", \"6\", \"8\", \"10\", \"12\", \"14\"]"
			},
			{
				"type": "radio",
				"id": "1a09e441-28eb-4f17-862e-32e22eb83e06",
				"blockType": "code",
				"value": "undefined",
				"placeholder": "Add option"
			}
		],
		"category": "javascript",
		"voted": [],
		"question": "See the following JavaScript code on your screen, if ran in the browser, what should the output have been?",
		"status": "closed",
		"openingTime": null,
		"correctAnswers": [
			{ "value": "ems", "id": "dcc0a920-f9b9-4af6-a541-007309b8b79e" },
			{ "id": "396f95dc-43c6-4ece-a504-3bb9cb6f4edd", "value": "return" }
		],
		"codeBlock": "const multiply = [1, 2, 3, 4, 5, 6, 7].forEach(item => item * 2); \nconsole.log(multiply);"
	},
	{
		"question": "In JS, there is a statement to make function execution end, now what is this right statement for this you would recommend? ",
		"id": "0919b78b-f3a0-4dea-b958-78e1d781746f",
		"answers": [
			{
				"value": "retreat",
				"blockType": "text",
				"id": "95b65c00-a6c6-41d3-9579-f29aa85f0eca",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "end",
				"id": "b142f349-5657-49fe-b55e-29a94f7cb0dc",
				"type": "radio"
			},
			{
				"value": "exit",
				"blockType": "text",
				"id": "c4d5e068-3dc1-4b5c-ae9f-d0716f2f67be",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"value": ":wq",
				"id": "89744fdc-2deb-412e-9350-38402632515f",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "return",
				"type": "radio",
				"blockType": "text",
				"id": "396f95dc-43c6-4ece-a504-3bb9cb6f4edd",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"value": "stop",
				"id": "11f3fe4e-666f-4e74-8bf8-ed4d8c19253d",
				"type": "radio",
				"blockType": "text"
			},
			{
				"value": "rescue",
				"placeholder": "Add option",
				"id": "c0773cb4-bf46-420d-a08d-b5d27092ac5c",
				"type": "radio",
				"blockType": "text"
			},
			{
				"value": "back-off",
				"blockType": "text",
				"type": "radio",
				"id": "01df60e7-7285-4092-918b-521cd3ae49c7",
				"placeholder": "Add option"
			},
			{
				"id": "695d0e14-5d1f-4d7c-b943-2d206b563aa0",
				"blockType": "text",
				"value": "kthnxbye",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "04f5a1cd-ca8d-49b9-95d1-283d50e9eebf",
				"type": "radio",
				"value": "break"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"value": "You can’t do do this manually, a function automatically ends when there is no code to execute anymore",
				"type": "radio",
				"id": "c3971d99-74f3-458c-b5f0-f9e6c4b83dfb"
			}
		],
		"correctAnswers": [
			{ "value": "ems", "id": "dcc0a920-f9b9-4af6-a541-007309b8b79e" },
			{ "value": "return", "id": "396f95dc-43c6-4ece-a504-3bb9cb6f4edd" }
		],
		"codeBlock": "",
		"openingTime": 1665860512740,
		"status": "closed",
		"type": "radio",
		"category": "javascript",
		"pollNumber": 14,
		"voted": []
	},
	{
		"question": "This poll may be an easy one to get right, what's the name of the DOM that is supposed to be light? ",
		"id": "020df9c6-6ed6-400f-b35f-0d06ee1538a5",
		"status": "new",
		"codeSandboxExample": "",
		"correctAnswers": [
			{ "id": "dcc0a920-f9b9-4af6-a541-007309b8b79e", "value": "ems" },
			{
				"id": "c4d5e068-3dc1-4b5c-ae9f-d0716f2f67be",
				"value": "Virtual DOM "
			}
		],
		"voted": [],
		"answers": [
			{
				"autoFocus": false,
				"value": "Qwik DOM: React uses the latest FE technology build by Qwik",
				"type": "radio",
				"blockType": "text",
				"id": "95b65c00-a6c6-41d3-9579-f29aa85f0eca",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"autoFocus": false,
				"id": "b142f349-5657-49fe-b55e-29a94f7cb0dc",
				"value": "Shadow DOM: The DOM below the normal DOM. It's way faster and convenient for operations React performs",
				"blockType": "text",
				"type": "radio"
			},
			{
				"id": "c4d5e068-3dc1-4b5c-ae9f-d0716f2f67be",
				"value": "Virtual DOM: a concept implemented by libraries in JavaScript on top of browser API",
				"blockType": "text",
				"placeholder": "Add option",
				"autoFocus": false,
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "React DOM: The DOM used by React as object tree",
				"id": "89744fdc-2deb-412e-9350-38402632515f",
				"type": "radio",
				"blockType": "text",
				"autoFocus": false
			},
			{
				"blockType": "text",
				"type": "radio",
				"autoFocus": false,
				"placeholder": "Add option",
				"value": "It's just called the \"DOM\": The React team just uses DOM to operate ",
				"id": "396f95dc-43c6-4ece-a504-3bb9cb6f4edd"
			},
			{
				"type": "radio",
				"value": "DOM 2.0: The React team came with an upgrade of the DOM, with corresponding facets like Synthetic Events",
				"id": "11f3fe4e-666f-4e74-8bf8-ed4d8c19253d",
				"placeholder": "Add option",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "c0773cb4-bf46-420d-a08d-b5d27092ac5c",
				"value": "Vue DOM: React relies Vue technology for this",
				"autoFocus": false,
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"id": "01df60e7-7285-4092-918b-521cd3ae49c7",
				"type": "radio",
				"value": "Sonic DOM: Inspired from the fastest Hedgehog in history ",
				"autoFocus": false,
				"blockType": "text"
			},
			{
				"autoFocus": true,
				"id": "be3b88fa-99fe-4d7e-888d-2b6bcd22f44e",
				"blockType": "text",
				"type": "radio",
				"value": "FB-DOM: Facebook owns React, but nobody really knows that so Mark Zuckerberg wanted to increase brand awareness ",
				"placeholder": "Add option"
			}
		],
		"category": "react",
		"openingTime": null,
		"type": "radio",
		"codeBlock": "",
		"pollNumber": 13
	},
	{
		"category": "javascript",
		"status": "closed",
		"codeBlock": "const favoriteFood = \"pizza\";  favoriteFood.reverse();",
		"pollNumber": 12,
		"correctAnswers": [
			{ "id": "dcc0a920-f9b9-4af6-a541-007309b8b79e", "value": "ems" },
			{
				"value": "Virtual DOM ",
				"id": "c4d5e068-3dc1-4b5c-ae9f-d0716f2f67be"
			}
		],
		"id": "7e8ace8f-0233-42fe-91a4-7bd7fbf9fdd4",
		"question": "In JS, sometimes errors raise unexpected, what is the name of this type of error produced by this code which should be corrected?  ",
		"voted": [],
		"answers": [
			{
				"value": "SyntaxError",
				"type": "radio",
				"id": "95b65c00-a6c6-41d3-9579-f29aa85f0eca",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"id": "b142f349-5657-49fe-b55e-29a94f7cb0dc",
				"blockType": "text",
				"value": "EvalError",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"value": "TypeError ",
				"blockType": "text",
				"id": "c4d5e068-3dc1-4b5c-ae9f-d0716f2f67be"
			},
			{
				"id": "89744fdc-2deb-412e-9350-38402632515f",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "UriError"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "RangeError",
				"id": "396f95dc-43c6-4ece-a504-3bb9cb6f4edd",
				"type": "radio"
			},
			{
				"id": "11f3fe4e-666f-4e74-8bf8-ed4d8c19253d",
				"blockType": "text",
				"value": "ReferenceError",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"id": "c0773cb4-bf46-420d-a08d-b5d27092ac5c",
				"type": "radio",
				"value": "Error",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "01df60e7-7285-4092-918b-521cd3ae49c7",
				"value": "MethodError",
				"placeholder": "Add option"
			},
			{
				"id": "635fbe72-8f45-4082-bf71-471c86906786",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text",
				"value": "It doesn’t return an error, it will just return undefined"
			}
		],
		"type": "radio",
		"openingTime": null
	},
	{
		"question": "In React,`context` is a technique you sometimes involve, but what is it and what problem does `context` solve?",
		"pollNumber": 11,
		"answers": [
			{
				"value": "It is the same as the keyword `this` because `this` is `context` dependent and was used very much in class components. Since React is not class based anymore the React team came up with `context` as replacement which can be used in function components",
				"id": "42b7a63d-e489-42a2-8642-087240ed36d8",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "1132980c-ded0-4d06-9cef-dd24eb1ebdf5",
				"placeholder": "Add option",
				"value": "It is a built-in “broadcast” mechanism to share and persist data across components. It solves the prop drilling problem because you can call context in any component wrapped with a provider, and helps you manage local/global state",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "76834a9d-177d-4716-a101-fb5bcca5652e",
				"placeholder": "Add option",
				"value": "It is a mechanism to optimizes your components in a certain context",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "1a79ba78-0230-4f7d-bb60-91b9baafd383",
				"type": "radio",
				"placeholder": "Add option",
				"value": "It is an external state management library like Redux or MobX and often used with React, which makes everyone think it’s built in React"
			}
		],
		"voted": [],
		"status": "closed",
		"codeBlock": "",
		"openingTime": null,
		"category": "react",
		"type": "radio",
		"correctAnswers": [
			{ "value": "ems", "id": "dcc0a920-f9b9-4af6-a541-007309b8b79e" },
			{ "id": "1132980c-ded0-4d06-9cef-dd24eb1ebdf5", "value": "%" }
		],
		"id": "32373fc1-c4aa-4825-ba9e-6601674003be"
	},
	{
		"pollNumber": 10,
		"status": "new",
		"correctAnswers": [
			{ "id": "dcc0a920-f9b9-4af6-a541-007309b8b79e", "value": "ems" },
			{ "id": "1132980c-ded0-4d06-9cef-dd24eb1ebdf5", "value": "%" }
		],
		"type": "radio",
		"answers": [
			{
				"value": "classes, attributes and psuedo classes > elements and psuedo elements > id’s > inline styles",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "42b7a63d-e489-42a2-8642-087240ed36d8"
			},
			{
				"type": "radio",
				"id": "1132980c-ded0-4d06-9cef-dd24eb1ebdf5",
				"placeholder": "Add option",
				"value": "elements and psuedo elements > classes, attributes and psuedo classes > id’s > inline styles",
				"blockType": "text"
			},
			{
				"value": "id’s > classes, attributes and psuedo classes > elements and psuedo elements > id’s > inline styles",
				"type": "radio",
				"placeholder": "Add option",
				"id": "76834a9d-177d-4716-a101-fb5bcca5652e",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "inline styles  > classes, attributes and psuedo classes > elements and psuedo elements > id’s ",
				"placeholder": "Add option",
				"id": "1a79ba78-0230-4f7d-bb60-91b9baafd383"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "b5e90a5b-b110-4422-8159-65a0ec23e176",
				"value": "It depends on the browser and user settings",
				"placeholder": "Add option"
			}
		],
		"id": "f87fd4e5-2d55-49fb-a714-1833cafa2046",
		"voted": [],
		"openingTime": null,
		"codeBlock": "",
		"category": "css",
		"question": "In CSS, selector specificity rules should be used wisely, now which answer contains the right order of selectors from lowest to highest precisely?"
	},
	{
		"pollNumber": 9,
		"category": "css",
		"answers": [
			{
				"id": "eioozak-ojnab",
				"blockType": "code",
				"value": "rems",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"value": "px",
				"blockType": "code",
				"placeholder": "Add option",
				"id": "a2b3237b-e710-443e-9485-6864cf439c10",
				"type": "radio"
			},
			{
				"blockType": "code",
				"type": "radio",
				"placeholder": "Add option",
				"value": "vw / vh",
				"id": "82d4cf55-25a8-4e9c-a136-0d58fea3a4ba"
			},
			{
				"placeholder": "Add option",
				"blockType": "code",
				"id": "7903a431-dd66-477c-9981-e373a161e403",
				"type": "radio",
				"value": "vmin / vmax"
			},
			{
				"blockType": "code",
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e",
				"type": "radio",
				"placeholder": "Add option",
				"value": "ems"
			},
			{
				"blockType": "code",
				"id": "42b7a63d-e489-42a2-8642-087240ed36d8",
				"placeholder": "Add option",
				"value": "cm",
				"type": "radio"
			},
			{
				"type": "radio",
				"id": "1132980c-ded0-4d06-9cef-dd24eb1ebdf5",
				"value": "%",
				"blockType": "code",
				"placeholder": "Add option"
			},
			{
				"value": "ch",
				"type": "radio",
				"id": "76834a9d-177d-4716-a101-fb5bcca5652e",
				"blockType": "code",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"value": "fr",
				"placeholder": "Add option",
				"id": "1a79ba78-0230-4f7d-bb60-91b9baafd383",
				"blockType": "code"
			}
		],
		"voted": [],
		"id": "d26f0c6c-f031-47eb-9a7f-ae5bb5159b47",
		"openingTime": null,
		"codeBlock": "",
		"question": "In CSS, which unit you use in development, is relative to the font-size of the parent element?",
		"type": "checkbox",
		"status": "closed",
		"correctAnswers": [
			{ "id": "dcc0a920-f9b9-4af6-a541-007309b8b79e", "value": "ems" },
			{ "id": "1132980c-ded0-4d06-9cef-dd24eb1ebdf5", "value": "%" }
		]
	},
	{
		"question": "In JS, with `const` assignments you communicate immutability, now what are technical features to know about this instantly? ",
		"category": "javascript",
		"voted": [],
		"openingTime": null,
		"status": "closed",
		"correctAnswers": [
			{ "value": "const is block scoped ", "id": "eioozak-ojnab" },
			{
				"value": "Arrays and objects assigned with const can be updated",
				"id": "e53b55ec-23a5-437d-9835-ca716d93ba8b"
			}
		],
		"id": "912a0c1e-bd3f-4ba4-9bb9-411568419567",
		"codeBlock": "",
		"pollNumber": 8,
		"type": "checkbox",
		"answers": [
			{
				"value": "const is block scoped ",
				"type": "radio",
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"blockType": "text",
				"id": "a2b3237b-e710-443e-9485-6864cf439c10",
				"type": "radio",
				"value": "const can only be declared with uppercase letters "
			},
			{
				"blockType": "text",
				"value": "Even with const, arrays and objects can be reassigned because they are not primitive values",
				"placeholder": "Add option",
				"id": "82d4cf55-25a8-4e9c-a136-0d58fea3a4ba",
				"type": "radio"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"value": "const doesn’t have to be assigned when they are declared",
				"type": "radio",
				"id": "7903a431-dd66-477c-9981-e373a161e403"
			},
			{
				"placeholder": "Add option",
				"value": "const is still not supported in the latest browsers, so you need transpiling",
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "You can use a const variable before it’s declared",
				"type": "radio",
				"id": "42b7a63d-e489-42a2-8642-087240ed36d8",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"id": "e53b55ec-23a5-437d-9835-ca716d93ba8b",
				"placeholder": "Add option",
				"value": "Arrays and objects assigned with const can be updated",
				"type": "radio"
			}
		]
	},
	{
		"question": "In React, prop drilling is popular and renowned, but what are disadvantages of passing data this way around?",
		"status": "closed",
		"voted": [],
		"pollNumber": 7,
		"openingTime": null,
		"codeBlock": "",
		"id": "881b750e-1937-461e-8533-a73861c41fca",
		"answers": [
			{
				"blockType": "text",
				"type": "radio",
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"value": "Components have a maximum amount of props they can take, so prop drilling should be used sparingly"
			},
			{
				"blockType": "text",
				"type": "radio",
				"id": "a2b3237b-e710-443e-9485-6864cf439c10",
				"value": "Prop drilling comes with a security risk, because passing data around to components that should not be aware of certain data enables data leaks and raises the risks of security, so prop drilling should only be used when you really have to ",
				"placeholder": "Add option"
			},
			{
				"blockType": "text",
				"id": "82d4cf55-25a8-4e9c-a136-0d58fea3a4ba",
				"placeholder": "Add option",
				"type": "radio",
				"value": "Prop drilled components are harder to maintain"
			},
			{
				"type": "radio",
				"id": "7903a431-dd66-477c-9981-e373a161e403",
				"value": "Prop drilled components will load slower and may cause memory leaks (however, this is fixable with useMemo / useCallback)",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"value": "Components that should not otherwise be aware of the data become unnecessarily complicated",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e"
			}
		],
		"correctAnswers": [
			{
				"value": "Prop drilled components are harder to maintain",
				"id": "82d4cf55-25a8-4e9c-a136-0d58fea3a4ba"
			},
			{
				"id": "dcc0a920-f9b9-4af6-a541-007309b8b79e",
				"value": "Components that should not otherwise be aware of the data become unnecessarily complicated"
			}
		],
		"category": "react",
		"type": "checkbox"
	},
	{
		"codeBlock": "",
		"openingTime": null,
		"category": "css",
		"voted": [],
		"pollNumber": 6,
		"answers": [
			{
				"blockType": "text",
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"value": "`div + div`, The “adjacent sibling selector” is used to select an element that is immediately followed by another specific element.",
				"type": "radio"
			},
			{
				"value": "`div < div`, The “adjacent sibling selector” is used to select an element that is immediately before another specific element.",
				"placeholder": "Add option",
				"type": "radio",
				"id": "a2b3237b-e710-443e-9485-6864cf439c10",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"id": "82d4cf55-25a8-4e9c-a136-0d58fea3a4ba",
				"type": "radio",
				"value": "`div > div`, The “adjacent sibling selector” is used to select an element that is the direct child"
			},
			{
				"id": "7903a431-dd66-477c-9981-e373a161e403",
				"placeholder": "Add option",
				"value": "`div div`, The “adjacent sibling selector” is used to select all elements within given the selector",
				"blockType": "text",
				"type": "radio"
			},
			{
				"value": "The “adjacent sibling selector” allows the ability to nest in CSS",
				"id": "69b4390a-148b-48be-99e5-8a445fd581d8",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "731ccba3-766a-4531-b7b0-1833bfbc3c0c",
				"value": "There is no such thing as an “adjacent sibling selector” in CSS yet, but it’s a proposal for CSS4 and not yet fully elaborated",
				"blockType": "text",
				"type": "radio"
			}
		],
		"type": "radio",
		"status": "closed",
		"question": "In CSS, “adjacent sibling selector” is something known by each CSS freak, now how does it look like and what does it achieve as technique? ",
		"correctAnswers": [
			{
				"value": "`div + div`, The “adjacent sibling selector” is used to select an element that is immediately followed by another specific element.",
				"id": "eioozak-ojnab"
			}
		],
		"id": "40675100-d65a-452a-9abf-39cfeebf564f"
	},
	{
		"codeBlock": " [25, 10, 78, 100, 35].sort();",
		"openingTime": null,
		"answers": [
			{
				"type": "radio",
				"blockType": "code",
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"value": "[10, 25, 35, 78, 100]"
			},
			{
				"placeholder": "Add option",
				"value": "[100, 78, 35, 25, 10]",
				"type": "radio",
				"blockType": "code",
				"id": "f899ca4d-b92f-43c0-98c3-8ca574213a16"
			},
			{
				"value": "“10, 25, 35, 78, 100” ",
				"id": "f24ae4c5-b100-4828-bd27-3846d574508e",
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"id": "c0ffbcaa-21ec-4566-8553-988548a8d063",
				"blockType": "code",
				"placeholder": "Add option",
				"type": "radio",
				"value": "[NaN, NaN, NaN, NaN, NaN]"
			},
			{
				"placeholder": "Add option",
				"id": "d9774a9f-88f8-430d-ad8c-ae25214c45f5",
				"type": "radio",
				"value": "`.sort()` is not a function on internal array types",
				"blockType": "text"
			},
			{
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio",
				"value": "There is no one size-fits answer here, because every browser engine deals with this differently. In the newest ES the sort() function will be deprecated.",
				"id": "3535ef4e-5fb1-4ee1-b220-239714abc5df"
			}
		],
		"type": "radio",
		"status": "closed",
		"category": "javascript",
		"id": "f8970ce2-da6f-4c39-9827-52c369de444f",
		"pollNumber": 5,
		"correctAnswers": [{ "value": "js", "id": "eioozak-ojnab" }],
		"question": "In JS, the `.sort()` function sorts values in arrays alphabetically, what is the output of the following code unexpectedly? ",
		"voted": []
	},
	{
		"codeSandboxExample": "",
		"correctAnswers": [
			{
				"value": "content, padding, border, margin ",
				"id": "76a9628a-1cae-4fda-a104-15b5464b844a"
			}
		],
		"answers": [
			{
				"type": "radio",
				"value": "<html> ",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "eioozak-ojnab"
			},
			{
				"id": "10ffb3d3-a420-4f50-9391-9a428f6c6a60",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text",
				"value": "<marquee>"
			},
			{
				"blockType": "text",
				"type": "radio",
				"placeholder": "Add option",
				"id": "c229219b-0441-4b06-a28d-a109f05904c8",
				"value": "<b>"
			},
			{
				"value": "<em>",
				"id": "76a9628a-1cae-4fda-a104-15b5464b844a",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"value": "<i>",
				"type": "radio",
				"id": "49fe17ab-662a-4167-882f-712b52fe4964",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "84557334-fc03-4480-b144-45d455710733",
				"placeholder": "Add option",
				"value": "<li>"
			},
			{
				"value": "<p>",
				"id": "831f3d03-4d82-4840-88a7-6cdae57ff7d0",
				"placeholder": "Add option",
				"type": "radio",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "085ede35-1a75-47f5-95a3-fdc4a57307f9",
				"value": "<h1>"
			},
			{
				"type": "radio",
				"blockType": "text",
				"id": "e637898b-291a-4008-ae43-db9732ba40bb",
				"placeholder": "Add option",
				"value": "<emphasize>"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "4fd1d958-0559-461d-98d5-063b001e8f35",
				"blockType": "text",
				"value": "<bold>"
			},
			{
				"type": "radio",
				"placeholder": "Add option",
				"value": "<h1 style=\"font-size: 300px\">",
				"blockType": "text",
				"id": "a9beb8bb-a558-4edd-b6a7-5516b148637d"
			}
		],
		"category": "html",
		"id": "e0edb48c-5a60-461b-b51e-9272bdd61443",
		"openingTime": null,
		"codeBlock": "",
		"voted": [],
		"status": "closed",
		"pollNumber": 4,
		"type": "radio",
		"question": "With this question you won’t win a prize, but which HTML tag is used for text we want to emphasize?"
	},
	{
		"id": "0185424b-8526-472b-b60d-0e58efcd150f",
		"type": "radio",
		"openingTime": null,
		"voted": [],
		"pollNumber": 3,
		"answers": [
			{
				"type": "radio",
				"placeholder": "Add option",
				"id": "eioozak-ojnab",
				"blockType": "text",
				"value": "content, padding, margin"
			},
			{
				"placeholder": "Add option",
				"value": "margin, border, padding, content",
				"type": "radio",
				"id": "10ffb3d3-a420-4f50-9391-9a428f6c6a60",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"id": "c229219b-0441-4b06-a28d-a109f05904c8",
				"blockType": "text",
				"value": "content, border, padding, border (dashed), border, margin, border (dashed)",
				"type": "radio"
			},
			{
				"id": "76a9628a-1cae-4fda-a104-15b5464b844a",
				"value": "content, padding, border, margin ",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio"
			},
			{
				"placeholder": "Add option",
				"type": "radio",
				"id": "49fe17ab-662a-4167-882f-712b52fe4964",
				"blockType": "text",
				"value": "padding, border, margin"
			}
		],
		"correctAnswers": [
			{
				"id": "76a9628a-1cae-4fda-a104-15b5464b844a",
				"value": "content, padding, border, margin "
			}
		],
		"category": "css",
		"codeBlock": "",
		"question": "In CSS, the box model is wrapped around every HTML element without a doubt, now tell me what does the box model consist of from inside out?",
		"status": "closed"
	},
	{
		"voted": [],
		"openingTime": null,
		"category": "html",
		"codeBlock": "",
		"status": "closed",
		"id": "eee01488-6c83-43ec-b85c-6e2574596854",
		"question": "In HTML, `<meta>` tags are useful, but which answers listed below are untruthful? ",
		"pollNumber": 2,
		"type": "checkbox",
		"correctAnswers": [
			{
				"value": "Meta tags are added in the footer",
				"id": "98f0c99a-706d-42a0-8086-35b51df63226"
			},
			{
				"value": "Meta tags are used to integrate metaverse in websites/apps, hence “meta” ",
				"id": "c40514c0-8cd9-41e9-9d09-521fdf9cd59c"
			},
			{
				"id": "248e4ef1-e45b-4080-9351-d02152e2c9ba",
				"value": "Meta tags are rendered and visible to the end user. To hide them, CSS is often used (display:none). Nowadays CSS resets also takes care of that."
			}
		],
		"answers": [
			{
				"id": "eioozak-ojnab",
				"type": "radio",
				"value": "Meta tags are a way to enhance information about a website",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "Meta tags are added in the footer",
				"id": "98f0c99a-706d-42a0-8086-35b51df63226",
				"blockType": "text",
				"placeholder": "Add option",
				"type": "radio"
			},
			{
				"blockType": "text",
				"id": "6eb0f34b-0e21-4390-9c9a-f0573d61464c",
				"placeholder": "Add option",
				"value": "Meta tags are used to control “viewport settings” for example",
				"type": "radio"
			},
			{
				"id": "882135a9-1e4e-4c94-9a20-45519e503672",
				"placeholder": "Add option",
				"value": "Some meta tags have control of the users visible area of a page",
				"type": "radio",
				"blockType": "text"
			},
			{
				"placeholder": "Add option",
				"value": "Meta tags provide information for search engines",
				"blockType": "text",
				"id": "1c0aff73-5afc-4829-8b1a-cb236083e3f7",
				"type": "radio"
			},
			{
				"id": "c40514c0-8cd9-41e9-9d09-521fdf9cd59c",
				"type": "radio",
				"placeholder": "Add option",
				"value": "Meta tags are used to integrate metaverse in websites/apps, hence “meta” ",
				"blockType": "text"
			},
			{
				"id": "248e4ef1-e45b-4080-9351-d02152e2c9ba",
				"placeholder": "Add option",
				"blockType": "text",
				"type": "radio",
				"value": "Meta tags are rendered and visible to the end user. To hide them, CSS is often used (display:none). Nowadays CSS resets also takes care of that."
			}
		]
	},
	{
		"answers": [
			{
				"type": "radio",
				"id": "eioozak-ojnab",
				"placeholder": "Add option",
				"value": "Primitives are immutable ",
				"blockType": "text"
			},
			{
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option",
				"id": "9f4666fc-59ea-4365-9f83-1c29b3982e84",
				"value": "All datatypes are primitives"
			},
			{
				"id": "74485015-847f-4d7d-bd4c-957ef7bda93e",
				"value": "`null` and `undefined` are not primitives",
				"type": "radio",
				"blockType": "text",
				"placeholder": "Add option"
			},
			{
				"id": "8f98325c-5a65-48aa-bbc4-47b5c6452370",
				"placeholder": "Add option",
				"value": "Primitives have no properties or methods",
				"type": "radio",
				"blockType": "text"
			},
			{
				"id": "79330fd5-875f-4917-bfc4-4436c6388db1",
				"value": "To date, there are 7 primitives",
				"type": "radio",
				"placeholder": "Add option",
				"blockType": "text"
			},
			{
				"value": "Primitives can be altered directly",
				"blockType": "text",
				"id": "c3fd254f-7538-468d-bb5d-67ae4776be0e",
				"type": "radio",
				"placeholder": "Add option"
			},
			{
				"type": "radio",
				"blockType": "text",
				"value": "Before ES6, there were no primitives in JavaScript yet",
				"placeholder": "Add option",
				"id": "9e4f31d2-c755-4965-bbde-e5805aa991e7"
			}
		],
		"question": "In JS, primitive values are the language fundamental, which properties does each primitive resemble? ",
		"pollNumber": 1,
		"voted": [],
		"openingTime": null,
		"type": "checkbox",
		"id": "1273c829-0885-45bb-9eb5-7ae4fb7f80e5",
		"correctAnswers": [
			{
				"value": "To date, there are 7 primitives",
				"id": "79330fd5-875f-4917-bfc4-4436c6388db1"
			},
			{ "value": "Primitives are immutable ", "id": "eioozak-ojnab" }
		],
		"category": "javascript",
		"codeBlock": "",
		"status": "closed"
	}
]
